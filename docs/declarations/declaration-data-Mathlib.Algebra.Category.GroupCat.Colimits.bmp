{"name":"Mathlib.Algebra.Category.GroupCat.Colimits","instances":[{"typeNames":["AddCommGroupCat.Colimits.Prequotient"],"name":"AddCommGroupCat.Colimits.instInhabitedPrequotient","className":"Inhabited"},{"typeNames":["AddCommGroupCat.Colimits.Prequotient"],"name":"AddCommGroupCat.Colimits.colimitSetoid","className":"Setoid"},{"typeNames":["AddCommGroupCat.Colimits.ColimitType"],"name":"AddCommGroupCat.Colimits.instAddCommGroupColimitType","className":"AddCommGroup"},{"typeNames":["AddCommGroupCat.Colimits.ColimitType"],"name":"AddCommGroupCat.Colimits.ColimitTypeInhabited","className":"Inhabited"},{"typeNames":["AddCommGroupCat"],"name":"AddCommGroupCat.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGroupCatMax"],"name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGroupCatMax"],"name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_1","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGroupCatMax"],"name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_2","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGroupCatMax"],"name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_3","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["AddCommGroupCat"],"name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatInstAddCommGroupCatLargeCategory","className":"CategoryTheory.Limits.HasColimitsOfSize"}],"imports":["Init","Mathlib.Algebra.Category.GroupCat.Preadditive","Mathlib.GroupTheory.QuotientGroup","Mathlib.CategoryTheory.Limits.Shapes.Kernels","Mathlib.CategoryTheory.Limits.Shapes.FiniteLimits","Mathlib.CategoryTheory.ConcreteCategory.Elementwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L284-L303","name":"AddCommGroupCat.cokernelIsoQuotient","line":284,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.cokernelIsoQuotient","doc":"The categorical cokernel of a morphism in `AddCommGroupCat`\nagrees with the usual group-theoretical quotient.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.cokernelIsoQuotient\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">cokernelIsoQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel\">CategoryTheory.Limits.cokernel</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat.of\">AddCommGroupCat.of</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#AddMonoidHom.range\">AddMonoidHom.range</a> <span class=\"fn\">f</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L264-L264","name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatInstAddCommGroupCatLargeCategory","line":264,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatInstAddCommGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatInstAddCommGroupCatLargeCategory\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGroupCatInstAddCommGroupCatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{0, 0, u, u + 1}</a>              <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L263-L263","name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_3","line":263,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_3\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{v, u, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCatMax\">AddCommGroupCatMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L262-L262","name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_2","line":262,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_2\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{u, v, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCatMax\">AddCommGroupCatMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L261-L261","name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_1","line":261,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_1\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{u, u, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCatMax\">AddCommGroupCatMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L260-L260","name":"AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory","line":260,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">instHasColimitsOfSizeAddCommGroupCatMaxInstAddCommGroupCatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{v, v, max u v, max (u + 1) (v + 1)}</a>                                  <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCatMax\">AddCommGroupCatMax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L257-L257","name":"AddCommGroupCat.hasColimits","line":257,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimits\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L254-L255","name":"AddCommGroupCat.hasColimitsOfSize","line":254,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimitsOfSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimitsOfSize\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">hasColimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">CategoryTheory.Limits.HasColimitsOfSize.{v, u, max (max u v) w, max (max (u + 1) (v + 1)) (w + 1)}</a>                                                        <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L251-L252","name":"AddCommGroupCat.hasColimitsOfShape","line":251,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimitsOfShape\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">hasColimitsOfShape</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">CategoryTheory.Limits.HasColimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L247-L247","name":"AddCommGroupCat.hasColimit","line":247,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.hasColimit\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">hasColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">CategoryTheory.Limits.HasColimit</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L228-L242","name":"AddCommGroupCat.Colimits.colimitCoconeIsColimit","line":228,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitCoconeIsColimit","doc":"Evidence that the proposed colimit is the colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitCoconeIsColimit\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimitCoconeIsColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitCocone\">AddCommGroupCat.Colimits.colimitCocone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L220-L224","name":"AddCommGroupCat.Colimits.descMorphism","line":220,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.descMorphism","doc":"The group homomorphism from the colimit abelian group to the cone point of any other cocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.descMorphism\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">descMorphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimit\">AddCommGroupCat.Colimits.colimit</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L196-L216","name":"AddCommGroupCat.Colimits.descFun","line":196,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.descFun","doc":"The function from the colimit abelian group to the cone point of any other cocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.descFun\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">descFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitType\">AddCommGroupCat.Colimits.ColimitType</a> <span class=\"fn\">F</span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L188-L192","name":"AddCommGroupCat.Colimits.descFunLift","line":188,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.descFunLift","doc":"The function from the free abelian group on the diagram to the cone point of any other\ncocone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.descFunLift\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">descFunLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.pt</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L180-L182","name":"AddCommGroupCat.Colimits.colimitCocone","line":180,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitCocone","doc":"The cocone over the proposed colimit abelian group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitCocone\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimitCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L173-L176","name":"AddCommGroupCat.Colimits.cocone_naturality_components","line":173,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.cocone_naturality_components","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.cocone_naturality_components\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">cocone_naturality_components</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j' : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeMorphism\">AddCommGroupCat.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j'</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeMorphism\">AddCommGroupCat.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L165-L169","name":"AddCommGroupCat.Colimits.cocone_naturality","line":165,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.cocone_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.cocone_naturality\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">cocone_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j' : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeMorphism\">AddCommGroupCat.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeMorphism\">AddCommGroupCat.Colimits.coconeMorphism</a> <span class=\"fn\">F</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L158-L161","name":"AddCommGroupCat.Colimits.coconeMorphism","line":158,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeMorphism","doc":"The group homomorphism from a given abelian group in the diagram to the colimit abelian\ngroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeMorphism\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">coconeMorphism</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimit\">AddCommGroupCat.Colimits.colimit</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L152-L153","name":"AddCommGroupCat.Colimits.coconeFun","line":152,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeFun","doc":"The function from a given abelian group in the diagram to the colimit abelian group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.coconeFun\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">coconeFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitType\">AddCommGroupCat.Colimits.ColimitType</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L147-L148","name":"AddCommGroupCat.Colimits.colimit","line":147,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimit","doc":"The bundled abelian group giving the colimit of a diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimit\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L139-L143","name":"AddCommGroupCat.Colimits.quot_add","line":139,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.quot_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.quot_add\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">quot_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L131-L135","name":"AddCommGroupCat.Colimits.quot_neg","line":131,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.quot_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.quot_neg\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">quot_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg\">AddCommGroupCat.Colimits.Prequotient.neg</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L126-L127","name":"AddCommGroupCat.Colimits.quot_zero","line":126,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.quot_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.quot_zero\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">quot_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">Setoid.r</span> <span class=\"fn\">AddCommGroupCat.Colimits.Prequotient.zero</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L123-L123","name":"AddCommGroupCat.Colimits.ColimitTypeInhabited","line":123,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitTypeInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitTypeInhabited\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">ColimitTypeInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitType\">AddCommGroupCat.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L111-L121","name":"AddCommGroupCat.Colimits.instAddCommGroupColimitType","line":111,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.instAddCommGroupColimitType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.instAddCommGroupColimitType\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instAddCommGroupColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitType\">AddCommGroupCat.Colimits.ColimitType</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L107-L108","name":"AddCommGroupCat.Colimits.ColimitType","line":107,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitType","doc":"The underlying type of the colimit of a diagram in `AddCommGroupCat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.ColimitType\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">ColimitType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v w)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L98-L100","name":"AddCommGroupCat.Colimits.colimitSetoid","line":98,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitSetoid","doc":"The setoid corresponding to group expressions modulo abelian group relations and identifications.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.colimitSetoid\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">colimitSetoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L92-L92","name":"AddCommGroupCat.Colimits.Relation.add_assoc","line":92,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_assoc\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">z</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L91-L91","name":"AddCommGroupCat.Colimits.Relation.add_comm","line":91,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_comm\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L90-L90","name":"AddCommGroupCat.Colimits.Relation.add_left_neg","line":90,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_left_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_left_neg\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_left_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg\">AddCommGroupCat.Colimits.Prequotient.neg</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">x</span></span>)</span>\n  <span class=\"fn\">AddCommGroupCat.Colimits.Prequotient.zero</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L89-L89","name":"AddCommGroupCat.Colimits.Relation.add_zero","line":89,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_zero\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">AddCommGroupCat.Colimits.Prequotient.zero</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L88-L88","name":"AddCommGroupCat.Colimits.Relation.zero_add","line":88,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.zero_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.zero_add\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">zero_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">AddCommGroupCat.Colimits.Prequotient.zero</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L86-L86","name":"AddCommGroupCat.Colimits.Relation.add_2","line":86,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_2\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span> <span class=\"fn\">y'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L85-L85","name":"AddCommGroupCat.Colimits.Relation.add_1","line":85,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add_1\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">x'</span> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L84-L84","name":"AddCommGroupCat.Colimits.Relation.neg_1","line":84,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.neg_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.neg_1\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">neg_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x' : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg\">AddCommGroupCat.Colimits.Prequotient.neg</a> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg\">AddCommGroupCat.Colimits.Prequotient.neg</a> <span class=\"fn\">x'</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L81-L82","name":"AddCommGroupCat.Colimits.Relation.add","line":81,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.add\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\">AddCommGroupCat.Colimits.Prequotient.add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L80-L80","name":"AddCommGroupCat.Colimits.Relation.neg","line":80,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.neg\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg\">AddCommGroupCat.Colimits.Prequotient.neg</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L79-L79","name":"AddCommGroupCat.Colimits.Relation.zero","line":79,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.zero\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">0</span></span>)</span>\n  <span class=\"fn\">AddCommGroupCat.Colimits.Prequotient.zero</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L76-L77","name":"AddCommGroupCat.Colimits.Relation.map","line":76,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.map\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j' : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\">AddCommGroupCat.Colimits.Prequotient.of</a> <span class=\"fn\">j</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L74-L74","name":"AddCommGroupCat.Colimits.Relation.trans","line":74,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.trans\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L73-L73","name":"AddCommGroupCat.Colimits.Relation.symm","line":73,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.symm\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L72-L72","name":"AddCommGroupCat.Colimits.Relation.refl","line":72,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation.refl\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\">AddCommGroupCat.Colimits.Relation</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L70-L92","name":"AddCommGroupCat.Colimits.Relation","line":70,"kind":"inductive","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation","doc":"The relation on `prequotient` saying when two expressions are equal\nbecause of the abelian group laws, or\nbecause one element is mapped to another by a morphism in the diagram.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Relation\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Relation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L61-L62","name":"AddCommGroupCat.Colimits.instInhabitedPrequotient","line":61,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.instInhabitedPrequotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.instInhabitedPrequotient\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">instInhabitedPrequotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L58-L58","name":"AddCommGroupCat.Colimits.Prequotient.add","line":58,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.add\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L57-L57","name":"AddCommGroupCat.Colimits.Prequotient.neg","line":57,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.neg\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L56-L56","name":"AddCommGroupCat.Colimits.Prequotient.zero","line":56,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.zero\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L54-L54","name":"AddCommGroupCat.Colimits.Prequotient.of","line":54,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient.of\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\">AddCommGroupCat.Colimits.Prequotient</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/Colimits.lean#L52-L58","name":"AddCommGroupCat.Colimits.Prequotient","line":52,"kind":"inductive","docLink":"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient","doc":"An inductive type representing all group expressions (without relations)\non a collection of types indexed by the objects of `J`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Colimits.html#AddCommGroupCat.Colimits.Prequotient\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">Colimits</span>.<span class=\"name\">Prequotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u v) w)</div></div>"}]}