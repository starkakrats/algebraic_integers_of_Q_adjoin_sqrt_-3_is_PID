{"name":"Mathlib.GroupTheory.SpecificGroups.Quaternion","instances":[{"typeNames":["Eq"],"name":"instDecidableEqQuaternionGroup","className":"Decidable"},{"typeNames":["QuaternionGroup"],"name":"QuaternionGroup.instInhabitedQuaternionGroup","className":"Inhabited"},{"typeNames":["QuaternionGroup"],"name":"QuaternionGroup.instGroupQuaternionGroup","className":"Group"},{"typeNames":["QuaternionGroup"],"name":"QuaternionGroup.instFintypeQuaternionGroup","className":"Fintype"},{"typeNames":["QuaternionGroup"],"name":"QuaternionGroup.instNontrivialQuaternionGroup","className":"Nontrivial"}],"imports":["Init","Mathlib.Data.ZMod.Basic","Mathlib.Data.Nat.Basic","Mathlib.Tactic.IntervalCases","Mathlib.GroupTheory.SpecificGroups.Dihedral","Mathlib.GroupTheory.SpecificGroups.Cyclic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L263-L282","name":"QuaternionGroup.exponent","line":263,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.exponent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.exponent\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">exponent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#GCDMonoid.lcm\">lcm</a> <span class=\"fn\">n</span> <span class=\"fn\">2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L257-L260","name":"QuaternionGroup.orderOf_a","line":257,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.orderOf_a","doc":"If `0 < n`, then `a i` has order `(2 * n) / gcd (2 * n) i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.orderOf_a\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">orderOf_a</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">Nat.gcd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.val\">ZMod.val</a> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L236-L252","name":"QuaternionGroup.orderOf_a_one","line":236,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.orderOf_a_one","doc":"If `0 < n`, then `a 1` has order `2 * n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.orderOf_a_one\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">orderOf_a_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L227-L230","name":"QuaternionGroup.quaternionGroup_one_isCyclic","line":227,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.quaternionGroup_one_isCyclic","doc":"In the special case `n = 1`, `Quaternion 1` is a cyclic group (of order `4`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.quaternionGroup_one_isCyclic\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">quaternionGroup_one_isCyclic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Cyclic.html#IsCyclic\">IsCyclic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L212-L223","name":"QuaternionGroup.orderOf_xa","line":212,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.orderOf_xa","doc":"If `0 < n`, then `xa i` has order 4.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.orderOf_xa\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">orderOf_xa</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L201-L206","name":"QuaternionGroup.xa_pow_four","line":201,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_pow_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_pow_four\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">xa_pow_four</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L197-L197","name":"QuaternionGroup.xa_sq","line":197,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_sq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_sq\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">xa_sq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L190-L193","name":"QuaternionGroup.a_one_pow_n","line":190,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_one_pow_n","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_one_pow_n\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">a_one_pow_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L180-L186","name":"QuaternionGroup.a_one_pow","line":180,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_one_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_one_pow\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">a_one_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L174-L176","name":"QuaternionGroup.card","line":174,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.card","doc":"If `0 < n`, then `QuaternionGroup n` has `4n` elements.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.card\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L169-L170","name":"QuaternionGroup.instNontrivialQuaternionGroup","line":169,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instNontrivialQuaternionGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instNontrivialQuaternionGroup\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">instNontrivialQuaternionGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L166-L167","name":"QuaternionGroup.instFintypeQuaternionGroup","line":166,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instFintypeQuaternionGroup","doc":"If `0 < n`, then `QuaternionGroup n` is a finite group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instFintypeQuaternionGroup\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">instFintypeQuaternionGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L149-L161","name":"QuaternionGroup.quaternionGroupZeroEquivDihedralGroupZero","line":149,"kind":"def","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.quaternionGroupZeroEquivDihedralGroupZero","doc":"The special case that more or less by definition `QuaternionGroup 0` is isomorphic to the\ninfinite dihedral group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.quaternionGroupZeroEquivDihedralGroupZero\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">quaternionGroupZeroEquivDihedralGroupZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L131-L132","name":"QuaternionGroup.one_def","line":131,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.one_def\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">one_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L127-L128","name":"QuaternionGroup.xa_mul_xa","line":127,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_mul_xa","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_mul_xa\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">xa_mul_xa</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L122-L123","name":"QuaternionGroup.xa_mul_a","line":122,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_mul_a","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa_mul_a\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">xa_mul_a</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L117-L118","name":"QuaternionGroup.a_mul_xa","line":117,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_mul_xa","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_mul_xa\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">a_mul_xa</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\">QuaternionGroup.xa</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L112-L113","name":"QuaternionGroup.a_mul_a","line":112,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_mul_a","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a_mul_a\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">a_mul_a</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\">QuaternionGroup.a</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L87-L109","name":"QuaternionGroup.instGroupQuaternionGroup","line":87,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instGroupQuaternionGroup","doc":"The group structure on `QuaternionGroup n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instGroupQuaternionGroup\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">instGroupQuaternionGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L76-L77","name":"QuaternionGroup.instInhabitedQuaternionGroup","line":76,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instInhabitedQuaternionGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.instInhabitedQuaternionGroup\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">instInhabitedQuaternionGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L56-L56","name":"instDecidableEqQuaternionGroup","line":56,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#instDecidableEqQuaternionGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#instDecidableEqQuaternionGroup\"><span class=\"name\">instDecidableEqQuaternionGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L55-L55","name":"QuaternionGroup.xa","line":55,"kind":"ctor","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.xa\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">xa</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L54-L54","name":"QuaternionGroup.a","line":54,"kind":"ctor","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup.a\"><span class=\"name\">QuaternionGroup</span>.<span class=\"name\">a</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\">QuaternionGroup</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/GroupTheory/SpecificGroups/Quaternion.lean#L53-L56","name":"QuaternionGroup","line":53,"kind":"inductive","docLink":"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup","doc":"The (generalised) quaternion group `QuaternionGroup n` of order `4n`. It can be defined by the\npresentation $\\langle a, x | a^{2n} = 1, x^2 = a^n, x^{-1}ax=a^{-1}\\rangle$. We write `a i` for\n$a^i$ and `xa i` for $x * a^i$.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Quaternion.html#QuaternionGroup\"><span class=\"name\">QuaternionGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}