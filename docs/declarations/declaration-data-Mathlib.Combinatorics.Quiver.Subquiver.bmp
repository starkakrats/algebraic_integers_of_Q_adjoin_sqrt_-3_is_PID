{"name":"Mathlib.Combinatorics.Quiver.Subquiver","instances":[{"typeNames":["WideSubquiver","_builtin_typeu"],"name":"wideSubquiverHasCoeToSort","className":"CoeSort"},{"typeNames":["WideSubquiver.toType"],"name":"WideSubquiver.quiver","className":"Quiver"},{"typeNames":["WideSubquiver"],"name":"Quiver.instBotWideSubquiver","className":"Bot"},{"typeNames":["WideSubquiver"],"name":"Quiver.instTopWideSubquiver","className":"Top"},{"typeNames":["WideSubquiver"],"name":"Quiver.instInhabitedWideSubquiver","className":"Inhabited"},{"typeNames":["Quiver.Labelling"],"name":"Quiver.instInhabitedLabelling","className":"Inhabited"}],"imports":["Init","Mathlib.Order.Notation","Mathlib.Combinatorics.Quiver.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L85-L86","name":"Quiver.instInhabitedLabelling","line":85,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instInhabitedLabelling","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instInhabitedLabelling\"><span class=\"name\">Quiver</span>.<span class=\"name\">instInhabitedLabelling</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(L : <a href=\"./foundational_types.html\">Sort</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Labelling\">Quiver.Labelling</a> <span class=\"fn\">V</span> <span class=\"fn\">L</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L81-L82","name":"Quiver.Labelling","line":81,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Labelling","doc":"An `L`-labelling of a quiver assigns to every arrow an element of `L`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Labelling\"><span class=\"name\">Quiver</span>.<span class=\"name\">Labelling</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(L : <a href=\"./foundational_types.html\">Sort</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Sort</a> (imax (u + 1) (u + 1) u_2 u_1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L71-L77","name":"Quiver.wideSubquiverEquivSetTotal","line":71,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.wideSubquiverEquivSetTotal","doc":"A wide subquiver of `G` can equivalently be viewed as a total set of arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.wideSubquiverEquivSetTotal\"><span class=\"name\">Quiver</span>.<span class=\"name\">wideSubquiverEquivSetTotal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L65-L65","name":"Quiver.Total.hom","line":65,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.hom","doc":"an arrow "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.hom\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">self</span>.right</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L63-L63","name":"Quiver.Total.right","line":63,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.right","doc":"the target vertex of an arrow "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.right\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L61-L61","name":"Quiver.Total.left","line":61,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.left","doc":"the source vertex of an arrow "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.left\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L59-L59","name":"Quiver.Total.mk","line":59,"kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.mk\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(left : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(right : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\"><span class=\"fn\">left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">right</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L59-L65","name":"Quiver.Total","line":59,"kind":"structure","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total","doc":"`Total V` is the type of _all_ arrows of `V`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Sort</a> (max (u + 1) v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L58-L58","name":"Quiver.Total.ext_iff","line":58,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.ext_iff\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>} (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.left</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.right</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><span class=\"fn\">x</span>.hom</span> <span class=\"fn\"><span class=\"fn\">y</span>.hom</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L58-L58","name":"Quiver.Total.ext","line":58,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total.ext\"><span class=\"name\">Quiver</span>.<span class=\"name\">Total</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>} (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.Total\">Quiver.Total</a> <span class=\"fn\">V</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.left</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.right</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><span class=\"fn\">x</span>.hom</span> <span class=\"fn\"><span class=\"fn\">y</span>.hom</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L52-L53","name":"Quiver.instInhabitedWideSubquiver","line":52,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instInhabitedWideSubquiver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instInhabitedWideSubquiver\"><span class=\"name\">Quiver</span>.<span class=\"name\">instInhabitedWideSubquiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L49-L50","name":"Quiver.instTopWideSubquiver","line":49,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instTopWideSubquiver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instTopWideSubquiver\"><span class=\"name\">Quiver</span>.<span class=\"name\">instTopWideSubquiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L46-L47","name":"Quiver.instBotWideSubquiver","line":46,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instBotWideSubquiver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#Quiver.instBotWideSubquiver\"><span class=\"name\">Quiver</span>.<span class=\"name\">instBotWideSubquiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L41-L42","name":"WideSubquiver.quiver","line":41,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.quiver","doc":"A wide subquiver viewed as a quiver on its own. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.quiver\"><span class=\"name\">WideSubquiver</span>.<span class=\"name\">quiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.toType\">WideSubquiver.toType</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L37-L38","name":"wideSubquiverHasCoeToSort","line":37,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#wideSubquiverHasCoeToSort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#wideSubquiverHasCoeToSort\"><span class=\"name\">wideSubquiverHasCoeToSort</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L33-L34","name":"WideSubquiver.toType","line":33,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.toType","doc":"A type synonym for `V`, when thought of as a quiver having only the arrows from\nsome `WideSubquiver`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.toType\"><span class=\"name\">WideSubquiver</span>.<span class=\"name\">toType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Subquiver.lean#L25-L26","name":"WideSubquiver","line":25,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver","doc":"A wide subquiver `H` of `G` picks out a set `H a b` of arrows from `a` to `b`\nfor every pair of vertices `a b`.\n\nNB: this does not work for `Prop`-valued quivers. It requires `G : Quiver.{v+1} V`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\"><span class=\"name\">WideSubquiver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 v)</div></div>"}]}