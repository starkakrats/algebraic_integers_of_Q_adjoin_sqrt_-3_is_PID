{"name":"Mathlib.NumberTheory.Padics.PadicNumbers","instances":[{"typeNames":["Padic"],"name":"Padic.field","className":"Field"},{"typeNames":["Padic"],"name":"Padic.instInhabitedPadic","className":"Inhabited"},{"typeNames":["Padic"],"name":"Padic.instCommRingPadic","className":"CommRing"},{"typeNames":["Padic"],"name":"Padic.instRingPadic","className":"Ring"},{"typeNames":["Padic"],"name":"Padic.instZeroPadic","className":"Zero"},{"typeNames":["Padic"],"name":"Padic.instOnePadic","className":"One"},{"typeNames":["Padic"],"name":"Padic.instAddPadic","className":"Add"},{"typeNames":["Padic"],"name":"Padic.instMulPadic","className":"Mul"},{"typeNames":["Padic"],"name":"Padic.instSubPadic","className":"Sub"},{"typeNames":["Padic"],"name":"Padic.instNegPadic","className":"Neg"},{"typeNames":["Padic"],"name":"Padic.instDivPadic","className":"Div"},{"typeNames":["Padic"],"name":"Padic.instAddCommGroupPadic","className":"AddCommGroup"},{"typeNames":["Padic"],"name":"Padic.instCharZeroPadicToAddMonoidWithOneToAddGroupWithOneInstRingPadic","className":"CharZero"},{"typeNames":["Padic"],"name":"Padic.instDistPadic","className":"Dist"},{"typeNames":["Padic"],"name":"Padic.metricSpace","className":"MetricSpace"},{"typeNames":["Padic"],"name":"Padic.instNormPadic","className":"Norm"},{"typeNames":["Padic"],"name":"Padic.normedField","className":"NormedField"},{"typeNames":[],"name":"Padic.isAbsoluteValue","className":"IsAbsoluteValue"},{"typeNames":["Padic"],"name":"padicNormE.instNontriviallyNormedFieldPadic","className":"NontriviallyNormedField"},{"typeNames":["Padic","Norm.norm"],"name":"Padic.complete","className":"CauSeq.IsComplete"},{"typeNames":["Padic"],"name":"Padic.instCompleteSpacePadicToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingNormedField","className":"CompleteSpace"}],"imports":["Init","Mathlib.RingTheory.Valuation.Basic","Mathlib.NumberTheory.Padics.PadicNorm","Mathlib.Analysis.Normed.Field.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1180-L1184","name":"Padic.norm_le_one_iff_val_nonneg","line":1180,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_le_one_iff_val_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_le_one_iff_val_nonneg\"><span class=\"name\">Padic</span>.<span class=\"name\">norm_le_one_iff_val_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1175-L1177","name":"Padic.norm_lt_pow_iff_norm_le_pow_sub_one","line":1175,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_lt_pow_iff_norm_le_pow_sub_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_lt_pow_iff_norm_le_pow_sub_one\"><span class=\"name\">Padic</span>.<span class=\"name\">norm_lt_pow_iff_norm_le_pow_sub_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1162-L1172","name":"Padic.norm_le_pow_iff_norm_lt_pow_add_one","line":1162,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_le_pow_iff_norm_lt_pow_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_le_pow_iff_norm_lt_pow_add_one\"><span class=\"name\">Padic</span>.<span class=\"name\">norm_le_pow_iff_norm_lt_pow_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1152-L1154","name":"Padic.addValuation.apply","line":1152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuation.apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuation.apply\"><span class=\"name\">Padic</span>.<span class=\"name\">addValuation</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Padic.addValuation</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1146-L1148","name":"Padic.addValuation","line":1146,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuation","doc":"The additive `p`-adic valuation on `ℚ_[p]`, as an `addValuation`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuation\"><span class=\"name\">Padic</span>.<span class=\"name\">addValuation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Valuation/Basic.html#AddValuation\">AddValuation</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithTop\">WithTop</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1129-L1142","name":"Padic.AddValuation.map_add","line":1129,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_add\"><span class=\"name\">Padic</span>.<span class=\"name\">AddValuation</span>.<span class=\"name\">map_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1118-L1126","name":"Padic.AddValuation.map_mul","line":1118,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_mul\"><span class=\"name\">Padic</span>.<span class=\"name\">AddValuation</span>.<span class=\"name\">map_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1114-L1115","name":"Padic.AddValuation.map_one","line":1114,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_one\"><span class=\"name\">Padic</span>.<span class=\"name\">AddValuation</span>.<span class=\"name\">map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1109-L1110","name":"Padic.AddValuation.map_zero","line":1109,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.AddValuation.map_zero\"><span class=\"name\">Padic</span>.<span class=\"name\">AddValuation</span>.<span class=\"name\">map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\">Padic.addValuationDef</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1104-L1105","name":"Padic.addValuationDef","line":1104,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef","doc":"The additive `p`-adic valuation on `ℚ_[p]`, with values in `WithTop ℤ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.addValuationDef\"><span class=\"name\">Padic</span>.<span class=\"name\">addValuationDef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/WithBot.html#WithTop\">WithTop</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1089-L1100","name":"Padic.valuation_map_mul","line":1089,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_map_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_map_mul\"><span class=\"name\">Padic</span>.<span class=\"name\">valuation_map_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1072-L1085","name":"Padic.valuation_map_add","line":1072,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_map_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_map_add\"><span class=\"name\">Padic</span>.<span class=\"name\">valuation_map_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1065-L1069","name":"Padic.valuation_p","line":1065,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_p\"><span class=\"name\">Padic</span>.<span class=\"name\">valuation_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1050-L1061","name":"Padic.norm_eq_pow_val","line":1050,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_eq_pow_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.norm_eq_pow_val\"><span class=\"name\">Padic</span>.<span class=\"name\">norm_eq_pow_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">x</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1040-L1047","name":"Padic.valuation_one","line":1040,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_one\"><span class=\"name\">Padic</span>.<span class=\"name\">valuation_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1035-L1036","name":"Padic.valuation_zero","line":1035,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation_zero\"><span class=\"name\">Padic</span>.<span class=\"name\">valuation_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\">Padic.valuation</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1024-L1031","name":"Padic.valuation","line":1024,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation","doc":"`Padic.valuation` lifts the `p`-adic valuation on rationals to `ℚ_[p]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.valuation\"><span class=\"name\">Padic</span>.<span class=\"name\">valuation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L1010-L1018","name":"Padic.instCompleteSpacePadicToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingNormedField","line":1010,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instCompleteSpacePadicToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingNormedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instCompleteSpacePadicToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingNormedField\"><span class=\"name\">Padic</span>.<span class=\"name\">instCompleteSpacePadicToUniformSpaceToPseudoMetricSpaceToSeminormedRingToSeminormedCommRingToNormedCommRingNormedField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L991-L999","name":"Padic.padicNormE_lim_le","line":991,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.padicNormE_lim_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.padicNormE_lim_le\"><span class=\"name\">Padic</span>.<span class=\"name\">padicNormE_lim_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">norm</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeqCompletion.html#CauSeq.lim\">CauSeq.lim</a> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L968-L988","name":"Padic.complete","line":968,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.complete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.complete\"><span class=\"name\">Padic</span>.<span class=\"name\">complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeqCompletion.html#CauSeq.IsComplete\">CauSeq.IsComplete</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">norm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L953-L955","name":"padicNormE.eq_of_norm_add_lt_left","line":953,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_of_norm_add_lt_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_of_norm_add_lt_left\"><span class=\"name\">padicNormE</span>.<span class=\"name\">eq_of_norm_add_lt_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z1 : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z2 : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">z1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z2</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z1</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z1</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z2</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L948-L950","name":"padicNormE.eq_of_norm_add_lt_right","line":948,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_of_norm_add_lt_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_of_norm_add_lt_right\"><span class=\"name\">padicNormE</span>.<span class=\"name\">eq_of_norm_add_lt_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z1 : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z2 : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">z1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z2</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z2</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z1</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z2</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L940-L945","name":"padicNormE.norm_int_le_pow_iff_dvd","line":940,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_int_le_pow_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_int_le_pow_iff_dvd\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_int_le_pow_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">k</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L918-L937","name":"padicNormE.norm_int_lt_one_iff_dvd","line":918,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_int_lt_one_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_int_lt_one_iff_dvd\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_int_lt_one_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">k</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L913-L915","name":"padicNormE.norm_int_le_one","line":913,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_int_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_int_le_one\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_int_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">z</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L895-L910","name":"padicNormE.norm_rat_le_one","line":895,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_rat_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_rat_le_one\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_rat_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">q</span>.den</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">q</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L891-L892","name":"padicNormE.eq_ratNorm","line":891,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_ratNorm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_ratNorm\"><span class=\"name\">padicNormE</span>.<span class=\"name\">eq_ratNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.ratNorm\">padicNormE.ratNorm</a> <span class=\"fn\">q</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L887-L888","name":"padicNormE.ratNorm","line":887,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.ratNorm","doc":"`ratNorm q`, for a `p`-adic number `q` is the `p`-adic norm of `q`, as rational number.\n\nThe lemma `padicNormE.eq_ratNorm` asserts `‖q‖ = ratNorm q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.ratNorm\"><span class=\"name\">padicNormE</span>.<span class=\"name\">ratNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L877-L881","name":"padicNormE.is_rat","line":877,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.is_rat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.is_rat\"><span class=\"name\">padicNormE</span>.<span class=\"name\">is_rat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (q' : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">q'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L870-L874","name":"padicNormE.image","line":870,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.image","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.image\"><span class=\"name\">padicNormE</span>.<span class=\"name\">image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L863-L868","name":"padicNormE.instNontriviallyNormedFieldPadic","line":863,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.instNontriviallyNormedFieldPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.instNontriviallyNormedFieldPadic\"><span class=\"name\">padicNormE</span>.<span class=\"name\">instNontriviallyNormedFieldPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L859-L860","name":"padicNormE.norm_p_pow","line":859,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p_pow\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_p_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L853-L854","name":"padicNormE.norm_p_zpow","line":853,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p_zpow\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_p_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L845-L848","name":"padicNormE.norm_p_lt_one","line":845,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p_lt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p_lt_one\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_p_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">p</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L838-L842","name":"padicNormE.norm_p","line":838,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.norm_p\"><span class=\"name\">padicNormE</span>.<span class=\"name\">norm_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">p</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">p</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L832-L834","name":"padicNormE.eq_padicNorm","line":832,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_padicNorm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_padicNorm\"><span class=\"name\">padicNormE</span>.<span class=\"name\">eq_padicNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">q</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L825-L828","name":"padicNormE.add_eq_max_of_ne","line":825,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.add_eq_max_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.add_eq_max_of_ne\"><span class=\"name\">padicNormE</span>.<span class=\"name\">add_eq_max_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">r</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">r</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L820-L822","name":"padicNormE.nonarchimedean","line":820,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.nonarchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.nonarchimedean\"><span class=\"name\">padicNormE</span>.<span class=\"name\">nonarchimedean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">r</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L817-L817","name":"padicNormE.is_norm","line":817,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.is_norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.is_norm\"><span class=\"name\">padicNormE</span>.<span class=\"name\">is_norm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L814-L814","name":"padicNormE.mul","line":814,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.mul\"><span class=\"name\">padicNormE</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">q</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">r</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L797-L800","name":"Padic.rat_dense","line":797,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.rat_dense","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.rat_dense\"><span class=\"name\">Padic</span>.<span class=\"name\">rat_dense</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hε : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L790-L794","name":"Padic.isAbsoluteValue","line":790,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.isAbsoluteValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.isAbsoluteValue\"><span class=\"name\">Padic</span>.<span class=\"name\">isAbsoluteValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue.html#IsAbsoluteValue\">IsAbsoluteValue</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">a</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L783-L788","name":"Padic.normedField","line":783,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.normedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.normedField\"><span class=\"name\">Padic</span>.<span class=\"name\">normedField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L780-L781","name":"Padic.instNormPadic","line":780,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instNormPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instNormPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instNormPadic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm\">Norm</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L765-L778","name":"Padic.metricSpace","line":765,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.metricSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.metricSpace\"><span class=\"name\">Padic</span>.<span class=\"name\">metricSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L762-L763","name":"Padic.instDistPadic","line":762,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instDistPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instDistPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instDistPadic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist\">Dist</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L749-L755","name":"Padic.complete''","line":749,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.complete''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.complete''\"><span class=\"name\">Padic</span>.<span class=\"name\">complete''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">⇑<span class=\"fn\">padicNormE</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>), <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\">∃ (N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ <span class=\"fn\">i</span> ≥ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L735-L746","name":"Padic.complete'","line":735,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.complete'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.complete'\"><span class=\"name\">Padic</span>.<span class=\"name\">complete'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">⇑<span class=\"fn\">padicNormE</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>), <span class=\"fn\">∀ <span class=\"fn\">ε</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\">∃ (N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ <span class=\"fn\">i</span> ≥ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L701-L726","name":"Padic.exi_rat_seq_conv_cauchy","line":701,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.exi_rat_seq_conv_cauchy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.exi_rat_seq_conv_cauchy\"><span class=\"name\">Padic</span>.<span class=\"name\">exi_rat_seq_conv_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">⇑<span class=\"fn\">padicNormE</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#IsCauSeq\">IsCauSeq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.limSeq\">Padic.limSeq</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L689-L698","name":"Padic.exi_rat_seq_conv","line":689,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.exi_rat_seq_conv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.exi_rat_seq_conv\"><span class=\"name\">Padic</span>.<span class=\"name\">exi_rat_seq_conv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">⇑<span class=\"fn\">padicNormE</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hε : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ <span class=\"fn\">i</span> ≥ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.limSeq\">Padic.limSeq</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L685-L686","name":"Padic.limSeq","line":685,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.limSeq","doc":"`limSeq f`, for `f` a Cauchy sequence of `p`-adic numbers, is a sequence of rationals with the\nsame limit point as `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.limSeq\"><span class=\"name\">Padic</span>.<span class=\"name\">limSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <span class=\"fn\">⇑<span class=\"fn\">padicNormE</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L657-L675","name":"Padic.rat_dense'","line":657,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.rat_dense'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.rat_dense'\"><span class=\"name\">Padic</span>.<span class=\"name\">rat_dense'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hε : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L639-L642","name":"padicNormE.image'","line":639,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.image'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.image'\"><span class=\"name\">padicNormE</span>.<span class=\"name\">image'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">∃ (n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L635-L636","name":"padicNormE.eq_padic_norm'","line":635,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_padic_norm'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.eq_padic_norm'\"><span class=\"name\">padicNormE</span>.<span class=\"name\">eq_padic_norm'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L629-L631","name":"padicNormE.add_eq_max_of_ne'","line":629,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.add_eq_max_of_ne'","doc":"Theorems about `padicNormE` are named with a `'` so the names do not conflict with the\nequivalent theorems about `norm` (`‖ ‖`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.add_eq_max_of_ne'\"><span class=\"name\">padicNormE</span>.<span class=\"name\">add_eq_max_of_ne'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">r</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">r</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L622-L624","name":"padicNormE.nonarchimedean'","line":622,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.nonarchimedean'","doc":"Theorems about `padicNormE` are named with a `'` so the names do not conflict with the\nequivalent theorems about `norm` (`‖ ‖`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.nonarchimedean'\"><span class=\"name\">padicNormE</span>.<span class=\"name\">nonarchimedean'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L601-L617","name":"padicNormE.defn","line":601,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.defn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE.defn\"><span class=\"name\">padicNormE</span>.<span class=\"name\">defn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hε : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ <span class=\"fn\">i</span> ≥ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">padicNormE</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk\">Padic.mk</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L576-L589","name":"padicNormE","line":576,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE","doc":"The rational-valued `p`-adic norm on `ℚ_[p]` is lifted from the norm on Cauchy sequences. The\ncanonical form of this function is the normed space instance, with notation `‖ ‖`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#padicNormE\"><span class=\"name\">padicNormE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue.html#AbsoluteValue\">AbsoluteValue</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L567-L567","name":"Padic.coe_zero","line":567,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_zero\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L563-L563","name":"Padic.coe_one","line":563,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_one\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L558-L559","name":"Padic.coe_div","line":558,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_div\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L553-L554","name":"Padic.coe_sub","line":553,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_sub\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L548-L549","name":"Padic.coe_mul","line":548,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_mul\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L543-L544","name":"Padic.coe_neg","line":543,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_neg\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L538-L539","name":"Padic.coe_add","line":538,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_add\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L531-L535","name":"Padic.instCharZeroPadicToAddMonoidWithOneToAddGroupWithOneInstRingPadic","line":531,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instCharZeroPadicToAddMonoidWithOneToAddGroupWithOneInstRingPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instCharZeroPadicToAddMonoidWithOneToAddGroupWithOneInstRingPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instCharZeroPadicToAddMonoidWithOneToAddGroupWithOneInstRingPadic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L527-L528","name":"Padic.coe_inj","line":527,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.coe_inj\"><span class=\"name\">Padic</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L521-L523","name":"Padic.const_equiv","line":521,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.const_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.const_equiv\"><span class=\"name\">Padic</span>.<span class=\"name\">const_equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq.const\">CauSeq.const</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq.const\">CauSeq.const</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">r</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L517-L518","name":"Padic.mk_eq","line":517,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk_eq\"><span class=\"name\">Padic</span>.<span class=\"name\">mk_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk\">Padic.mk</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk\">Padic.mk</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L514-L514","name":"Padic.zero_def","line":514,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.zero_def\"><span class=\"name\">Padic</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟦<span class=\"fn\">0</span>⟧</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L508-L509","name":"Padic.mk","line":508,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk","doc":"Builds the equivalence class of a Cauchy sequence of rationals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.mk\"><span class=\"name\">Padic</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L505-L505","name":"Padic.instAddCommGroupPadic","line":505,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instAddCommGroupPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instAddCommGroupPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instAddCommGroupPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L503-L503","name":"Padic.instDivPadic","line":503,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instDivPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instDivPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instDivPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L501-L501","name":"Padic.instNegPadic","line":501,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instNegPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instNegPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instNegPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L499-L499","name":"Padic.instSubPadic","line":499,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instSubPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instSubPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instSubPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L497-L497","name":"Padic.instMulPadic","line":497,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instMulPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instMulPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instMulPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L495-L495","name":"Padic.instAddPadic","line":495,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instAddPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instAddPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instAddPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L493-L493","name":"Padic.instOnePadic","line":493,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instOnePadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instOnePadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instOnePadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L491-L491","name":"Padic.instZeroPadic","line":491,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instZeroPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instZeroPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instZeroPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L488-L489","name":"Padic.instRingPadic","line":488,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instRingPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instRingPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instRingPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L485-L486","name":"Padic.instCommRingPadic","line":485,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instCommRingPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instCommRingPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instCommRingPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L481-L482","name":"Padic.instInhabitedPadic","line":481,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instInhabitedPadic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.instInhabitedPadic\"><span class=\"name\">Padic</span>.<span class=\"name\">instInhabitedPadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L478-L479","name":"Padic.field","line":478,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.field","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic.field\"><span class=\"name\">Padic</span>.<span class=\"name\">field</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">ℚ_[</a><span class=\"fn\">p</span><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L469-L470","name":"«termℚ_[_]»","line":469,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#«termℚ_[_]»","doc":"notation for p-padic rationals "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#«termℚ_[_]»\"><span class=\"name\">«termℚ_[_]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L464-L465","name":"Padic","line":464,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic","doc":"The `p`-adic numbers `ℚ_[p]` are the Cauchy completion of `ℚ` with respect to the `p`-adic norm.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#Padic\"><span class=\"name\">Padic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L434-L455","name":"PadicSeq.add_eq_max_of_ne","line":434,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.add_eq_max_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.add_eq_max_of_ne\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">add_eq_max_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfgne : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L427-L431","name":"PadicSeq.norm_eq_of_add_equiv_zero","line":427,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq_of_add_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq_of_add_equiv_zero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_eq_of_add_equiv_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L423-L424","name":"PadicSeq.norm_neg","line":423,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_neg\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L402-L420","name":"PadicSeq.norm_eq","line":402,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">g</span> <span class=\"fn\">k</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L377-L399","name":"PadicSeq.norm_nonarchimedean","line":377,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_nonarchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_nonarchimedean\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_nonarchimedean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L361-L367","name":"PadicSeq.norm_equiv","line":361,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_equiv\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L321-L323","name":"PadicSeq.norm_one","line":321,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_one\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L316-L318","name":"PadicSeq.norm_values_discrete","line":316,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_values_discrete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_values_discrete\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_values_discrete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L307-L313","name":"PadicSeq.norm_const","line":307,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_const\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq.const\">CauSeq.const</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L303-L304","name":"PadicSeq.ne_zero_iff_nequiv_zero","line":303,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.ne_zero_iff_nequiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.ne_zero_iff_nequiv_zero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">ne_zero_iff_nequiv_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeqCompletion.html#CauSeq.Completion.mk\">CauSeq.Completion.mk</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L299-L300","name":"PadicSeq.eq_zero_iff_equiv_zero","line":299,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.eq_zero_iff_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.eq_zero_iff_equiv_zero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">eq_zero_iff_equiv_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeqCompletion.html#CauSeq.Completion.mk\">CauSeq.Completion.mk</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L282-L296","name":"PadicSeq.norm_mul","line":282,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_mul\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L234-L238","name":"PadicSeq.val_eq_iff_norm_eq","line":234,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.val_eq_iff_norm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.val_eq_iff_norm_eq\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">val_eq_iff_norm_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.valuation\">PadicSeq.valuation</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.valuation\">PadicSeq.valuation</a> <span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L223-L231","name":"PadicSeq.norm_eq_pow_val","line":223,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq_pow_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq_pow_val\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_eq_pow_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.valuation\">PadicSeq.valuation</a> <span class=\"fn\">f</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L219-L220","name":"PadicSeq.valuation","line":219,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.valuation","doc":"The `p`-adic valuation on `ℚ` lifts to `PadicSeq p`.\n`Valuation f` is defined to be the valuation of the (`ℚ`-valued) stationary point of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.valuation\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">valuation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L196-L203","name":"PadicSeq.lift_index_right","line":196,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.lift_index_right","doc":"An auxiliary lemma for manipulating sequence indices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.lift_index_right\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">lift_index_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v1 : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v2 : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">v1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">v2</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span>)</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L185-L192","name":"PadicSeq.lift_index_left","line":185,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.lift_index_left","doc":"An auxiliary lemma for manipulating sequence indices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.lift_index_left\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">lift_index_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v1 : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v3 : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">v1</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">v3</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L176-L181","name":"PadicSeq.lift_index_left_left","line":176,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.lift_index_left_left","doc":"An auxiliary lemma for manipulating sequence indices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.lift_index_left_left\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">lift_index_left_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v2 : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v3 : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">v2</span> <span class=\"fn\">v3</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L171-L172","name":"PadicSeq.norm_nonneg","line":171,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_nonneg\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L167-L168","name":"PadicSeq.not_equiv_zero_const_of_nonzero","line":167,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.not_equiv_zero_const_of_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.not_equiv_zero_const_of_nonzero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">not_equiv_zero_const_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq.const\">CauSeq.const</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L163-L164","name":"PadicSeq.not_limZero_const_of_nonzero","line":163,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.not_limZero_const_of_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.not_limZero_const_of_nonzero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">not_limZero_const_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq.LimZero\">CauSeq.LimZero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq.const\">CauSeq.const</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">q</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L156-L160","name":"PadicSeq.norm_eq_norm_app_of_nonzero","line":156,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq_norm_app_of_nonzero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_eq_norm_app_of_nonzero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_eq_norm_app_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (k : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L152-L153","name":"PadicSeq.norm_nonzero_of_not_equiv_zero","line":152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_nonzero_of_not_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_nonzero_of_not_equiv_zero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_nonzero_of_not_equiv_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L146-L149","name":"PadicSeq.equiv_zero_of_val_eq_of_equiv_zero","line":146,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.equiv_zero_of_val_eq_of_equiv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.equiv_zero_of_val_eq_of_equiv_zero\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">equiv_zero_of_val_eq_of_equiv_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">g</span> <span class=\"fn\">k</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L122-L135","name":"PadicSeq.norm_zero_iff","line":122,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm_zero_iff\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\">PadicSeq.norm</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L118-L119","name":"PadicSeq.norm","line":118,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm","doc":"Since the norm of the entries of a Cauchy sequence is eventually stationary,\nwe can lift the norm to sequences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.norm\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">norm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L110-L113","name":"PadicSeq.stationaryPoint_spec","line":110,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint_spec\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">stationaryPoint_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\">PadicSeq.stationaryPoint</a> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">m</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L106-L107","name":"PadicSeq.stationaryPoint","line":106,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint","doc":"For all `n ≥ stationaryPoint f hf`, the `p`-adic norm of `f n` is the same. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationaryPoint\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">stationaryPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\">PadicSeq</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L85-L102","name":"PadicSeq.stationary","line":85,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationary","doc":"The `p`-adic norm of the entries of a nonzero Cauchy sequence of rationals is eventually\nconstant. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq.stationary\"><span class=\"name\">PadicSeq</span>.<span class=\"name\">stationary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/CauSeq.html#CauSeq\">CauSeq</a> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">f</span> <span class=\"fn\">m</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNumbers.lean#L73-L74","name":"PadicSeq","line":73,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq","doc":"The type of Cauchy sequences of rationals with respect to the `p`-adic norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNumbers.html#PadicSeq\"><span class=\"name\">PadicSeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}