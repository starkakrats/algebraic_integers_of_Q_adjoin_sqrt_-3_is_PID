{"name":"Mathlib.Probability.Martingale.Upcrossing","instances":[],"imports":["Init","Mathlib.Data.Set.Intervals.Monotone","Mathlib.Probability.Process.HittingTime","Mathlib.Probability.Martingale.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L851-L879","name":"MeasureTheory.Submartingale.mul_lintegral_upcrossings_le_lintegral_pos_part","line":851,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.mul_lintegral_upcrossings_le_lintegral_pos_part","doc":"A variant of Doob's upcrossing estimate obtained by taking the supremum on both sides. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.mul_lintegral_upcrossings_le_lintegral_pos_part\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Submartingale</span>.<span class=\"name\">mul_lintegral_upcrossings_le_lintegral_pos_part</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∫⁻ (ω : <span class=\"fn\">Ω</span>), <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings\">MeasureTheory.upcrossings</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">ω</span></span> ∂<span class=\"fn\">μ</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\">⨆ (N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∫⁻ (ω : <span class=\"fn\">Ω</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span><a href=\"./Mathlib/Algebra/Order/Group/PosPart.html#posPart\">⁺</a></span></span> ∂<span class=\"fn\">μ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L832-L847","name":"MeasureTheory.upcrossings_lt_top_iff","line":832,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings_lt_top_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings_lt_top_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossings_lt_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings\">MeasureTheory.upcrossings</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L827-L829","name":"MeasureTheory.Adapted.measurable_upcrossings","line":827,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.measurable_upcrossings","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.measurable_upcrossings\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">measurable_upcrossings</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings\">MeasureTheory.upcrossings</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L822-L824","name":"MeasureTheory.upcrossings","line":822,"kind":"def","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings","doc":"The number of upcrossings of a realization of a stochastic process (`upcrossings` takes value\nin `ℝ≥0∞` and so is allowed to be `∞`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossings\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossings</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L810-L817","name":"MeasureTheory.Adapted.integrable_upcrossingsBefore","line":810,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.integrable_upcrossingsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.integrable_upcrossingsBefore\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">integrable_upcrossingsBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L799-L807","name":"MeasureTheory.Adapted.measurable_upcrossingsBefore","line":799,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.measurable_upcrossingsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.measurable_upcrossingsBefore\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">measurable_upcrossingsBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L773-L796","name":"MeasureTheory.upcrossingsBefore_eq_sum","line":773,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_eq_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_eq_sum\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_eq_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/LocallyFinite.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">1</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Algebra/Function/Indicator.html#Set.indicator\">Set.indicator</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>}</span> <span class=\"fn\">1</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L737-L744","name":"MeasureTheory.Submartingale.mul_integral_upcrossingsBefore_le_integral_pos_part","line":737,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.mul_integral_upcrossingsBefore_le_integral_pos_part","doc":"**Doob's upcrossing estimate**: given a real valued discrete submartingale `f` and real\nvalues `a` and `b`, we have `(b - a) * 𝔼[upcrossingsBefore a b f N] ≤ 𝔼[(f N - a)⁺]` where\n`upcrossingsBefore a b f N` is the number of times the process `f` crossed from below `a` to above\n`b` before the time `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.mul_integral_upcrossingsBefore_le_integral_pos_part\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Submartingale</span>.<span class=\"name\">mul_integral_upcrossingsBefore_le_integral_pos_part</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">x</span></span>)</span></span> ∂<span class=\"fn\">μ</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span><a href=\"./Mathlib/Algebra/Order/Group/PosPart.html#posPart\">⁺</a></span></span>)</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L722-L730","name":"MeasureTheory.mul_integral_upcrossingsBefore_le_integral_pos_part_aux","line":722,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.mul_integral_upcrossingsBefore_le_integral_pos_part_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.mul_integral_upcrossingsBefore_le_integral_pos_part_aux\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">mul_integral_upcrossingsBefore_le_integral_pos_part_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">x</span></span>)</span></span> ∂<span class=\"fn\">μ</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span><a href=\"./Mathlib/Algebra/Order/Group/PosPart.html#posPart\">⁺</a></span></span>)</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L717-L719","name":"MeasureTheory.upcrossingsBefore_pos_eq","line":717,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_pos_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_pos_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_pos_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span><a href=\"./Mathlib/Algebra/Order/Group/PosPart.html#posPart\">⁺</a></span></span>)</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L670-L714","name":"MeasureTheory.crossing_pos_eq","line":670,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.crossing_pos_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.crossing_pos_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">crossing_pos_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span><a href=\"./Mathlib/Algebra/Order/Group/PosPart.html#posPart\">⁺</a></span></span>)</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span><a href=\"./Mathlib/Algebra/Order/Group/PosPart.html#posPart\">⁺</a></span></span>)</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L655-L667","name":"MeasureTheory.integral_mul_upcrossingsBefore_le_integral","line":655,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.integral_mul_upcrossingsBefore_le_integral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.integral_mul_upcrossingsBefore_le_integral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">integral_mul_upcrossingsBefore_le_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfN : <span class=\"fn\">∀ (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfzero : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">x</span></span>)</span></span> ∂<span class=\"fn\">μ</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L599-L652","name":"MeasureTheory.mul_upcrossingsBefore_le","line":599,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.mul_upcrossingsBefore_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.mul_upcrossingsBefore_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">mul_upcrossingsBefore_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">k</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#HSub.hSub\">(<a href=\"./Init/Prelude.html#HSub.hSub\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span></span></a>)</a> <span class=\"fn\">ω</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L588-L596","name":"MeasureTheory.sub_eq_zero_of_upcrossingsBefore_lt","line":588,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.sub_eq_zero_of_upcrossingsBefore_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.sub_eq_zero_of_upcrossingsBefore_lt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">sub_eq_zero_of_upcrossingsBefore_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.stoppedValue\">MeasureTheory.stoppedValue</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.stoppedValue\">MeasureTheory.stoppedValue</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">ω</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L579-L585","name":"MeasureTheory.le_sub_of_le_upcrossingsBefore","line":579,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.le_sub_of_le_upcrossingsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.le_sub_of_le_upcrossingsBefore\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">le_sub_of_le_upcrossingsBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.stoppedValue\">MeasureTheory.stoppedValue</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.stoppedValue\">MeasureTheory.stoppedValue</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">ω</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L573-L576","name":"MeasureTheory.lowerCrossingTime_lt_of_lt_upcrossingsBefore","line":573,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_lt_of_lt_upcrossingsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_lt_of_lt_upcrossingsBefore\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_lt_of_lt_upcrossingsBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L554-L570","name":"MeasureTheory.upcrossingsBefore_lt_of_exists_upcrossing","line":554,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_lt_of_exists_upcrossing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_lt_of_exists_upcrossing\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_lt_of_exists_upcrossing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN₁ : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hN₁' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N₁</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hN₂ : <span class=\"fn\"><span class=\"fn\">N₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hN₂' : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">N₂</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">N₂</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L543-L551","name":"MeasureTheory.upcrossingsBefore_mono","line":543,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L535-L540","name":"MeasureTheory.upperCrossingTime_eq_upperCrossingTime_of_lt","line":535,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_eq_upperCrossingTime_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_eq_upperCrossingTime_of_lt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_eq_upperCrossingTime_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">M</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L521-L532","name":"MeasureTheory.crossing_eq_crossing_of_upperCrossingTime_lt","line":521,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.crossing_eq_crossing_of_upperCrossingTime_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.crossing_eq_crossing_of_upperCrossingTime_lt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">crossing_eq_crossing_of_upperCrossingTime_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">M</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">M</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L492-L518","name":"MeasureTheory.crossing_eq_crossing_of_lowerCrossingTime_lt","line":492,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.crossing_eq_crossing_of_lowerCrossingTime_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.crossing_eq_crossing_of_lowerCrossingTime_lt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">crossing_eq_crossing_of_lowerCrossingTime_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hNM : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">M</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">M</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L482-L489","name":"MeasureTheory.upcrossingsBefore_le","line":482,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L476-L479","name":"MeasureTheory.upperCrossingTime_eq_of_upcrossingsBefore_lt","line":476,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_eq_of_upcrossingsBefore_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_eq_of_upcrossingsBefore_lt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_eq_of_upcrossingsBefore_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L468-L473","name":"MeasureTheory.upperCrossingTime_lt_of_le_upcrossingsBefore","line":468,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_of_le_upcrossingsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_of_le_upcrossingsBefore\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_lt_of_le_upcrossingsBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L464-L465","name":"MeasureTheory.upcrossingsBefore_zero'","line":464,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_zero'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L460-L460","name":"MeasureTheory.upcrossingsBefore_zero","line":460,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L456-L457","name":"MeasureTheory.upcrossingsBefore_bot","line":456,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore_bot\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\">MeasureTheory.upcrossingsBefore</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L450-L452","name":"MeasureTheory.upcrossingsBefore","line":450,"kind":"def","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore","doc":"The number of upcrossings (strictly) before time `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingsBefore\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingsBefore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L427-L446","name":"MeasureTheory.Submartingale.sum_mul_upcrossingStrat_le","line":427,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.sum_mul_upcrossingStrat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.sum_mul_upcrossingStrat_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Submartingale</span>.<span class=\"name\">sum_mul_upcrossingStrat_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span></span></span>)</span></span></span>)</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∫ (x : <span class=\"fn\">Ω</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> ∂<span class=\"fn\">μ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L417-L424","name":"MeasureTheory.Submartingale.sum_sub_upcrossingStrat_mul","line":417,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.sum_sub_upcrossingStrat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.sum_sub_upcrossingStrat_mul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Submartingale</span>.<span class=\"name\">sum_sub_upcrossingStrat_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a>\n  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">k</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span></span></span>)</span></span></span></span></span>)</span>\n  <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L410-L414","name":"MeasureTheory.Submartingale.sum_upcrossingStrat_mul","line":410,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.sum_upcrossingStrat_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Submartingale.sum_upcrossingStrat_mul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Submartingale</span>.<span class=\"name\">sum_upcrossingStrat_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a> <span class=\"fn\">f</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Basic.html#MeasureTheory.Submartingale\">MeasureTheory.Submartingale</a>\n  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">k</span></span></span>)</span></span></span></span></span>)</span>\n  <span class=\"fn\">ℱ</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L398-L407","name":"MeasureTheory.Adapted.upcrossingStrat_adapted","line":398,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.upcrossingStrat_adapted","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.upcrossingStrat_adapted\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">upcrossingStrat_adapted</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L377-L395","name":"MeasureTheory.upcrossingStrat_le_one","line":377,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat_le_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingStrat_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L373-L374","name":"MeasureTheory.upcrossingStrat_nonneg","line":373,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat_nonneg\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingStrat_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\">MeasureTheory.upcrossingStrat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L368-L370","name":"MeasureTheory.upcrossingStrat","line":368,"kind":"def","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat","doc":"`upcrossingStrat a b f N n` is 1 if `n` is between a consecutive pair of lower and upper\ncrossings and is 0 otherwise. `upcrossingStrat` is shifted by one index so that it is adapted\nrather than predictable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upcrossingStrat\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upcrossingStrat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L360-L362","name":"MeasureTheory.Adapted.isStoppingTime_lowerCrossingTime","line":360,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.isStoppingTime_lowerCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.isStoppingTime_lowerCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">isStoppingTime_lowerCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.IsStoppingTime\">MeasureTheory.IsStoppingTime</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L355-L357","name":"MeasureTheory.Adapted.isStoppingTime_upperCrossingTime","line":355,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.isStoppingTime_upperCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.isStoppingTime_upperCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">isStoppingTime_upperCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.IsStoppingTime\">MeasureTheory.IsStoppingTime</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L337-L352","name":"MeasureTheory.Adapted.isStoppingTime_crossing","line":337,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.isStoppingTime_crossing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.Adapted.isStoppingTime_crossing\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">Adapted</span>.<span class=\"name\">isStoppingTime_crossing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ℱ : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Filtration.html#MeasureTheory.Filtration\">MeasureTheory.Filtration</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">m0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Adapted.html#MeasureTheory.Adapted\">MeasureTheory.Adapted</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.IsStoppingTime\">MeasureTheory.IsStoppingTime</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.IsStoppingTime\">MeasureTheory.IsStoppingTime</a> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L329-L332","name":"MeasureTheory.upperCrossingTime_eq_of_bound_le","line":329,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_eq_of_bound_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_eq_of_bound_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_eq_of_bound_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L315-L326","name":"MeasureTheory.upperCrossingTime_bound_eq","line":315,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_bound_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_bound_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_bound_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L310-L312","name":"MeasureTheory.upperCrossingTime_lt_nonempty","line":310,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_nonempty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_lt_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hN : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L302-L307","name":"MeasureTheory.upperCrossingTime_lt_bddAbove","line":302,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_bddAbove","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_bddAbove\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_lt_bddAbove</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">N</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L290-L299","name":"MeasureTheory.exists_upperCrossingTime_eq","line":290,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.exists_upperCrossingTime_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.exists_upperCrossingTime_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">exists_upperCrossingTime_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L284-L286","name":"MeasureTheory.upperCrossingTime_stabilize'","line":284,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_stabilize'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_stabilize'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_stabilize'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">m</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L279-L281","name":"MeasureTheory.lowerCrossingTime_stabilize'","line":279,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_stabilize'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_stabilize'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_stabilize'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">m</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L274-L276","name":"MeasureTheory.upperCrossingTime_stabilize","line":274,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_stabilize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_stabilize\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_stabilize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">m</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L269-L271","name":"MeasureTheory.lowerCrossingTime_stabilize","line":269,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_stabilize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_stabilize\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_stabilize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">m</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L263-L266","name":"MeasureTheory.upperCrossingTime_lt_succ","line":263,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_succ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_lt_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L253-L260","name":"MeasureTheory.lowerCrossingTime_lt_upperCrossingTime","line":253,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_lt_upperCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_lt_upperCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_lt_upperCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L243-L250","name":"MeasureTheory.upperCrossingTime_lt_lowerCrossingTime","line":243,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_lowerCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_lt_lowerCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_lt_lowerCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L237-L240","name":"MeasureTheory.stoppedValue_upperCrossingTime","line":237,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.stoppedValue_upperCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.stoppedValue_upperCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">stoppedValue_upperCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.stoppedValue\">MeasureTheory.stoppedValue</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L231-L234","name":"MeasureTheory.stoppedValue_lowerCrossingTime","line":231,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.stoppedValue_lowerCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.stoppedValue_lowerCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">stoppedValue_lowerCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Process/Stopping.html#MeasureTheory.stoppedValue\">MeasureTheory.stoppedValue</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L220-L224","name":"MeasureTheory.upperCrossingTime_mono","line":220,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">m</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L213-L217","name":"MeasureTheory.lowerCrossingTime_mono","line":213,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">m</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L207-L210","name":"MeasureTheory.lowerCrossingTime_le_upperCrossingTime_succ","line":207,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_le_upperCrossingTime_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_le_upperCrossingTime_succ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_le_upperCrossingTime_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L202-L204","name":"MeasureTheory.upperCrossingTime_le_lowerCrossingTime","line":202,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_le_lowerCrossingTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_le_lowerCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_le_lowerCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L198-L199","name":"MeasureTheory.lowerCrossingTime_le","line":198,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L194-L195","name":"MeasureTheory.upperCrossingTime_zero'","line":194,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_zero'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L187-L190","name":"MeasureTheory.upperCrossingTime_le","line":187,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/ConditionallyCompleteLattice/Basic.html#ConditionallyCompleteLinearOrderBot\">ConditionallyCompleteLinearOrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L173-L176","name":"MeasureTheory.upperCrossingTime_succ_eq","line":173,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_succ_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_succ_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_succ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ω : <span class=\"fn\">Ω</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/HittingTime.html#MeasureTheory.hitting\">MeasureTheory.hitting</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span>)</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L168-L170","name":"MeasureTheory.upperCrossingTime_succ","line":168,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_succ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ω : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/HittingTime.html#MeasureTheory.hitting\">MeasureTheory.hitting</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">b</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTimeAux\">MeasureTheory.lowerCrossingTimeAux</a> <span class=\"fn\">a</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">n</span> <span class=\"fn\">ω</span></span>)</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span>)</span> <span class=\"fn\">N</span> <span class=\"fn\">ω</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L164-L165","name":"MeasureTheory.lowerCrossingTime_zero","line":164,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\">MeasureTheory.lowerCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Process/HittingTime.html#MeasureTheory.hitting\">MeasureTheory.hitting</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L159-L160","name":"MeasureTheory.upperCrossingTime_zero","line":159,"kind":"theorem","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\">MeasureTheory.upperCrossingTime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">f</span> <span class=\"fn\">N</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L148-L149","name":"MeasureTheory.lowerCrossingTime","line":148,"kind":"def","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime","doc":"`lowerCrossingTime a b f N n` is the first time before time `N`, `f` reaches\nbelow `a` after `f` reached above `b` for the `n`-th time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L139-L143","name":"MeasureTheory.upperCrossingTime","line":139,"kind":"def","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime","doc":"`upperCrossingTime a b f N n` is the first time before time `N`, `f` reaches\nabove `b` after `f` reached below `a` for the `n - 1`-th time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.upperCrossingTime\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">upperCrossingTime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">ι</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Probability/Martingale/Upcrossing.lean#L132-L134","name":"MeasureTheory.lowerCrossingTimeAux","line":132,"kind":"def","docLink":"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTimeAux","doc":"`lowerCrossingTimeAux a f c N` is the first time `f` reached below `a` after time `c` before\ntime `N`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Martingale/Upcrossing.html#MeasureTheory.lowerCrossingTimeAux\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">lowerCrossingTimeAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ω : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">ι</span></span></div></div>"}]}