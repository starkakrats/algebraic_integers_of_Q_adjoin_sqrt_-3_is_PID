{"name":"Mathlib.Order.OmegaCompletePartialOrder","instances":[{"typeNames":["OmegaCompletePartialOrder.Chain","Nat"],"name":"OmegaCompletePartialOrder.Chain.instOrderHomClassChainNatInstLENatToLE","className":"RelHomClass"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instCoeFunChainForAllNat","className":"CoeFun"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instInhabitedChain","className":"Inhabited"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instMembershipChain","className":"Membership"},{"typeNames":["OmegaCompletePartialOrder.Chain"],"name":"OmegaCompletePartialOrder.Chain.instLEChain","className":"LE"},{"typeNames":["Part"],"name":"Part.omegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":[],"name":"Pi.instOmegaCompletePartialOrderForAll","className":"OmegaCompletePartialOrder"},{"typeNames":["Prod"],"name":"Prod.instOmegaCompletePartialOrderProd","className":"OmegaCompletePartialOrder"},{"typeNames":[],"name":"CompleteLattice.instOmegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":["OrderHom"],"name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","className":"OmegaCompletePartialOrder"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.instOrderHomClassContinuousHomToLEToPreorderToPartialOrderToLEToPreorderToPartialOrder","className":"RelHomClass"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.instPartialOrderContinuousHom","className":"PartialOrder"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.ContinuousHom.instInhabitedContinuousHom","className":"Inhabited"},{"typeNames":["OmegaCompletePartialOrder.ContinuousHom"],"name":"OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom","className":"OmegaCompletePartialOrder"}],"imports":["Init","Mathlib.Control.Monad.Basic","Mathlib.Data.Part","Mathlib.Order.Chain","Mathlib.Order.Hom.Order","Mathlib.Data.Nat.Order.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L911-L915","name":"OmegaCompletePartialOrder.ContinuousHom.seq","line":911,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq","doc":"`Part.seq` as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L910-L910","name":"OmegaCompletePartialOrder.ContinuousHom.seq_apply","line":910,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq\">OmegaCompletePartialOrder.ContinuousHom.seq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Seq.seq\">Seq.seq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L901-L905","name":"OmegaCompletePartialOrder.ContinuousHom.map","line":901,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map","doc":"`Part.map` as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L900-L900","name":"OmegaCompletePartialOrder.ContinuousHom.map_apply","line":900,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map\">OmegaCompletePartialOrder.ContinuousHom.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L892-L895","name":"OmegaCompletePartialOrder.ContinuousHom.bind","line":892,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind","doc":"`Part.bind` as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L891-L891","name":"OmegaCompletePartialOrder.ContinuousHom.bind_apply","line":891,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind\">OmegaCompletePartialOrder.ContinuousHom.bind</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L883-L886","name":"OmegaCompletePartialOrder.ContinuousHom.flip","line":883,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip","doc":"A family of continuous functions yields a continuous family of functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≥</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L882-L882","name":"OmegaCompletePartialOrder.ContinuousHom.flip_apply","line":882,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">flip_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip\">OmegaCompletePartialOrder.ContinuousHom.flip</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L877-L878","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_apply_œâSup","line":877,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_apply_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÄ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÅ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.Prod.apply</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">OmegaCompletePartialOrder.Chain.zip</a> <span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">c‚ÇÅ</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L873-L874","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_def","line":873,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_def\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\">OmegaCompletePartialOrder.ContinuousHom.œâSup</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L843-L867","name":"OmegaCompletePartialOrder.ContinuousHom.Prod.apply","line":843,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply","doc":"The application of continuous functions as a continuous function.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Prod</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L842-L842","name":"OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply","line":842,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Prod</span>.<span class=\"name\">apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.Prod.apply</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.1</span> <span class=\"fn\"><span class=\"fn\">f</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L835-L837","name":"OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom","line":835,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">instOmegaCompletePartialOrderContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L834-L834","name":"OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom_œâSup","line":834,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instOmegaCompletePartialOrderContinuousHom_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">instOmegaCompletePartialOrderContinuousHom_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\">OmegaCompletePartialOrder.ContinuousHom.œâSup</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L825-L830","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup","line":825,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup","doc":"The `œâSup` operator for continuous functions, which takes the pointwise countable supremum\nof the functions in the `œâ`-chain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L824-L824","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_apply","line":824,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup\">OmegaCompletePartialOrder.ContinuousHom.œâSup</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.toMono</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L817-L819","name":"OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'","line":817,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">forall_forall_merge'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">j </span>i : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L803-L813","name":"OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge","line":803,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge","doc":"When proving that a chain of applications is below a bound `z`, it suffices to consider the\nfunctions and values being selected from the same index in the chains.\n\nThis lemma is more specific than necessary, i.e. `c‚ÇÄ` only needs to be a\nchain of monotone functions, but it is only used with continuous functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">forall_forall_merge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">i </span>j : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L791-L793","name":"OmegaCompletePartialOrder.ContinuousHom.toMono","line":791,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono","doc":"The map from continuous functions to monotone functions is itself a monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L790-L790","name":"OmegaCompletePartialOrder.ContinuousHom.toMono_coe","line":790,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toMono_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.toMono</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L786-L787","name":"OmegaCompletePartialOrder.ContinuousHom.instInhabitedContinuousHom","line":786,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instInhabitedContinuousHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instInhabitedContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">instInhabitedContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L782-L782","name":"OmegaCompletePartialOrder.ContinuousHom.const","line":782,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const","doc":"`Function.const` is a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L781-L781","name":"OmegaCompletePartialOrder.ContinuousHom.const_apply","line":781,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">const_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const\">OmegaCompletePartialOrder.ContinuousHom.const</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L776-L777","name":"OmegaCompletePartialOrder.ContinuousHom.coe_apply","line":776,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">f</span></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L771-L772","name":"OmegaCompletePartialOrder.ContinuousHom.comp_assoc","line":771,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_assoc\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÜ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">œÜ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≥</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">œÜ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L767-L767","name":"OmegaCompletePartialOrder.ContinuousHom.id_comp","line":767,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.id</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L763-L763","name":"OmegaCompletePartialOrder.ContinuousHom.comp_id","line":763,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L758-L759","name":"OmegaCompletePartialOrder.ContinuousHom.coe_inj","line":758,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_inj\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L755-L755","name":"OmegaCompletePartialOrder.ContinuousHom.ext","line":755,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L750-L750","name":"OmegaCompletePartialOrder.ContinuousHom.comp","line":750,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp","doc":"The composition of continuous functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L749-L749","name":"OmegaCompletePartialOrder.ContinuousHom.comp_apply","line":749,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">OmegaCompletePartialOrder.ContinuousHom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L744-L744","name":"OmegaCompletePartialOrder.ContinuousHom.id","line":744,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id","doc":"The identity as a continuous function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L743-L743","name":"OmegaCompletePartialOrder.ContinuousHom.id_apply","line":743,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">OmegaCompletePartialOrder.ContinuousHom.id</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L733-L735","name":"OmegaCompletePartialOrder.ContinuousHom.copy","line":733,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy","doc":"Construct a continuous function from a bare function, a continuous function, and a proof that\nthey are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L732-L732","name":"OmegaCompletePartialOrder.ContinuousHom.copy_apply","line":732,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">copy_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy\">OmegaCompletePartialOrder.ContinuousHom.copy</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L725-L726","name":"OmegaCompletePartialOrder.ContinuousHom.continuous","line":725,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.continuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">C</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">C</span> <span class=\"fn\">‚Üë<span class=\"fn\">F</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L716-L722","name":"OmegaCompletePartialOrder.ContinuousHom.seq_continuous'","line":716,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Seq.seq\">Seq.seq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L711-L713","name":"OmegaCompletePartialOrder.ContinuousHom.map_continuous'","line":711,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L704-L708","name":"OmegaCompletePartialOrder.ContinuousHom.bind_continuous'","line":704,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span> ‚Üí\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">g</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L676-L701","name":"OmegaCompletePartialOrder.ContinuousHom.œâSup_bind","line":676,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_bind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.œâSup_bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">œâSup_bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OrderHom.bind\">OrderHom.bind</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a>     <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">g</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L671-L673","name":"OmegaCompletePartialOrder.ContinuousHom.ite_continuous'","line":671,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ite_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ite_continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ite_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./foundational_types.html\">Prop</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\">if <span class=\"fn\">p</span> then <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> else <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L667-L668","name":"OmegaCompletePartialOrder.ContinuousHom.apply_mono","line":667,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.apply_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.apply_mono\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">apply_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L662-L663","name":"OmegaCompletePartialOrder.ContinuousHom.monotone","line":662,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.monotone\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L658-L659","name":"OmegaCompletePartialOrder.ContinuousHom.congr_arg","line":658,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_arg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_arg\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">congr_arg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L654-L655","name":"OmegaCompletePartialOrder.ContinuousHom.congr_fun","line":654,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_fun\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">congr_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L649-L650","name":"OmegaCompletePartialOrder.ContinuousHom.Simps.apply","line":649,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Simps.apply","doc":"See Note [custom simps projection]. We specify this explicitly because we don't have a DFunLike\ninstance.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Simps.apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Simps</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L644-L644","name":"OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom","line":644,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\"><span class=\"fn\">f</span>.toOrderHom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L643-L643","name":"OmegaCompletePartialOrder.ContinuousHom.coe_mk","line":643,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">{ <span class=\"fn\">toOrderHom</span> := <span class=\"fn\">f</span>, <span class=\"fn\">cont</span> := <span class=\"fn\">hf</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L641-L641","name":"OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe","line":641,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toOrderHom_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toOrderHom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L633-L634","name":"OmegaCompletePartialOrder.instPartialOrderContinuousHom","line":633,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instPartialOrderContinuousHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instPartialOrderContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instPartialOrderContinuousHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ≤ : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L625-L628","name":"OmegaCompletePartialOrder.instOrderHomClassContinuousHomToLEToPreorderToPartialOrderToLEToPreorderToPartialOrder","line":625,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instOrderHomClassContinuousHomToLEToPreorderToPartialOrderToLEToPreorderToPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instOrderHomClassContinuousHomToLEToPreorderToPartialOrderToLEToPreorderToPartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instOrderHomClassContinuousHomToLEToPreorderToPartialOrderToLEToPreorderToPartialOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ≤ : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span> <span class=\"fn\">Œ±</span> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L623-L623","name":"OmegaCompletePartialOrder.¬´term_‚ÜíùíÑ_¬ª","line":623,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.¬´term_‚ÜíùíÑ_¬ª","doc":"A monotone function on `œâ`-continuous partial orders is said to be continuous\nif for every chain `c : chain Œ±`, `f (‚äî i, c i) = ‚äî i, f (c i)`.\nThis is just the bundled version of `OrderHom.continuous`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.¬´term_‚ÜíùíÑ_¬ª\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">¬´term_‚ÜíùíÑ_¬ª</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L618-L618","name":"OmegaCompletePartialOrder.ContinuousHom.cont","line":618,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.cont","doc":"The underlying function of a `ContinuousHom` is continuous, i.e. it preserves `œâSup` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.cont\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">cont</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\"><span class=\"fn\">self</span>.toOrderHom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L616-L616","name":"OmegaCompletePartialOrder.ContinuousHom.mk","line":616,"kind":"ctor","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toOrderHom : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cont : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">toOrderHom</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">‚ÜíùíÑ</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L616-L618","name":"OmegaCompletePartialOrder.ContinuousHom","line":616,"kind":"structure","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom","doc":"A monotone function on `œâ`-continuous partial orders is said to be continuous\nif for every chain `c : chain Œ±`, `f (‚äî i, c i) = ‚äî i, f (c i)`.\nThis is just the bundled version of `OrderHom.continuous`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ≤ : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\"><span class=\"name\">OrderHom</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L602-L603","name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","line":602,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">omegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L601-L601","name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_œâSup_coe","line":601,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_œâSup_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_œâSup_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">omegaCompletePartialOrder_œâSup_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L595-L597","name":"OmegaCompletePartialOrder.OrderHom.œâSup","line":595,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup","doc":"The `œâSup` operator for monotone functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L594-L594","name":"OmegaCompletePartialOrder.OrderHom.œâSup_coe","line":594,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">œâSup_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.œâSup\">OmegaCompletePartialOrder.OrderHom.œâSup</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L576-L578","name":"CompleteLattice.inf_continuous'","line":576,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.inf_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.inf_continuous'\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">inf_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLinearOrder\">CompleteLinearOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">‚äì</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L566-L573","name":"CompleteLattice.inf_continuous","line":566,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.inf_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.inf_continuous\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">inf_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLinearOrder\">CompleteLinearOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">‚äì</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L555-L557","name":"CompleteLattice.bot_continuous","line":555,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.bot_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.bot_continuous\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">bot_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">‚ä•</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L549-L552","name":"CompleteLattice.top_continuous","line":549,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.top_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.top_continuous\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">top_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L543-L546","name":"CompleteLattice.sup_continuous","line":543,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.sup_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.sup_continuous\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">sup_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">‚äî</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L534-L540","name":"CompleteLattice.sSup_continuous'","line":534,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.sSup_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.sSup_continuous'\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">sSup_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\">‚àÄ <span class=\"fn\">f</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L529-L531","name":"CompleteLattice.iSup_continuous","line":529,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.iSup_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.iSup_continuous\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">iSup_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\">‚®Ü (i : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L520-L526","name":"CompleteLattice.sSup_continuous","line":520,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.sSup_continuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.sSup_continuous\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">sSup_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">‚àÄ <span class=\"fn\">f</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L512-L516","name":"CompleteLattice.instOmegaCompletePartialOrder","line":512,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.instOmegaCompletePartialOrder","doc":"Any complete lattice has an `œâ`-CPO structure where the countable supremum is a special case\nof arbitrary suprema. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.instOmegaCompletePartialOrder\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">instOmegaCompletePartialOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L496-L498","name":"Prod.œâSup_zip","line":496,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_zip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_zip\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup_zip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">OmegaCompletePartialOrder.Chain.zip</a> <span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">c‚ÇÅ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÄ</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÅ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L491-L494","name":"Prod.instOmegaCompletePartialOrderProd","line":491,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrderProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrderProd\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrderProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L490-L490","name":"Prod.instOmegaCompletePartialOrderProd_œâSup_fst","line":490,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrderProd_œâSup_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrderProd_œâSup_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrderProd_œâSup_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">OrderHom.fst</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L490-L490","name":"Prod.instOmegaCompletePartialOrderProd_œâSup_snd","line":490,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrderProd_œâSup_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrderProd_œâSup_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrderProd_œâSup_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">OrderHom.snd</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L484-L485","name":"Prod.œâSup","line":484,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup","doc":"The supremum of a chain in the product `œâ`-CPO. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L483-L483","name":"Prod.œâSup_snd","line":483,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup\">Prod.œâSup</a> <span class=\"fn\">c</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">OrderHom.snd</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L483-L483","name":"Prod.œâSup_fst","line":483,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">œâSup_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.œâSup\">Prod.œâSup</a> <span class=\"fn\">c</span></span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">OrderHom.fst</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L463-L466","name":"Pi.OmegaCompletePartialOrder.flip‚ÇÇ_continuous'","line":463,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Pi.OmegaCompletePartialOrder.flip‚ÇÇ_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Pi.OmegaCompletePartialOrder.flip‚ÇÇ_continuous'\"><span class=\"name\">Pi</span>.<span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">flip‚ÇÇ_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\">Œ≥</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L458-L460","name":"Pi.OmegaCompletePartialOrder.flip‚ÇÅ_continuous'","line":458,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Pi.OmegaCompletePartialOrder.flip‚ÇÅ_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Pi.OmegaCompletePartialOrder.flip‚ÇÅ_continuous'\"><span class=\"name\">Pi</span>.<span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">flip‚ÇÅ_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L444-L451","name":"Pi.instOmegaCompletePartialOrderForAll","line":444,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Pi.instOmegaCompletePartialOrderForAll","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Pi.instOmegaCompletePartialOrderForAll\"><span class=\"name\">Pi</span>.<span class=\"name\">instOmegaCompletePartialOrderForAll</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">a</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">a</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L415-L431","name":"Part.mem_œâSup","line":415,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_œâSup\"><span class=\"name\">Part</span>.<span class=\"name\">mem_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L395-L410","name":"Part.omegaCompletePartialOrder","line":395,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.omegaCompletePartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.omegaCompletePartialOrder\"><span class=\"name\">Part</span>.<span class=\"name\">omegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L386-L392","name":"Part.mem_chain_of_mem_œâSup","line":386,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_chain_of_mem_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_chain_of_mem_œâSup\"><span class=\"name\">Part</span>.<span class=\"name\">mem_chain_of_mem_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\">Part.œâSup</a> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L382-L383","name":"Part.œâSup_eq_none","line":382,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_none\"><span class=\"name\">Part</span>.<span class=\"name\">œâSup_eq_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬¨</a><span class=\"fn\">‚àÉ (a : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\">Part.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Part.none</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L374-L379","name":"Part.œâSup_eq_some","line":374,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup_eq_some\"><span class=\"name\">Part</span>.<span class=\"name\">œâSup_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\">Part.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L370-L371","name":"Part.œâSup","line":370,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup","doc":"The (noncomputable) `œâSup` definition for the `œâ`-CPO structure on `Part Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.œâSup\"><span class=\"name\">Part</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L356-L362","name":"Part.eq_of_chain","line":356,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.eq_of_chain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.eq_of_chain\"><span class=\"name\">Part</span>.<span class=\"name\">eq_of_chain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">Part.some</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L342-L343","name":"OmegaCompletePartialOrder.const_continuous'","line":342,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.const_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.const_continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">const_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <span class=\"fn\">Œ±</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L338-L339","name":"OmegaCompletePartialOrder.continuous_const","line":338,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous_const\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">continuous_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ≤</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.const\">OrderHom.const</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L334-L335","name":"OmegaCompletePartialOrder.id_continuous'","line":334,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.id_continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.id_continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">id_continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L329-L331","name":"OmegaCompletePartialOrder.continuous_comp","line":329,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">continuous_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfc : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hgc : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">OrderHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L326-L326","name":"OmegaCompletePartialOrder.continuous_id","line":326,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">continuous_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">OrderHom.id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L320-L321","name":"OmegaCompletePartialOrder.continuous'_coe","line":320,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous'_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.continuous'_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">continuous'_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L315-L316","name":"OmegaCompletePartialOrder.Continuous'.to_bundled","line":315,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'.to_bundled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'.to_bundled\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Continuous'</span>.<span class=\"name\">to_bundled</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L311-L312","name":"OmegaCompletePartialOrder.Continuous.of_bundled'","line":311,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous.of_bundled'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous.of_bundled'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Continuous</span>.<span class=\"name\">of_bundled'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf' : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L306-L308","name":"OmegaCompletePartialOrder.Continuous.of_bundled","line":306,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous.of_bundled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous.of_bundled\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Continuous</span>.<span class=\"name\">of_bundled</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf' : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\">OmegaCompletePartialOrder.Continuous</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L302-L303","name":"OmegaCompletePartialOrder.Continuous'.to_monotone","line":302,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'.to_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'.to_monotone\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Continuous'</span>.<span class=\"name\">to_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L296-L300","name":"OmegaCompletePartialOrder.ScottContinuous.continuous'","line":296,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ScottContinuous.continuous'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ScottContinuous.continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ScottContinuous</span>.<span class=\"name\">continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#ScottContinuous\">ScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\">OmegaCompletePartialOrder.Continuous'</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L290-L294","name":"OmegaCompletePartialOrder.isLUB_of_scottContinuous","line":290,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_of_scottContinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_of_scottContinuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">isLUB_of_scottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#ScottContinuous\">ScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>)</span> }</span></span>)</span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L286-L287","name":"OmegaCompletePartialOrder.Continuous'","line":286,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'","doc":"`Continuous' f` asserts that `f` is both monotone and continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Continuous'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L281-L282","name":"OmegaCompletePartialOrder.Continuous","line":281,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous","doc":"A monotone function `f : Œ± ‚Üío Œ≤` is continuous if it distributes over œâSup.\n\nIn order to distinguish it from the (more commonly used) continuity from topology\n(see `Mathlib/Topology/Basic.lean`), the present definition is often referred to as\n\"Scott-continuity\" (referring to Dana Scott). It corresponds to continuity\nin Scott topological spaces (not defined here). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Continuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L261-L265","name":"OmegaCompletePartialOrder.subtype","line":261,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.subtype","doc":"A subset `p : Œ± ‚Üí Prop` of the type closed under `œâSup` induces an\n`OmegaCompletePartialOrder` on the subtype `{a : Œ± // p a}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.subtype\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span></span>)</span> ‚Üí <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Subtype\">Subtype</a> <span class=\"fn\">p</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L249-L257","name":"OmegaCompletePartialOrder.œâSup_eq_of_isLUB","line":249,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_eq_of_isLUB","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_eq_of_isLUB\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_eq_of_isLUB</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></span>)</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L240-L247","name":"OmegaCompletePartialOrder.isLUB_range_œâSup","line":240,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_range_œâSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_range_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">isLUB_range_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L232-L237","name":"OmegaCompletePartialOrder.œâSup_le_iff","line":232,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L226-L229","name":"OmegaCompletePartialOrder.œâSup_le_œâSup_of_le","line":226,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_œâSup_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le_œâSup_of_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_le_œâSup_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">c‚ÇÅ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c‚ÇÅ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L215-L222","name":"OmegaCompletePartialOrder.œâSup_total","line":215,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_total\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L211-L212","name":"OmegaCompletePartialOrder.le_œâSup_of_le","line":211,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup_of_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">le_œâSup_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L203-L208","name":"OmegaCompletePartialOrder.lift","line":203,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.lift","doc":"Transfer an `OmegaCompletePartialOrder` on `Œ≤` to an `OmegaCompletePartialOrder` on `Œ±`\nusing a strictly monotone function `f : Œ≤ ‚Üío Œ±`, a definition of œâSup and a proof that `f` is\ncontinuous with regard to the provided `œâSup` and the œâCPO on `Œ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.lift\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(œâSup‚ÇÄ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">œâSup‚ÇÄ</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L190-L190","name":"OmegaCompletePartialOrder.œâSup_le","line":190,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le","doc":"`œâSup` is a lower bound of the set of upper bounds of the increasing sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span>)</span> ‚Üí <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L188-L188","name":"OmegaCompletePartialOrder.le_œâSup","line":188,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup","doc":"`œâSup` is an upper bound of the increasing sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">le_œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\">OmegaCompletePartialOrder.œâSup</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L186-L186","name":"OmegaCompletePartialOrder.œâSup","line":186,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup","doc":"The supremum of an increasing sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.œâSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">œâSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L184-L184","name":"OmegaCompletePartialOrder.mk","line":184,"kind":"ctor","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toPartialOrder : <span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(œâSup : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(le_œâSup : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">œâSup</span> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(œâSup_le : <span class=\"fn\">‚àÄ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span>)</span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">œâSup</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L184-L190","name":"OmegaCompletePartialOrder","line":184,"kind":"class","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder","doc":"An omega-complete partial order is a partial order with a supremum\noperation on increasing sequences indexed by natural numbers (which we\ncall `œâSup`). In this sense, it is strictly weaker than join complete\nsemi-lattices as only œâ-sized totally ordered sets have a supremum.\n\nSee the definition on page 114 of [gunter1992]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\"><span class=\"name\">PartialOrder</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L167-L167","name":"OmegaCompletePartialOrder.Chain.zip_coe","line":167,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">zip_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">OmegaCompletePartialOrder.Chain.zip</a> <span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">c‚ÇÅ</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c‚ÇÄ</span> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">c‚ÇÅ</span> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L163-L164","name":"OmegaCompletePartialOrder.Chain.zip","line":163,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip","doc":"`OmegaCompletePartialOrder.Chain.zip` pairs up the elements of two chains\nthat have the same index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">zip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÄ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L155-L156","name":"OmegaCompletePartialOrder.Chain.map_le_map","line":155,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_le_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_le_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_le_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L150-L151","name":"OmegaCompletePartialOrder.Chain.map_comp","line":150,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">OrderHom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L146-L147","name":"OmegaCompletePartialOrder.Chain.map_id","line":146,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">OrderHom.id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L138-L142","name":"OmegaCompletePartialOrder.Chain.mem_map_iff","line":138,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">mem_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ a ‚àà <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L133-L134","name":"OmegaCompletePartialOrder.Chain.exists_of_mem_map","line":133,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.exists_of_mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.exists_of_mem_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">exists_of_mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ≤</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span></span> ‚Üí <span class=\"fn\">‚àÉ a ‚àà <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L129-L130","name":"OmegaCompletePartialOrder.Chain.mem_map","line":129,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">c</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L124-L124","name":"OmegaCompletePartialOrder.Chain.map_coe","line":124,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">OmegaCompletePartialOrder.Chain.map</a> <span class=\"fn\">c</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L120-L121","name":"OmegaCompletePartialOrder.Chain.map","line":120,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map","doc":"`map` function for `Chain` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L115-L115","name":"OmegaCompletePartialOrder.Chain.directed","line":115,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.directed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.directed\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L113-L113","name":"OmegaCompletePartialOrder.Chain.isChain_range","line":113,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.isChain_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.isChain_range\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">isChain_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Chain.html#IsChain\">IsChain</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">‚áë<span class=\"fn\">c</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L111-L111","name":"OmegaCompletePartialOrder.Chain.instLEChain","line":111,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instLEChain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instLEChain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instLEChain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L104-L105","name":"OmegaCompletePartialOrder.Chain.instMembershipChain","line":104,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instMembershipChain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instMembershipChain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instMembershipChain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">Œ±</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L101-L102","name":"OmegaCompletePartialOrder.Chain.instInhabitedChain","line":101,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instInhabitedChain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instInhabitedChain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instInhabitedChain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L99-L99","name":"OmegaCompletePartialOrder.Chain.instCoeFunChainForAllNat","line":99,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instCoeFunChainForAllNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instCoeFunChainForAllNat\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instCoeFunChainForAllNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L98-L98","name":"OmegaCompletePartialOrder.Chain.instOrderHomClassChainNatInstLENatToLE","line":98,"kind":"instance","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instOrderHomClassChainNatInstLENatToLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instOrderHomClassChainNatInstLENatToLE\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instOrderHomClassChainNatInstLENatToLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">Œ±</span></span>)</span> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L89-L90","name":"OmegaCompletePartialOrder.Chain","line":89,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain","doc":"A chain is a monotone sequence.\n\nSee the definition on page 114 of [gunter1992]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L72-L78","name":"OrderHom.bind","line":72,"kind":"def","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OrderHom.bind","doc":"`Part.bind` as a monotone function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OrderHom.bind\"><span class=\"name\">OrderHom</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/OmegaCompletePartialOrder.lean#L71-L71","name":"OrderHom.bind_coe","line":71,"kind":"theorem","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OrderHom.bind_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OrderHom.bind_coe\"><span class=\"name\">OrderHom</span>.<span class=\"name\">bind_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≤</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">‚Üío</a> <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">Œ≥</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OrderHom.bind\">OrderHom.bind</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"}]}