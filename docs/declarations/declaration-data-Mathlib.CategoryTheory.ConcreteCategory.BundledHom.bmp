{"name":"Mathlib.CategoryTheory.ConcreteCategory.BundledHom","instances":[{"typeNames":["CategoryTheory.Bundled"],"name":"CategoryTheory.BundledHom.category","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Bundled"],"name":"CategoryTheory.BundledHom.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CategoryTheory.BundledHom.MapHom"],"name":"CategoryTheory.BundledHom.bundledHomOfParentProjection","className":"CategoryTheory.BundledHom"},{"typeNames":["CategoryTheory.Bundled","CategoryTheory.Bundled"],"name":"CategoryTheory.BundledHom.forget‚ÇÇ","className":"CategoryTheory.HasForget‚ÇÇ"},{"typeNames":["CategoryTheory.forget‚ÇÇ"],"name":"CategoryTheory.BundledHom.forget‚ÇÇFull","className":"CategoryTheory.Full"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.Basic","Mathlib.CategoryTheory.ConcreteCategory.Bundled"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L164-L165","name":"CategoryTheory.BundledHom.forget‚ÇÇFull","line":164,"kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.forget‚ÇÇFull","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.forget‚ÇÇFull\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">forget‚ÇÇFull</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection\">CategoryTheory.BundledHom.ParentProjection</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget‚ÇÇ\">CategoryTheory.forget‚ÇÇ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L157-L161","name":"CategoryTheory.BundledHom.forget‚ÇÇ","line":157,"kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.forget‚ÇÇ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.forget‚ÇÇ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">forget‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection\">CategoryTheory.BundledHom.ParentProjection</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget‚ÇÇ\">CategoryTheory.HasForget‚ÇÇ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L152-L154","name":"CategoryTheory.BundledHom.bundledHomOfParentProjection","line":152,"kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.bundledHomOfParentProjection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.bundledHomOfParentProjection\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">bundledHomOfParentProjection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection\">CategoryTheory.BundledHom.ParentProjection</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.MapHom\">CategoryTheory.BundledHom.MapHom</a> <span class=\"fn\">hom</span> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L145-L145","name":"CategoryTheory.BundledHom.ParentProjection.mk","line":145,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">ParentProjection</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection\">CategoryTheory.BundledHom.ParentProjection</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L145-L145","name":"CategoryTheory.BundledHom.ParentProjection","line":145,"kind":"class","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection","doc":"We use the empty `ParentProjection` class to label functions like `CommMonoid.toMonoid`,\nwhich we would like to use to automatically construct `BundledHom` instances from.\n\nOnce we've set up `MonCat` as the category of bundled monoids,\nthis allows us to set up `CommMonCat` by defining an instance\n```instance : ParentProjection (CommMonoid.toMonoid) := ‚ü®‚ü©```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.ParentProjection\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">ParentProjection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L125-L130","name":"CategoryTheory.BundledHom.map","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.map","doc":"Construct the `CategoryTheory.BundledHom` induced by a map between type classes.\nThis is useful for building categories such as `CommMonCat` from `MonCat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.MapHom\">CategoryTheory.BundledHom.MapHom</a> <span class=\"fn\">hom</span> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L116-L117","name":"CategoryTheory.BundledHom.MapHom","line":116,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.MapHom","doc":"The `hom` corresponding to first forgetting along `F`, then taking the `hom` associated to `c`.\n\nFor typical usage, see the construction of `CommMonCat` from `MonCat`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.MapHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">MapHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶ÉŒ± : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶ÉŒ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L92-L99","name":"CategoryTheory.BundledHom.mkHasForget‚ÇÇ","line":92,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.mkHasForget‚ÇÇ","doc":"A version of `HasForget‚ÇÇ.mk'` for categories defined using `@BundledHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.mkHasForget‚ÇÇ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">mkHasForget‚ÇÇ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom_d : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom_d</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(obj : <span class=\"fn\">‚¶É<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\">{<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>} ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>)</span> ‚Üí <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled.map\">CategoryTheory.Bundled.map</a> <span class=\"fn\">obj</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled.map\">CategoryTheory.Bundled.map</a> <span class=\"fn\">obj</span> <span class=\"fn\">Y</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_map : <span class=\"fn\">‚àÄ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚áë<span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget‚ÇÇ\">CategoryTheory.HasForget‚ÇÇ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L77-L84","name":"CategoryTheory.BundledHom.concreteCategory","line":77,"kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.concreteCategory","doc":"A category given by `BundledHom` is a concrete category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.concreteCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L66-L73","name":"CategoryTheory.BundledHom.category","line":66,"kind":"instance","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.category","doc":"Every `@BundledHom c _` defines a category with objects in `Bundled c`.\n\nThis instance generates the type-class problem `BundledHom ?m`.\nCurrently that is not a problem, as there are almost no instances of `BundledHom`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">category</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[ùíû : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u, u + 1}</a>        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Bundled.html#CategoryTheory.Bundled\">CategoryTheory.Bundled</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L43-L43","name":"CategoryTheory.BundledHom.comp_toFun","line":43,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp_toFun","doc":"compatibility with the composition "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp_toFun\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">comp_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(IŒ± : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IŒ≤ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IŒ≥ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun\">CategoryTheory.BundledHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp\">CategoryTheory.BundledHom.comp</a> <span class=\"fn\">self</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun\">CategoryTheory.BundledHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun\">CategoryTheory.BundledHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L41-L41","name":"CategoryTheory.BundledHom.id_toFun","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id_toFun","doc":"compatibility with identities "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id_toFun\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">id_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun\">CategoryTheory.BundledHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">I</span> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id\">CategoryTheory.BundledHom.id</a> <span class=\"fn\">self</span> <span class=\"fn\">I</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L38-L38","name":"CategoryTheory.BundledHom.hom_ext","line":38,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.hom_ext","doc":"a bundled morphism is determined by the underlying map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(IŒ± : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IŒ≤ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun\">CategoryTheory.BundledHom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L36-L36","name":"CategoryTheory.BundledHom.comp","line":36,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp","doc":"composition of bundled morphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(IŒ± : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IŒ≤ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IŒ≥ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≥</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≥</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L34-L34","name":"CategoryTheory.BundledHom.id","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id","doc":"the identity as a bundled morphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">I</span> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L32-L32","name":"CategoryTheory.BundledHom.toFun","line":32,"kind":"def","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun","doc":"the underlying map of a bundled morphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.toFun\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(IŒ± : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(IŒ≤ : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L30-L30","name":"CategoryTheory.BundledHom.mk","line":30,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\">{<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\">(<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>) ‚Üí <span class=\"fn\">(<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>) ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(id : <span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>) ‚Üí <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">I</span> <span class=\"fn\">I</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comp : <span class=\"fn\">{<span class=\"fn\">Œ± </span>Œ≤ Œ≥ : <a href=\"./foundational_types.html\">Type</a> u} ‚Üí <span class=\"fn\">(<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>) ‚Üí <span class=\"fn\">(<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>) ‚Üí <span class=\"fn\">(<span class=\"fn\">IŒ≥</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≥</span></span>) ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≥</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hom_ext : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\">‚àÄ {<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u} (<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span>)</span></span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#_auto._@.Mathlib.CategoryTheory.ConcreteCategory.BundledHom._hyg.38\">_auto‚úù</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(id_toFun : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <span class=\"fn\">(<span class=\"fn\">‚àÄ {<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u} (<span class=\"fn\">I</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">I</span> <span class=\"fn\">I</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">id</span> <span class=\"fn\">I</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">_root_.id</span></span></span>)</span> <a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#_auto._@.Mathlib.CategoryTheory.ConcreteCategory.BundledHom._hyg.66\">_auto‚úù</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(comp_toFun : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a>\n  <span class=\"fn\">(<span class=\"fn\">‚àÄ {<span class=\"fn\">Œ± </span>Œ≤ Œ≥ : <a href=\"./foundational_types.html\">Type</a> u} (<span class=\"fn\">IŒ±</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span>) (<span class=\"fn\">IŒ≤</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span>) (<span class=\"fn\">IŒ≥</span> : <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≥</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">hom</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">comp</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">IŒ≥</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">IŒ±</span> <span class=\"fn\">IŒ≤</span> <span class=\"fn\">f</span></span></span></span></span>)</span>\n  <a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#_auto._@.Mathlib.CategoryTheory.ConcreteCategory.BundledHom._hyg.94\">_auto‚úù</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <span class=\"fn\">hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/ConcreteCategory/BundledHom.lean#L30-L46","name":"CategoryTheory.BundledHom","line":30,"kind":"class","docLink":"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom","doc":"Class for bundled homs. Note that the arguments order follows that of lemmas for `MonoidHom`.\nThis way we can use `‚ü®@MonoidHom.toFun, @MonoidHom.id ...‚ü©` in an instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BundledHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hom : <span class=\"fn\">‚¶É<span class=\"fn\">Œ± </span>Œ≤ : <a href=\"./foundational_types.html\">Type</a> u‚¶Ñ ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ±</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">Œ≤</span></span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}