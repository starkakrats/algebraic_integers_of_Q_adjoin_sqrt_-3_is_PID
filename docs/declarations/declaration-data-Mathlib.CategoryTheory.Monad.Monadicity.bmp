{"name":"Mathlib.CategoryTheory.Monad.Monadicity","instances":[{"typeNames":["Prefunctor.map","CategoryTheory.NatTrans.app"],"name":"CategoryTheory.Monad.MonadicityInternal.main_pair_reflexive","className":"CategoryTheory.IsReflexivePair"},{"typeNames":["Prefunctor.map","CategoryTheory.NatTrans.app"],"name":"CategoryTheory.Monad.MonadicityInternal.main_pair_G_split","className":"CategoryTheory.HasSplitCoequalizer"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.MonadicityInternal.instHasColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorLeftAdjointObjToPrefunctorObjToPrefunctorCompIdMapMapAppCounitOfRightAdjoint","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["Prefunctor.map","CategoryTheory.NatTrans.app"],"name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointHasCoequalizerObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","className":"CategoryTheory.Limits.HasColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","className":"CategoryTheory.Limits.PreservesColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","className":"CategoryTheory.Limits.PreservesColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","className":"CategoryTheory.Limits.ReflectsColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","className":"CategoryTheory.Limits.ReflectsColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","className":"CategoryTheory.CreatesColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","className":"CategoryTheory.CreatesColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair_1","className":"CategoryTheory.Limits.PreservesColimit"},{"typeNames":["CategoryTheory.Limits.parallelPair"],"name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit_1","className":"CategoryTheory.Limits.PreservesColimit"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Preserves.Shapes.Equalizers","Mathlib.CategoryTheory.Limits.Shapes.Reflexive","Mathlib.CategoryTheory.Monad.Coequalizer","Mathlib.CategoryTheory.Monad.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L432-L460","name":"CategoryTheory.Monad.monadicOfHasPreservesReflexiveCoequalizersOfReflectsIsomorphisms","line":432,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfHasPreservesReflexiveCoequalizersOfReflectsIsomorphisms","doc":"Reflexive (crude) monadicity theorem. If `G` has a right adjoint, `D` has and `G` preserves\nreflexive coequalizers and `G` reflects isomorphisms, then `G` is monadic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfHasPreservesReflexiveCoequalizersOfReflectsIsomorphisms\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">monadicOfHasPreservesReflexiveCoequalizersOfReflectsIsomorphisms</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Reflexive.html#CategoryTheory.Limits.HasReflexiveCoequalizers\">CategoryTheory.Limits.HasReflexiveCoequalizers</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso.html#CategoryTheory.ReflectsIsomorphisms\">CategoryTheory.ReflectsIsomorphisms</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair\">CategoryTheory.Monad.PreservesColimitOfIsReflexivePair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.MonadicRightAdjoint\">CategoryTheory.MonadicRightAdjoint</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L422-L425","name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit_1","line":422,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit_1\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair\">CategoryTheory.Monad.PreservesColimitOfIsReflexivePair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">X</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">X</span>.A</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L419-L420","name":"CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair_1","line":419,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair_1\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Reflexive.html#CategoryTheory.IsReflexivePair\">CategoryTheory.IsReflexivePair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair\">CategoryTheory.Monad.PreservesColimitOfIsReflexivePair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L417-L417","name":"CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.out","line":417,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.out\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">PreservesColimitOfIsReflexivePair</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair\">CategoryTheory.Monad.PreservesColimitOfIsReflexivePair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃A : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃B : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Reflexive.html#CategoryTheory.IsReflexivePair\">CategoryTheory.IsReflexivePair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L416-L416","name":"CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.mk","line":416,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">PreservesColimitOfIsReflexivePair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\">⦃<span class=\"fn\">A </span>B : <span class=\"fn\">C</span>⦄ →\n  <span class=\"fn\">(<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>) →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Reflexive.html#CategoryTheory.IsReflexivePair\">CategoryTheory.IsReflexivePair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>] →\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair\">CategoryTheory.Monad.PreservesColimitOfIsReflexivePair</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L416-L417","name":"CategoryTheory.Monad.PreservesColimitOfIsReflexivePair","line":416,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsReflexivePair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">PreservesColimitOfIsReflexivePair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u₁ u₂) v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L393-L400","name":"CategoryTheory.Monad.monadicOfHasPreservesGSplitCoequalizersOfReflectsIsomorphisms","line":393,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfHasPreservesGSplitCoequalizersOfReflectsIsomorphisms","doc":"An alternate version of Beck's monadicity theorem. If `G` reflects isomorphisms, preserves\ncoequalizers of `G`-split pairs and `C` has coequalizers of `G`-split pairs, then it is monadic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfHasPreservesGSplitCoequalizersOfReflectsIsomorphisms\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">monadicOfHasPreservesGSplitCoequalizersOfReflectsIsomorphisms</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso.html#CategoryTheory.ReflectsIsomorphisms\">CategoryTheory.ReflectsIsomorphisms</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair\">CategoryTheory.Monad.HasCoequalizerOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\">CategoryTheory.Monad.PreservesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.MonadicRightAdjoint\">CategoryTheory.MonadicRightAdjoint</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L372-L386","name":"CategoryTheory.Monad.monadicOfCreatesGSplitCoequalizers","line":372,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfCreatesGSplitCoequalizers","doc":"Beck's monadicity theorem. If `G` has a right adjoint and creates coequalizers of `G`-split pairs,\nthen it is monadic.\nThis is the converse of `createsGSplitOfMonadic`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfCreatesGSplitCoequalizers\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">monadicOfCreatesGSplitCoequalizers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair\">CategoryTheory.Monad.CreatesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.MonadicRightAdjoint\">CategoryTheory.MonadicRightAdjoint</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L362-L365","name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","line":362,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instForAllAlgebraToMonadLeftAdjointOfRightAdjointCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair\">CategoryTheory.Monad.CreatesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimit\">CategoryTheory.CreatesColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L359-L360","name":"CategoryTheory.Monad.instCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","line":359,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instCreatesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair\">CategoryTheory.Monad.CreatesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimit\">CategoryTheory.CreatesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L357-L357","name":"CategoryTheory.Monad.CreatesColimitOfIsSplitPair.out","line":357,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair.out\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">CreatesColimitOfIsSplitPair</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair\">CategoryTheory.Monad.CreatesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimit\">CategoryTheory.CreatesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L356-L356","name":"CategoryTheory.Monad.CreatesColimitOfIsSplitPair.mk","line":356,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">CreatesColimitOfIsSplitPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\">{<span class=\"fn\">A </span>B : <span class=\"fn\">D</span>} →\n  <span class=\"fn\">(<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>) →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>] →\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimit\">CategoryTheory.CreatesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair\">CategoryTheory.Monad.CreatesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L356-L357","name":"CategoryTheory.Monad.CreatesColimitOfIsSplitPair","line":356,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.CreatesColimitOfIsSplitPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">CreatesColimitOfIsSplitPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u₁ u₂) v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L320-L350","name":"CategoryTheory.Monad.monadicOfHasPreservesReflectsGSplitCoequalizers","line":320,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfHasPreservesReflectsGSplitCoequalizers","doc":"To show `G` is a monadic right adjoint, we can show it preserves and reflects `G`-split\ncoequalizers, and `C` has them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.monadicOfHasPreservesReflectsGSplitCoequalizers\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">monadicOfHasPreservesReflectsGSplitCoequalizers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair\">CategoryTheory.Monad.HasCoequalizerOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\">CategoryTheory.Monad.PreservesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair\">CategoryTheory.Monad.ReflectsColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.MonadicRightAdjoint\">CategoryTheory.MonadicRightAdjoint</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L312-L315","name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","line":312,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instForAllAlgebraToMonadLeftAdjointOfRightAdjointReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair\">CategoryTheory.Monad.ReflectsColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.ReflectsColimit\">CategoryTheory.Limits.ReflectsColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L309-L310","name":"CategoryTheory.Monad.instReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","line":309,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instReflectsColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair\">CategoryTheory.Monad.ReflectsColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.ReflectsColimit\">CategoryTheory.Limits.ReflectsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L307-L307","name":"CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.out","line":307,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.out\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">ReflectsColimitOfIsSplitPair</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair\">CategoryTheory.Monad.ReflectsColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.ReflectsColimit\">CategoryTheory.Limits.ReflectsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L306-L306","name":"CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.mk","line":306,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">ReflectsColimitOfIsSplitPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\">{<span class=\"fn\">A </span>B : <span class=\"fn\">D</span>} →\n  <span class=\"fn\">(<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>) →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>] →\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.ReflectsColimit\">CategoryTheory.Limits.ReflectsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair\">CategoryTheory.Monad.ReflectsColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L306-L307","name":"CategoryTheory.Monad.ReflectsColimitOfIsSplitPair","line":306,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.ReflectsColimitOfIsSplitPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">ReflectsColimitOfIsSplitPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u₁ u₂) v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L299-L302","name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","line":299,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instForAllAlgebraToMonadLeftAdjointOfRightAdjointPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\">CategoryTheory.Monad.PreservesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L296-L297","name":"CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","line":296,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instPreservesColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\">CategoryTheory.Monad.PreservesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L294-L294","name":"CategoryTheory.Monad.PreservesColimitOfIsSplitPair.out","line":294,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair.out\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">PreservesColimitOfIsSplitPair</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\">CategoryTheory.Monad.PreservesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L293-L293","name":"CategoryTheory.Monad.PreservesColimitOfIsSplitPair.mk","line":293,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">PreservesColimitOfIsSplitPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\">{<span class=\"fn\">A </span>B : <span class=\"fn\">D</span>} →\n  <span class=\"fn\">(<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>) →\n    <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>] →\n      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\">CategoryTheory.Monad.PreservesColimitOfIsSplitPair</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L293-L294","name":"CategoryTheory.Monad.PreservesColimitOfIsSplitPair","line":293,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.PreservesColimitOfIsSplitPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">PreservesColimitOfIsSplitPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u₁ u₂) v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L286-L289","name":"CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointHasCoequalizerObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","line":286,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointHasCoequalizerObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.instForAllAlgebraToMonadLeftAdjointOfRightAdjointHasCoequalizerObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">instForAllAlgebraToMonadLeftAdjointOfRightAdjointHasCoequalizerObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorObjToPrefunctorToFunctorAMapAAppCompIdCounit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair\">CategoryTheory.Monad.HasCoequalizerOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L280-L280","name":"CategoryTheory.Monad.HasCoequalizerOfIsSplitPair.out","line":280,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair.out\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">HasCoequalizerOfIsSplitPair</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair\">CategoryTheory.Monad.HasCoequalizerOfIsSplitPair</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L279-L279","name":"CategoryTheory.Monad.HasCoequalizerOfIsSplitPair.mk","line":279,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">HasCoequalizerOfIsSplitPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(out : <span class=\"fn\">∀ {<span class=\"fn\">A </span>B : <span class=\"fn\">D</span>} (<span class=\"fn\">f </span>g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>], <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair\">CategoryTheory.Monad.HasCoequalizerOfIsSplitPair</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L279-L280","name":"CategoryTheory.Monad.HasCoequalizerOfIsSplitPair","line":279,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.HasCoequalizerOfIsSplitPair\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">HasCoequalizerOfIsSplitPair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L255-L264","name":"CategoryTheory.Monad.createsGSplitCoequalizersOfMonadic","line":255,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.createsGSplitCoequalizersOfMonadic","doc":"If `G` is monadic, it creates colimits of `G`-split pairs. This is the \"boring\" direction of Beck's\nmonadicity theorem, the converse is given in `monadicOfCreatesGSplitCoequalizers`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.createsGSplitCoequalizersOfMonadic\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">createsGSplitCoequalizersOfMonadic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.MonadicRightAdjoint\">CategoryTheory.MonadicRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃A : <span class=\"fn\">D</span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃B : <span class=\"fn\">D</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimit\">CategoryTheory.CreatesColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L233-L240","name":"CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit_app","line":233,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonAdjunction_counit_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction</span>.counit</span>.app <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit.desc\">CategoryTheory.Limits.colimit.desc</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork\">CategoryTheory.Monad.MonadicityInternal.counitCofork</a> <span class=\"fn\">B</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L224-L231","name":"CategoryTheory.Monad.MonadicityInternal.instHasColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorLeftAdjointObjToPrefunctorObjToPrefunctorCompIdMapMapAppCounitOfRightAdjoint","line":224,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.instHasColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorLeftAdjointObjToPrefunctorObjToPrefunctorCompIdMapMapAppCounitOfRightAdjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.instHasColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorLeftAdjointObjToPrefunctorObjToPrefunctorCompIdMapMapAppCounitOfRightAdjoint\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">instHasColimitWalkingParallelPairWalkingParallelPairHomCategoryParallelPairObjToQuiverToCategoryStructToQuiverToCategoryStructToPrefunctorLeftAdjointObjToPrefunctorObjToPrefunctorCompIdMapMapAppCounitOfRightAdjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimit\">CategoryTheory.Limits.HasColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L216-L220","name":"CategoryTheory.Monad.MonadicityInternal.counitCoequalizerOfReflectsCoequalizer","line":216,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCoequalizerOfReflectsCoequalizer","doc":"The counit cofork is a colimit provided `G` reflects it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCoequalizerOfReflectsCoequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">counitCoequalizerOfReflectsCoequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.ReflectsColimit\">CategoryTheory.Limits.ReflectsColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork\">CategoryTheory.Monad.MonadicityInternal.counitCofork</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L208-L212","name":"CategoryTheory.Monad.MonadicityInternal.unitColimitOfPreservesCoequalizer","line":208,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitColimitOfPreservesCoequalizer","doc":"The unit cofork is a colimit provided `G` preserves it.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitColimitOfPreservesCoequalizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">unitColimitOfPreservesCoequalizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimit\">CategoryTheory.Limits.PreservesColimit</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">CategoryTheory.Limits.IsColimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork\">CategoryTheory.Monad.MonadicityInternal.unitCofork</a> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L201-L204","name":"CategoryTheory.Monad.MonadicityInternal.counitCofork","line":201,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork","doc":"The cofork which describes the counit of the adjunction: the morphism from the coequalizer of\nthis pair to this morphism is the counit.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">counitCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">CategoryTheory.Limits.Cofork</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L200-L200","name":"CategoryTheory.Monad.MonadicityInternal.counitCofork_pt","line":200,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">counitCofork_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork\">CategoryTheory.Monad.MonadicityInternal.counitCofork</a> <span class=\"fn\">B</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L200-L200","name":"CategoryTheory.Monad.MonadicityInternal.counitCofork_ι_app","line":200,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork_ι_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork_ι_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">counitCofork_ι_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair\">CategoryTheory.Limits.WalkingParallelPair</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.counitCofork\">CategoryTheory.Monad.MonadicityInternal.counitCofork</a> <span class=\"fn\">B</span></span>)</span>.ι</span>.app <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.WalkingParallelPair.rec\">CategoryTheory.Limits.WalkingParallelPair.rec</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L184-L194","name":"CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_unit_f","line":184,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_unit_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_unit_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonAdjunction_unit_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction</span>.unit</span>.app <span class=\"fn\">A</span></span>)</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit.desc\">CategoryTheory.Limits.IsColimit.desc</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Coequalizer.html#CategoryTheory.Monad.beckCoequalizer\">CategoryTheory.Monad.beckCoequalizer</a> <span class=\"fn\">A</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork\">CategoryTheory.Monad.MonadicityInternal.unitCofork</a> <span class=\"fn\">A</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L178-L181","name":"CategoryTheory.Monad.MonadicityInternal.unitCofork_π","line":178,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">unitCofork_π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.π\">CategoryTheory.Limits.Cofork.π</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork\">CategoryTheory.Monad.MonadicityInternal.unitCofork</a> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">G</span>.map\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.coequalizer.π\">CategoryTheory.Limits.coequalizer.π</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L168-L174","name":"CategoryTheory.Monad.MonadicityInternal.unitCofork","line":168,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork","doc":"This is a cofork which is helpful for establishing monadicity: the morphism from the Beck\ncoequalizer to this cofork is the unit for the adjunction on the comparison functor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">unitCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork\">CategoryTheory.Limits.Cofork</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L167-L167","name":"CategoryTheory.Monad.MonadicityInternal.unitCofork_pt","line":167,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork_pt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork_pt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">unitCofork_pt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.unitCofork\">CategoryTheory.Monad.MonadicityInternal.unitCofork</a> <span class=\"fn\">A</span></span>)</span>.pt</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">G</span>.obj\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.coequalizer\">CategoryTheory.Limits.coequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L154-L161","name":"CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_unit_f_aux","line":154,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_unit_f_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_unit_f_aux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonAdjunction_unit_f_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction</span>.unit</span>.app <span class=\"fn\">A</span></span>)</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.homEquiv\">CategoryTheory.Adjunction.homEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\"><span class=\"fn\">A</span>.A</span>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.coequalizer\">CategoryTheory.Limits.coequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.coequalizer.π\">CategoryTheory.Limits.coequalizer.π</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L147-L151","name":"CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction","line":147,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction","doc":"Provided we have the appropriate coequalizers, we have an adjunction to the comparison functor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonAdjunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Monad.MonadicityInternal.leftAdjointComparison</span> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Monad.comparison\">CategoryTheory.Monad.comparison</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L146-L146","name":"CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit","line":146,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction_counit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonAdjunction_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.Monad.MonadicityInternal.comparisonAdjunction</span>.counit</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.mk\">CategoryTheory.NatTrans.mk</a> <span class=\"fn\">fun (<span class=\"fn\">Y</span> : <span class=\"fn\">D</span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.IsColimit.homIso\">CategoryTheory.Limits.Cofork.IsColimit.homIso</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit.isColimit\">CategoryTheory.Limits.colimit.isColimit</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>)</span></span>)</span>\n          <span class=\"fn\">Y</span></span>)</span>.symm</span>\n      <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">Y</span></span>,\n        <span class=\"fn\">property</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun\n                  (<span class=\"fn\">b</span> :\n                    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj\n                        <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Monad.comparison\">CategoryTheory.Monad.comparison</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span>.A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                       <span class=\"fn\">Y</span></span>) =&gt;\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map\n                      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Monad.comparison\">CategoryTheory.Monad.comparison</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span>.a</span></span>)</span>\n                    <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app\n                      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj\n                        <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Monad.comparison\">CategoryTheory.Monad.comparison</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">Y</span></span>)</span>.A</span></span>)</span></span>)</span>\n                    <span class=\"fn\">b</span></span></span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">Y</span></span>)</span></span>)</span> }</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L127-L141","name":"CategoryTheory.Monad.MonadicityInternal.leftAdjointComparison","line":127,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.leftAdjointComparison","doc":"Construct the adjunction to the comparison functor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.leftAdjointComparison\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">leftAdjointComparison</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L101-L122","name":"CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv","line":101,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv","doc":"We have a bijection of homsets which will be used to construct the left adjoint to the comparison\nfunctor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonLeftAdjointHomEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj\">CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Monad.comparison\">CategoryTheory.Monad.comparison</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">B</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L100-L100","name":"CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv_symm_apply","line":100,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv_symm_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonLeftAdjointHomEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Monad.comparison\">CategoryTheory.Monad.comparison</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">B</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv\">CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.IsColimit.homIso\">CategoryTheory.Limits.Cofork.IsColimit.homIso</a>\n          <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit.isColimit\">CategoryTheory.Limits.colimit.isColimit</a>\n            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span>)</span>\n          <span class=\"fn\">B</span></span>)</span>.symm</span>\n      <span class=\"fn\">{\n        <span class=\"fn\">val</span> :=\n          <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">a</span>.f</span></span>)</span>\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>,\n        <span class=\"fn\">property</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>) =&gt;\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span>\n                    <span class=\"fn\">b</span></span></span></span>)</span>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">a</span>.f</span></span>)</span>\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">B</span></span>)</span></span>)</span></span>)</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L100-L100","name":"CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv_apply_f","line":100,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv_apply_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv_apply_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonLeftAdjointHomEquiv_apply_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\">D</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj\">CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv\">CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointHomEquiv</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span> <span class=\"fn\">a</span></span>)</span>.f</span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.unit</span>.app <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.map\n        <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Cofork.IsColimit.homIso\">CategoryTheory.Limits.Cofork.IsColimit.homIso</a>\n              <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.colimit.isColimit\">CategoryTheory.Limits.colimit.isColimit</a>\n                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">CategoryTheory.Limits.parallelPair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>)</span></span>)</span>\n              <span class=\"fn\">B</span></span>)</span>\n            <span class=\"fn\">a</span></span>)</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L91-L93","name":"CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj","line":91,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj","doc":"The object function for the left adjoint to the comparison functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.comparisonLeftAdjointObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">comparisonLeftAdjointObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasCoequalizer\">CategoryTheory.Limits.HasCoequalizer</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L83-L86","name":"CategoryTheory.Monad.MonadicityInternal.main_pair_G_split","line":83,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.main_pair_G_split","doc":"The \"main pair\" for an algebra `(A, α)` is the pair of morphisms `(F α, ε_FA)`. It is always a\n`G`-split pair, and will be used to construct the left adjoint to the comparison functor and show it\nis an equivalence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.main_pair_G_split\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">main_pair_G_split</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/SplitCoequalizer.html#CategoryTheory.Functor.IsSplitPair\">CategoryTheory.Functor.IsSplitPair</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Monad/Monadicity.lean#L70-L76","name":"CategoryTheory.Monad.MonadicityInternal.main_pair_reflexive","line":70,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.main_pair_reflexive","doc":"The \"main pair\" for an algebra `(A, α)` is the pair of morphisms `(F α, ε_FA)`. It is always a\nreflexive pair, and will be used to construct the left adjoint to the comparison functor and show it\nis an equivalence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monad/Monadicity.html#CategoryTheory.Monad.MonadicityInternal.main_pair_reflexive\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Monad</span>.<span class=\"name\">MonadicityInternal</span>.<span class=\"name\">main_pair_reflexive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₂}</a>     <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.IsRightAdjoint\">CategoryTheory.IsRightAdjoint</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra\">CategoryTheory.Monad.Algebra</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monad/Adjunction.html#CategoryTheory.Adjunction.toMonad\">CategoryTheory.Adjunction.toMonad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Reflexive.html#CategoryTheory.IsReflexivePair\">CategoryTheory.IsReflexivePair</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\"><span class=\"fn\">A</span>.a</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.ofRightAdjoint\">CategoryTheory.Adjunction.ofRightAdjoint</a> <span class=\"fn\">G</span></span>)</span>.counit</span>.app <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.leftAdjoint\">CategoryTheory.leftAdjoint</a> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\"><span class=\"fn\">A</span>.A</span></span>)</span></span>)</span></span></div></div>"}]}