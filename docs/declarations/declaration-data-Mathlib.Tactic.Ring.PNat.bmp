{"name":"Mathlib.Tactic.Ring.PNat","instances":[{"typeNames":["PNat","Nat"],"name":"Mathlib.Tactic.Ring.instCSLiftPNatNat","className":"Mathlib.Tactic.Ring.CSLift"},{"typeNames":["HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatOfNatHAddInstHAddInstAddNatInstOfNatNatInstOfNatPNatHAddNatInstHAddInstAddNatOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["Nat.toPNat"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["Nat.succPNat","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatSuccPNatHAddInstHAddInstAddNatOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["Nat.toPNat'","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat'HAddInstHAddInstAddNatPredOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["PNat.divExact","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatDivExactHAddInstHAddInstAddNatDivOfNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["HAdd.hAdd","HAdd.hAdd"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHAddInstHAddInstPNatAddInstAddNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["HMul.hMul","HMul.hMul"],"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHMulInstHMulInstPNatMulInstMulNat","className":"Mathlib.Tactic.Ring.CSLiftVal"},{"typeNames":["HPow.hPow","HPow.hPow"],"name":"Mathlib.Tactic.Ring.instCSLiftValHPowPNatNat","className":"Mathlib.Tactic.Ring.CSLiftVal"}],"imports":["Init","Mathlib.Tactic.Ring.Basic","Mathlib.Data.PNat.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L40-L41","name":"Mathlib.Tactic.Ring.instCSLiftValHPowPNatNat","line":40,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValHPowPNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValHPowPNatNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValHPowPNatNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h1 : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L37-L38","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHMulInstHMulInstPNatMulInstMulNat","line":37,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHMulInstHMulInstPNatMulInstMulNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHMulInstHMulInstPNatMulInstMulNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatHMulInstHMulInstPNatMulInstMulNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h1 : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h2 : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">k</span> <span class=\"fn\">k'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L34-L35","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHAddInstHAddInstPNatAddInstAddNat","line":34,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHAddInstHAddInstPNatAddInstAddNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatHAddInstHAddInstPNatAddInstAddNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatHAddInstHAddInstPNatAddInstAddNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h1 : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h2 : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">k</span> <span class=\"fn\">k'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k'</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L32-L32","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatDivExactHAddInstHAddInstAddNatDivOfNat","line":32,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatDivExactHAddInstHAddInstAddNatDivOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatDivExactHAddInstHAddInstAddNatDivOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatDivExactHAddInstHAddInstAddNatDivOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.divExact\">PNat.divExact</a> <span class=\"fn\">n</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">PNat.div</a> <span class=\"fn\">n</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L30-L30","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat'HAddInstHAddInstAddNatPredOfNat","line":30,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat'HAddInstHAddInstAddNatPredOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat'HAddInstHAddInstAddNatPredOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatToPNat'HAddInstHAddInstAddNatPredOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.toPNat'\">Nat.toPNat'</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.pred\">Nat.pred</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L28-L28","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatSuccPNatHAddInstHAddInstAddNatOfNat","line":28,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatSuccPNatHAddInstHAddInstAddNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatSuccPNatHAddInstHAddInstAddNatOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatSuccPNatHAddInstHAddInstAddNatOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L26-L26","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat","line":26,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatToPNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatToPNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.toPNat\">Nat.toPNat</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L24-L24","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatOfNatHAddInstHAddInstAddNatInstOfNatNatInstOfNatPNatHAddNatInstHAddInstAddNatOfNat","line":24,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatOfNatHAddInstHAddInstAddNatInstOfNatNatInstOfNatPNatHAddNatInstHAddInstAddNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatInstCSLiftPNatNatOfNatHAddInstHAddInstAddNatInstOfNatNatInstOfNatPNatHAddNatInstHAddInstAddNatOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatInstCSLiftPNatNatOfNatHAddInstHAddInstAddNatInstOfNatNatInstOfNatPNatHAddNatInstHAddInstAddNatOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">Mathlib.Tactic.Ring.CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Ring/PNat.lean#L18-L20","name":"Mathlib.Tactic.Ring.instCSLiftPNatNat","line":18,"kind":"instance","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftPNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftPNatNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftPNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLift\">Mathlib.Tactic.Ring.CSLift</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}