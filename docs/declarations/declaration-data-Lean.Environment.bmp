{"name":"Lean.Environment","instances":[{"typeNames":["Lean.EnvExtensionState"],"name":"Lean.instInhabitedEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.ModuleIdx"],"name":"Lean.instInhabitedModuleIdx","className":"Inhabited"},{"typeNames":["Lean.Import"],"name":"Lean.instReprImport","className":"Repr"},{"typeNames":["Lean.Import"],"name":"Lean.instInhabitedImport","className":"Inhabited"},{"typeNames":["Lean.Name","Lean.Import"],"name":"Lean.instCoeNameImport","className":"Coe"},{"typeNames":["Lean.Import"],"name":"Lean.instToStringImport","className":"ToString"},{"typeNames":["Lean.EnvExtensionEntry"],"name":"Lean.instNonemptyEnvExtensionEntry","className":"Nonempty"},{"typeNames":["Lean.ModuleData"],"name":"Lean.instInhabitedModuleData","className":"Inhabited"},{"typeNames":["Lean.EnvironmentHeader"],"name":"Lean.instNonemptyEnvironmentHeader","className":"Nonempty"},{"typeNames":["Lean.Environment"],"name":"Lean.instNonemptyEnvironment","className":"Nonempty"},{"typeNames":["Lean.EnvExtensionInterface"],"name":"Lean.instInhabitedEnvExtensionInterface","className":"Inhabited"},{"typeNames":["Lean.EnvExtensionInterfaceUnsafe.Ext"],"name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","className":"Inhabited"},{"typeNames":["Lean.EnvExtension"],"name":"Lean.EnvExtension.instInhabitedEnvExtension","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtensionState"],"name":"Lean.instInhabitedPersistentEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtension"],"name":"Lean.instInhabitedPersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.SimplePersistentEnvExtension"],"name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.TagDeclarationExtension"],"name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","className":"Inhabited"},{"typeNames":["Lean.MapDeclarationExtension"],"name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","className":"Inhabited"},{"typeNames":[],"name":"Lean.instMonadEnv","className":"Lean.MonadEnv"}],"imports":["Init","Lean.Data.HashMap","Lean.ImportingFlag","Lean.Data.SMap","Lean.Declaration","Lean.LocalContext","Lean.Util.Path","Lean.Util.FindExpr","Lean.Util.Profile","Lean.Util.InstantiateLevelParams"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L974-L976","name":"Lean.instMonadEnv","line":974,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instMonadEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instMonadEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">instMonadEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L969-L969","name":"Lean.MonadEnv.modifyEnv","line":969,"kind":"def","docLink":"./Lean/Environment.html#Lean.MonadEnv.modifyEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv.modifyEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span>.<span class=\"name\">modifyEnv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span>)</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L968-L968","name":"Lean.MonadEnv.getEnv","line":968,"kind":"def","docLink":"./Lean/Environment.html#Lean.MonadEnv.getEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv.getEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span>.<span class=\"name\">getEnv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L967-L967","name":"Lean.MonadEnv.mk","line":967,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.MonadEnv.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(getEnv : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifyEnv : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span>)</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L967-L969","name":"Lean.MonadEnv","line":967,"kind":"class","docLink":"./Lean/Environment.html#Lean.MonadEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L963-L963","name":"Lean.Kernel.whnf","line":963,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Kernel.whnf","doc":"Kernel WHNF function. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Kernel.whnf\"><span class=\"name\">Lean</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">whnf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L955-L956","name":"Lean.Kernel.isDefEqGuarded","line":955,"kind":"def","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEqGuarded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Kernel.isDefEqGuarded\"><span class=\"name\">Lean</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">isDefEqGuarded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L953-L953","name":"Lean.Kernel.isDefEq","line":953,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEq","doc":"Kernel isDefEq predicate. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Kernel.isDefEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">isDefEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L934-L941","name":"Lean.Environment.hasUnsafe","line":934,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.hasUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.hasUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">hasUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L924-L932","name":"Lean.Environment.evalConstCheck","line":924,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.evalConstCheck","doc":"Like `evalConst`, but first check that `constName` indeed is a declaration of type `typeName`.\nNote that this function cannot guarantee that `typeName` is in fact the name of the type `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.evalConstCheck\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">evalConstCheck</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(typeName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L917-L917","name":"Lean.Environment.evalConst","line":917,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Environment.evalConst","doc":"Evaluate the given declaration under the given environment to a value of the given type.\nThis function is only safe to use if the type matches the declaration's type in the environment\nand if `enableInitializersExecution` has been used before importing any modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.evalConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">evalConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L894-L910","name":"Lean.Environment.displayStats","line":894,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.displayStats","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.displayStats\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">displayStats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L876-L877","name":"Lean.Environment.getNamespaceSet","line":876,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getNamespaceSet","doc":"Return a set containing all namespaces in `env`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.getNamespaceSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getNamespaceSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">Lean.NameSSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L872-L873","name":"Lean.Environment.isNamespace","line":872,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.isNamespace","doc":"Return `true` if `n` is the name of a namespace in `env`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.isNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">isNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L868-L869","name":"Lean.Environment.registerNamespace","line":868,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.registerNamespace","doc":"Register a new namespace in the environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.registerNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">registerNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L847-L863","name":"Lean.namespacesExt","line":847,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.namespacesExt","doc":"Environment extension for tracking all `namespace` declared by users.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.namespacesExt\"><span class=\"name\">Lean</span>.<span class=\"name\">namespacesExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">Lean.NameSSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L843-L845","name":"Lean.withImportModules","line":843,"kind":"def","docLink":"./Lean/Environment.html#Lean.withImportModules","doc":"Create environment object from imports and free compacted regions after calling `act`. No live references to the\nenvironment object or imported objects may exist after `act` finishes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.withImportModules\"><span class=\"name\">Lean</span>.<span class=\"name\">withImportModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(act : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L831-L838","name":"Lean.importModules","line":831,"kind":"def","docLink":"./Lean/Environment.html#Lean.importModules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.importModules\"><span class=\"name\">Lean</span>.<span class=\"name\">importModules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leakEnv : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L777-L828","name":"Lean.finalizeImport","line":777,"kind":"def","docLink":"./Lean/Environment.html#Lean.finalizeImport","doc":"Construct environment from `importModulesCore` results.\n\nIf `leakEnv` is true, we mark the environment as persistent, which means it\nwill not be freed. We set this when the object would survive until the end of\nthe process anyway. In exchange, RC updates are avoided, which is especially\nimportant when they would be atomic because the environment is shared across\nthreads (potentially, storing it in an `IO.Ref` is sufficient for marking it\nas such). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.finalizeImport\"><span class=\"name\">Lean</span>.<span class=\"name\">finalizeImport</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leakEnv : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L752-L766","name":"Lean.importModulesCore","line":752,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.importModulesCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.importModulesCore\"><span class=\"name\">Lean</span>.<span class=\"name\">importModulesCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportStateM\">Lean.ImportStateM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L749-L750","name":"Lean.ImportStateM.run","line":749,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportStateM.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportStateM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportStateM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportStateM\">Lean.ImportStateM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a> <span class=\"fn\">{ <span class=\"fn\">moduleNameSet</span> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>, <span class=\"fn\">moduleNames</span> := <span class=\"fn\">#[]</span>, <span class=\"fn\">moduleData</span> := <span class=\"fn\">#[]</span>, <span class=\"fn\">regions</span> := <span class=\"fn\">#[]</span> }</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L747-L747","name":"Lean.ImportStateM","line":747,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportStateM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportStateM\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportStateM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L742-L745","name":"Lean.throwAlreadyImported","line":742,"kind":"def","docLink":"./Lean/Environment.html#Lean.throwAlreadyImported","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.throwAlreadyImported\"><span class=\"name\">Lean</span>.<span class=\"name\">throwAlreadyImported</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(const2ModIdx : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cname : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L740-L740","name":"Lean.ImportState.regions","line":740,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.regions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.regions\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">regions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L739-L739","name":"Lean.ImportState.moduleData","line":739,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.moduleData\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">moduleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L738-L738","name":"Lean.ImportState.moduleNames","line":738,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.moduleNames\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">moduleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L737-L737","name":"Lean.ImportState.moduleNameSet","line":737,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleNameSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.moduleNameSet\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">moduleNameSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">Lean.NameHashSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L736-L736","name":"Lean.ImportState.mk","line":736,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.ImportState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(moduleNameSet : <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">Lean.NameHashSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleData : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L736-L740","name":"Lean.ImportState","line":736,"kind":"structure","docLink":"./Lean/Environment.html#Lean.ImportState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L709-L709","name":"Lean.getNumBuiltinAttributes","line":709,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.getNumBuiltinAttributes","doc":"\"Forward declaration\" for retrieving the number of builtin attributes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.getNumBuiltinAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">getNumBuiltinAttributes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L707-L707","name":"Lean.updateEnvAttributes","line":707,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.updateEnvAttributes","doc":"\"Forward declaration\" needed for updating the attribute table with user-defined attributes.\nUser-defined attributes are declared using the `initialize` command. The `initialize` command is just syntax sugar for the `init` attribute.\nThe `init` attribute is initialized after the `attributeExtension` is initialized. We cannot change the order since the `init` attribute is an attribute,\nand requires this extension.\nThe `attributeExtension` initializer uses `attributeMapRef` to initialize the attribute mapping.\nWhen we a new user-defined attribute declaration is imported, `attributeMapRef` is updated.\nLater, we set this method with code that adds the user-defined attributes that were imported after we initialized `attributeExtension`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.updateEnvAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">updateEnvAttributes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L673-L680","name":"Lean.mkExtNameMap","line":673,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkExtNameMap","doc":"Construct a mapping from persistent extension name to entension index at the array of persistent extensions.\nWe only consider extensions starting with index `>= startingAt`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkExtNameMap\"><span class=\"name\">Lean</span>.<span class=\"name\">mkExtNameMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startingAt : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L666-L667","name":"Lean.writeModule","line":666,"kind":"def","docLink":"./Lean/Environment.html#Lean.writeModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.writeModule\"><span class=\"name\">Lean</span>.<span class=\"name\">writeModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L652-L663","name":"Lean.mkModuleData","line":652,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">mkModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L634-L650","name":"Lean.Environment.freeRegions","line":634,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.freeRegions","doc":"Free compacted regions of imports. No live references to imported objects may exist at the time of invocation; in\nparticular, `env` should be the last reference to any `Environment` derived from these imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.freeRegions\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">freeRegions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L628-L628","name":"Lean.readModuleData","line":628,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.readModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.readModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">readModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L626-L626","name":"Lean.saveModuleData","line":626,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.saveModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.saveModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">saveModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mod : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L618-L621","name":"Lean.MapDeclarationExtension.contains","line":618,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">contains</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L610-L616","name":"Lean.MapDeclarationExtension.find?","line":610,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L605-L608","name":"Lean.MapDeclarationExtension.insert","line":605,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L602-L603","name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","line":602,"kind":"instance","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">instInhabitedMapDeclarationExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L592-L598","name":"Lean.mkMapDeclarationExtension","line":592,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkMapDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkMapDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">mkMapDeclarationExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.3338\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L590-L590","name":"Lean.MapDeclarationExtension","line":590,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension","doc":"Environment extension for mapping declarations to values.\nDeclarations must only be inserted into the mapping in the module where they were declared. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L580-L583","name":"Lean.TagDeclarationExtension.isTagged","line":580,"kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span>.<span class=\"name\">isTagged</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L575-L578","name":"Lean.TagDeclarationExtension.tag","line":575,"kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.tag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension.tag\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span>.<span class=\"name\">tag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L572-L573","name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","line":572,"kind":"instance","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span>.<span class=\"name\">instInhabitedTagDeclarationExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L562-L568","name":"Lean.mkTagDeclarationExtension","line":562,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkTagDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkTagDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">mkTagDeclarationExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.3160\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L560-L560","name":"Lean.TagDeclarationExtension","line":560,"kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension","doc":"Environment extension for tagging declarations.\nDeclarations must only be tagged in the module where they were declared. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L553-L554","name":"Lean.SimplePersistentEnvExtension.modifyState","line":553,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState","doc":"Modify the state of the given extension in the given environment by applying the given function. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L549-L550","name":"Lean.SimplePersistentEnvExtension.setState","line":549,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState","doc":"Set the current state of the given `SimplePersistentEnvExtension`. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L545-L546","name":"Lean.SimplePersistentEnvExtension.getState","line":545,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState","doc":"Get the current state of the given `SimplePersistentEnvExtension`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L541-L542","name":"Lean.SimplePersistentEnvExtension.getEntries","line":541,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries","doc":"Get the list of values used to update the state of the given\n`SimplePersistentEnvExtension` in the current file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">getEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L536-L537","name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","line":536,"kind":"instance","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">instInhabitedSimplePersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L523-L532","name":"Lean.registerSimplePersistentEnvExtension","line":523,"kind":"def","docLink":"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerSimplePersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L521-L521","name":"Lean.SimplePersistentEnvExtensionDescr.toArrayFn","line":521,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.toArrayFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.toArrayFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">toArrayFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L520-L520","name":"Lean.SimplePersistentEnvExtensionDescr.addImportedFn","line":520,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L519-L519","name":"Lean.SimplePersistentEnvExtensionDescr.addEntryFn","line":519,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L518-L518","name":"Lean.SimplePersistentEnvExtensionDescr.name","line":518,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L517-L517","name":"Lean.SimplePersistentEnvExtensionDescr.mk","line":517,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.2821\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addImportedFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toArrayFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L517-L521","name":"Lean.SimplePersistentEnvExtensionDescr","line":517,"kind":"structure","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L514-L515","name":"Lean.mkStateFromImportedEntries","line":514,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkStateFromImportedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkStateFromImportedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">mkStateFromImportedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initState : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(as : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L512-L512","name":"Lean.SimplePersistentEnvExtension","line":512,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension","doc":"Simple `PersistentEnvExtension` that implements `exportEntriesFn` using a list of entries. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L509-L509","name":"Lean.registerPersistentEnvExtension","line":509,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerPersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerPersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L487-L506","name":"Lean.registerPersistentEnvExtensionUnsafe","line":487,"kind":"def","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">registerPersistentEnvExtensionUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L485-L485","name":"Lean.PersistentEnvExtensionDescr.statsFn","line":485,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.statsFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.statsFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">statsFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L484-L484","name":"Lean.PersistentEnvExtensionDescr.exportEntriesFn","line":484,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.exportEntriesFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.exportEntriesFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">exportEntriesFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L483-L483","name":"Lean.PersistentEnvExtensionDescr.addEntryFn","line":483,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L482-L482","name":"Lean.PersistentEnvExtensionDescr.addImportedFn","line":482,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L481-L481","name":"Lean.PersistentEnvExtensionDescr.mkInitial","line":481,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mkInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L480-L480","name":"Lean.PersistentEnvExtensionDescr.name","line":480,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L479-L479","name":"Lean.PersistentEnvExtensionDescr.mk","line":479,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.2418\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addImportedFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exportEntriesFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(statsFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L479-L485","name":"Lean.PersistentEnvExtensionDescr","line":479,"kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L477-L477","name":"Lean.persistentEnvExtensionsRef","line":477,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.persistentEnvExtensionsRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.persistentEnvExtensionsRef\"><span class=\"name\">Lean</span>.<span class=\"name\">persistentEnvExtensionsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L472-L473","name":"Lean.PersistentEnvExtension.modifyState","line":472,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState","doc":"Modify the state of the given extension in the given environment by applying the given function. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L468-L469","name":"Lean.PersistentEnvExtension.setState","line":468,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.setState","doc":"Set the current state of the given extension in the given environment. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L464-L465","name":"Lean.PersistentEnvExtension.getState","line":464,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getState","doc":"Get the current state of the given extension in the given environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L458-L461","name":"Lean.PersistentEnvExtension.addEntry","line":458,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L455-L456","name":"Lean.PersistentEnvExtension.getModuleEntries","line":455,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">getModuleEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L443-L451","name":"Lean.instInhabitedPersistentEnvExtension","line":443,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L440-L441","name":"Lean.instInhabitedPersistentEnvExtensionState","line":440,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPersistentEnvExtensionState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L438-L438","name":"Lean.PersistentEnvExtension.statsFn","line":438,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.statsFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.statsFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">statsFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L437-L437","name":"Lean.PersistentEnvExtension.exportEntriesFn","line":437,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.exportEntriesFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.exportEntriesFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">exportEntriesFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L436-L436","name":"Lean.PersistentEnvExtension.addEntryFn","line":436,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L435-L435","name":"Lean.PersistentEnvExtension.addImportedFn","line":435,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L434-L434","name":"Lean.PersistentEnvExtension.name","line":434,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L433-L433","name":"Lean.PersistentEnvExtension.toEnvExtension","line":433,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.toEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.toEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">toEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L432-L432","name":"Lean.PersistentEnvExtension.mk","line":432,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toEnvExtension : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addImportedFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exportEntriesFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(statsFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L432-L438","name":"Lean.PersistentEnvExtension","line":432,"kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension","doc":"An environment extension with support for storing/retrieving entries from a .olean file.\n- α is the type of the entries that are stored in .olean files.\n- β is the type of values used to update the state.\n- σ is the actual state.\n\nRemark: for most extensions α and β coincide.\n\nNote that `addEntryFn` is not in `IO`. This is intentional, and allows us to write simple functions such as\n```\ndef addAlias (env : Environment) (a : Name) (e : Name) : Environment :=\naliasExtension.addEntry env (a, e)\n```\nwithout using `IO`. We have many functions like `addAlias`.\n\n`α` and ‵β` do not coincide for extensions where the data used to update the state contains, for example,\nclosures which we currently cannot store in files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L414-L414","name":"Lean.ImportM","line":414,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L412-L412","name":"Lean.ImportM.Context.opts","line":412,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM.Context.opts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportM.Context\">Lean.ImportM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L411-L411","name":"Lean.ImportM.Context.env","line":411,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM.Context.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context.env\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportM.Context\">Lean.ImportM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L410-L410","name":"Lean.ImportM.Context.mk","line":410,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.ImportM.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ImportM.Context\">Lean.ImportM.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L410-L412","name":"Lean.ImportM.Context","line":410,"kind":"structure","docLink":"./Lean/Environment.html#Lean.ImportM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L408-L408","name":"Lean.PersistentEnvExtensionState.state","line":408,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.state","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState.state\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span>.<span class=\"name\">state</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L407-L407","name":"Lean.PersistentEnvExtensionState.importedEntries","line":407,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.importedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState.importedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span>.<span class=\"name\">importedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L406-L406","name":"Lean.PersistentEnvExtensionState.mk","line":406,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(importedEntries : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(state : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L406-L408","name":"Lean.PersistentEnvExtensionState","line":406,"kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L394-L404","name":"Lean.mkEmptyEnvironment","line":394,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkEmptyEnvironment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkEmptyEnvironment\"><span class=\"name\">Lean</span>.<span class=\"name\">mkEmptyEnvironment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L390-L390","name":"Lean.registerEnvExtension","line":390,"kind":"def","docLink":"./Lean/Environment.html#Lean.registerEnvExtension","doc":"Environment extensions can only be registered during initialization.\nReasons:\n1- Our implementation assumes the number of extensions does not change after an environment object is created.\n2- We do not use any synchronization primitive to access `envExtensionsRef`.\n\nNote that by default, extension state is *not* stored in .olean files and will not propagate across `import`s.\nFor that, you need to register a persistent environment extension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L378-L379","name":"Lean.EnvExtension.getState","line":378,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L375-L376","name":"Lean.EnvExtension.modifyState","line":375,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L372-L373","name":"Lean.EnvExtension.setState","line":372,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.setState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L370-L370","name":"Lean.EnvExtension.instInhabitedEnvExtension","line":370,"kind":"instance","docLink":"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">instInhabitedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L363-L363","name":"Lean.EnvExtension","line":363,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L361-L361","name":"Lean.EnvExtensionInterfaceImp","line":361,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceImp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L347-L356","name":"Lean.EnvExtensionInterfaceUnsafe.imp","line":347,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">imp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L343-L345","name":"Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","line":343,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">mkInitialExtStates</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L331-L341","name":"Lean.EnvExtensionInterfaceUnsafe.registerExt","line":331,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">registerExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L324-L329","name":"Lean.EnvExtensionInterfaceUnsafe.getState","line":324,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L314-L322","name":"Lean.EnvExtensionInterfaceUnsafe.modifyState","line":314,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L307-L312","name":"Lean.EnvExtensionInterfaceUnsafe.setState","line":307,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L296-L303","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","line":296,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">ensureExtensionsArraySize</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L293-L303","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","line":293,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","doc":"User-defined environment extensions are declared using the `initialize` command.\nThis command is just syntax sugar for the `init` attribute.\nWhen we `import` lean modules, the vector stored at `envExtensionsRef` may increase in size because of\nuser-defined environment extensions. When this happens, we must adjust the size of the `env.extensions`.\nThis method is invoked when processing `import`s.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">ensureExtensionsArraySize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L282-L282","name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","line":282,"kind":"instance","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">instInhabitedExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L281-L281","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial","line":281,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L280-L280","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.idx","line":280,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.idx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.idx\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span>.<span class=\"name\">idx</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L279-L279","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.mk","line":279,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L279-L282","name":"Lean.EnvExtensionInterfaceUnsafe.Ext","line":279,"kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L264-L274","name":"Lean.instInhabitedEnvExtensionInterface","line":264,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedEnvExtensionInterface</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L262-L262","name":"Lean.EnvExtensionInterface.ensureExtensionsSize","line":262,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.ensureExtensionsSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ensureExtensionsSize\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">ensureExtensionsSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L261-L261","name":"Lean.EnvExtensionInterface.mkInitialExtStates","line":261,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.mkInitialExtStates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.mkInitialExtStates\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">mkInitialExtStates</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L260-L260","name":"Lean.EnvExtensionInterface.getState","line":260,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">getState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L259-L259","name":"Lean.EnvExtensionInterface.modifyState","line":259,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">modifyState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L258-L258","name":"Lean.EnvExtensionInterface.setState","line":258,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.setState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">setState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exts : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L257-L257","name":"Lean.EnvExtensionInterface.registerExt","line":257,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.registerExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.registerExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">registerExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L256-L256","name":"Lean.EnvExtensionInterface.inhabitedExt","line":256,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.inhabitedExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.inhabitedExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">inhabitedExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L255-L255","name":"Lean.EnvExtensionInterface.ext","line":255,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L254-L254","name":"Lean.EnvExtensionInterface.mk","line":254,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inhabitedExt : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(registerExt : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(setState : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifyState : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getState : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>] → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span> → <span class=\"fn\">σ</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitialExtStates : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ensureExtensionsSize : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L254-L262","name":"Lean.EnvExtensionInterface","line":254,"kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface","doc":"Interface for managing environment extensions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> 1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L248-L249","name":"Lean.ConstantInfo.instantiateValueLevelParams!","line":248,"kind":"def","docLink":"./Lean/Environment.html#Lean.ConstantInfo.instantiateValueLevelParams!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ConstantInfo.instantiateValueLevelParams!\"><span class=\"name\">Lean</span>.<span class=\"name\">ConstantInfo</span>.<span class=\"name\">instantiateValueLevelParams!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L245-L246","name":"Lean.ConstantInfo.instantiateTypeLevelParams","line":245,"kind":"def","docLink":"./Lean/Environment.html#Lean.ConstantInfo.instantiateTypeLevelParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ConstantInfo.instantiateTypeLevelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">ConstantInfo</span>.<span class=\"name\">instantiateTypeLevelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L239-L239","name":"Lean.Environment.addDecl","line":239,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Environment.addDecl","doc":"Type check given declaration and add it to the environment "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.addDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">addDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Lean.Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L233-L233","name":"Lean.KernelException.interrupted","line":233,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.interrupted","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.interrupted\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">interrupted</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L232-L232","name":"Lean.KernelException.deepRecursion","line":232,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.deepRecursion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.deepRecursion\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">deepRecursion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L231-L231","name":"Lean.KernelException.excessiveMemory","line":231,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.excessiveMemory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.excessiveMemory\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">excessiveMemory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L230-L230","name":"Lean.KernelException.deterministicTimeout","line":230,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.deterministicTimeout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.deterministicTimeout\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">deterministicTimeout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L229-L229","name":"Lean.KernelException.other","line":229,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.other\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L228-L228","name":"Lean.KernelException.invalidProj","line":228,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.invalidProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.invalidProj\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">invalidProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(proj : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L227-L227","name":"Lean.KernelException.appTypeMismatch","line":227,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.appTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.appTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">appTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(funType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(argType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L226-L226","name":"Lean.KernelException.exprTypeMismatch","line":226,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.exprTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.exprTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">exprTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L225-L225","name":"Lean.KernelException.letTypeMismatch","line":225,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.letTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.letTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">letTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(givenType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L224-L224","name":"Lean.KernelException.typeExpected","line":224,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.typeExpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.typeExpected\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">typeExpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L223-L223","name":"Lean.KernelException.funExpected","line":223,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.funExpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.funExpected\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">funExpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L222-L222","name":"Lean.KernelException.declHasFVars","line":222,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declHasFVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.declHasFVars\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">declHasFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L221-L221","name":"Lean.KernelException.declHasMVars","line":221,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declHasMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.declHasMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">declHasMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L220-L220","name":"Lean.KernelException.declTypeMismatch","line":220,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.declTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">declTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Lean.Declaration</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(givenType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L219-L219","name":"Lean.KernelException.alreadyDeclared","line":219,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.alreadyDeclared","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.alreadyDeclared\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">alreadyDeclared</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L218-L218","name":"Lean.KernelException.unknownConstant","line":218,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.unknownConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.unknownConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">unknownConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L217-L233","name":"Lean.KernelException","line":217,"kind":"inductive","docLink":"./Lean/Environment.html#Lean.KernelException","doc":"Exceptions that can be raised by the Kernel when type checking new declarations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L211-L212","name":"Lean.Environment.getModuleIdx?","line":211,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdx?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.getModuleIdx?\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getModuleIdx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L206-L209","name":"Lean.Environment.isConstructor","line":206,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.isConstructor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.isConstructor\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">isConstructor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L203-L204","name":"Lean.Environment.getModuleIdxFor?","line":203,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getModuleIdxFor?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L188-L189","name":"Lean.Environment.mainModule","line":188,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.mainModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.mainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">mainModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L184-L185","name":"Lean.Environment.setMainModule","line":184,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.setMainModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.setMainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">setMainModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L180-L181","name":"Lean.Environment.allImportedModuleNames","line":180,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.allImportedModuleNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.allImportedModuleNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">allImportedModuleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L177-L178","name":"Lean.Environment.imports","line":177,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.imports","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L174-L175","name":"Lean.Environment.contains","line":174,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L170-L172","name":"Lean.Environment.find?","line":170,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">find?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L163-L167","name":"Lean.Environment.addExtraName","line":163,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.addExtraName","doc":"Save an extra constant name that is used to populate `const2ModIdx` when we import\n.olean files. We use this feature to save in which module an auxiliary declaration\ncreated by the code generator has been created.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.addExtraName\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">addExtraName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L151-L151","name":"Lean.instNonemptyEnvironment","line":151,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvironment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instNonemptyEnvironment\"><span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyEnvironment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L150-L150","name":"Lean.Environment.header","line":150,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.header","doc":"The header contains additional information that is not updated often. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.header\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">header</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L148-L148","name":"Lean.Environment.extraConstNames","line":148,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.extraConstNames","doc":"Constant names to be saved in the field `extraConstNames` at `ModuleData`.\nIt contains auxiliary declaration names created by the code generator which are not in `constants`.\nWhen importing modules, we want to insert them at `const2ModIdx`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.extraConstNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">extraConstNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L142-L142","name":"Lean.Environment.extensions","line":142,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.extensions","doc":"Environment extensions. It also includes user-defined extensions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.extensions\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">extensions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L138-L138","name":"Lean.Environment.constants","line":138,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.constants","doc":"Mapping from constant name to `ConstantInfo`. It contains all constants (definitions, theorems, axioms, etc)\nthat have been already type checked by the kernel.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.constants\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">constants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ConstMap\">Lean.ConstMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L133-L133","name":"Lean.Environment.const2ModIdx","line":133,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.const2ModIdx","doc":"Mapping from constant name to module (index) where constant has been declared.\nRecall that a Lean file has a header where previously compiled modules can be imported.\nEach imported module has a unique `ModuleIdx`.\nMany extensions use the `ModuleIdx` to efficiently retrieve information stored in imported modules.\n\nRemark: this mapping also contains auxiliary constants, created by the code generator, that are **not** in\nthe field `constants`. These auxiliary constants are invisible to the Lean kernel and elaborator.\nOnly the code generator uses them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.const2ModIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">const2ModIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L119-L151","name":"Lean.Environment","line":119,"kind":"structure","docLink":"./Lean/Environment.html#Lean.Environment","doc":"An environment stores declarations provided by the user. The kernel\ncurrently supports different kinds of declarations such as definitions, theorems,\nand inductive families. Each has a unique identifier (i.e., `Name`), and can be\nparameterized by a sequence of universe parameters.\nA constant in Lean is just a reference to a `ConstantInfo` object. The main task of\nthe kernel is to type check these declarations and refuse type incorrect ones. The\nkernel does not allow declarations containing metavariables and/or free variables\nto be added to an environment. Environments are never destructively updated.\n\nThe environment also contains a collection of extensions. For example, the `simp` theorems\ndeclared by users are stored in an environment extension. Users can declare new extensions\nusing meta-programming.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L103-L103","name":"Lean.instNonemptyEnvironmentHeader","line":103,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvironmentHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instNonemptyEnvironmentHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyEnvironmentHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L102-L102","name":"Lean.EnvironmentHeader.moduleData","line":102,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.moduleData","doc":"Module data for all imported modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.moduleData\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">moduleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L100-L100","name":"Lean.EnvironmentHeader.moduleNames","line":100,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.moduleNames","doc":"Name of all imported modules (directly and indirectly). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.moduleNames\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">moduleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L98-L98","name":"Lean.EnvironmentHeader.regions","line":98,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.regions","doc":"Compacted regions for all imported modules. Objects in compacted memory regions do no require any memory management. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.regions\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">regions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L96-L96","name":"Lean.EnvironmentHeader.imports","line":96,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.imports","doc":"Direct imports "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L94-L94","name":"Lean.EnvironmentHeader.mainModule","line":94,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.mainModule","doc":"Name of the module being compiled.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.mainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">mainModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L90-L90","name":"Lean.EnvironmentHeader.quotInit","line":90,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.quotInit","doc":"`quotInit = true` if the command `init_quot` has already been executed for the environment, and\n`Quot` declarations have been added to the environment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.quotInit\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">quotInit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L85-L85","name":"Lean.EnvironmentHeader.trustLevel","line":85,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.trustLevel","doc":"The trust level used by the kernel. For example,\nthe kernel assumes imported constants are type correct when the trust level is greater than zero.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.trustLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">trustLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L80-L80","name":"Lean.EnvironmentHeader.mk","line":80,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(quotInit : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainModule : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleData : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L80-L103","name":"Lean.EnvironmentHeader","line":80,"kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader","doc":"Environment fields that are not used often. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L77-L77","name":"Lean.instInhabitedModuleData","line":77,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedModuleData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L76-L76","name":"Lean.ModuleData.entries","line":76,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.entries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.entries\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">entries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L75-L75","name":"Lean.ModuleData.extraConstNames","line":75,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.extraConstNames","doc":"Extra entries for the `const2ModIdx` map in the `Environment` object.\nThe code generator creates auxiliary declarations that are not in the\nmapping `constants`, but we want to know in which module they were generated.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.extraConstNames\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">extraConstNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L69-L69","name":"Lean.ModuleData.constants","line":69,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.constants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.constants\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">constants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L68-L68","name":"Lean.ModuleData.constNames","line":68,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.constNames","doc":"`constNames` contains all constant names in `constants`.\nThis information is redundant. It is equal to `constants.map fun c => c.name`,\nbut it improves the performance of `importModules`. `perf` reports that 12% of the\nruntime was being spent on `ConstantInfo.name` when importing a file containing only `import Lean`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.constNames\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">constNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L61-L61","name":"Lean.ModuleData.imports","line":61,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.imports","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L60-L60","name":"Lean.ModuleData.mk","line":60,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.ModuleData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constants : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraConstNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(entries : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L60-L77","name":"Lean.ModuleData","line":60,"kind":"structure","docLink":"./Lean/Environment.html#Lean.ModuleData","doc":"Content of a .olean file.\nWe use `compact.cpp` to generate the image of this object in disk. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L56-L56","name":"Lean.instNonemptyEnvExtensionEntry","line":56,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyEnvExtensionEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L55-L55","name":"Lean.EnvExtensionEntry","line":55,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L54-L54","name":"Lean.EnvExtensionEntrySpec","line":54,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntrySpec","doc":"Opaque persistent environment extension entry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionEntrySpec\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionEntrySpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#NonemptyType\">NonemptyType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L51-L51","name":"Lean.CompactedRegion.free","line":51,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.CompactedRegion.free","doc":"Free a compacted region and its contents. No live references to the contents may exist at the time of invocation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.CompactedRegion.free\"><span class=\"name\">Lean</span>.<span class=\"name\">CompactedRegion</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L47-L47","name":"Lean.CompactedRegion.isMemoryMapped","line":47,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped\"><span class=\"name\">Lean</span>.<span class=\"name\">CompactedRegion</span>.<span class=\"name\">isMemoryMapped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L44-L44","name":"Lean.CompactedRegion","line":44,"kind":"def","docLink":"./Lean/Environment.html#Lean.CompactedRegion","doc":"A compacted region holds multiple Lean objects in a contiguous memory region, which can be read/written to/from disk.\nObjects inside the region do not have reference counters and cannot be freed individually. The contents of .olean\nfiles are compacted regions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.CompactedRegion\"><span class=\"name\">Lean</span>.<span class=\"name\">CompactedRegion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L38-L38","name":"Lean.instToStringImport","line":38,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instToStringImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instToStringImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instToStringImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L36-L36","name":"Lean.instCoeNameImport","line":36,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instCoeNameImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instCoeNameImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instCoeNameImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L34-L34","name":"Lean.instInhabitedImport","line":34,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L34-L34","name":"Lean.instReprImport","line":34,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instReprImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instReprImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L33-L33","name":"Lean.Import.runtimeOnly","line":33,"kind":"def","docLink":"./Lean/Environment.html#Lean.Import.runtimeOnly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import.runtimeOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span>.<span class=\"name\">runtimeOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L32-L32","name":"Lean.Import.module","line":32,"kind":"def","docLink":"./Lean/Environment.html#Lean.Import.module","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L31-L31","name":"Lean.Import.mk","line":31,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.Import.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(module : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(runtimeOnly : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L31-L34","name":"Lean.Import","line":31,"kind":"structure","docLink":"./Lean/Environment.html#Lean.Import","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L29-L29","name":"Lean.ConstMap","line":29,"kind":"def","docLink":"./Lean/Environment.html#Lean.ConstMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ConstMap\"><span class=\"name\">Lean</span>.<span class=\"name\">ConstMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L27-L27","name":"Lean.instInhabitedModuleIdx","line":27,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedModuleIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedModuleIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L25-L25","name":"Lean.ModuleIdx.toNat","line":25,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleIdx.toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleIdx.toNat\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleIdx</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(midx : <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L22-L23","name":"Lean.ModuleIdx","line":22,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L20-L20","name":"Lean.instInhabitedEnvExtensionState","line":20,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedEnvExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L19-L19","name":"Lean.EnvExtensionState","line":19,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Environment.lean#L18-L18","name":"Lean.EnvExtensionStateSpec","line":18,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionStateSpec","doc":"Opaque environment extension state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionStateSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionStateSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>) × <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span></span></div></div>"}]}