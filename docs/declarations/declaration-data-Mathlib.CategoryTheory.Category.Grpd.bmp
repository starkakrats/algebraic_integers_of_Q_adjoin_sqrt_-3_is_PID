{"name":"Mathlib.CategoryTheory.Category.Grpd","instances":[{"typeNames":["CategoryTheory.Grpd"],"name":"CategoryTheory.Grpd.instInhabitedGrpd","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"CategoryTheory.Grpd.str'","className":"CategoryTheory.Groupoid"},{"typeNames":["CategoryTheory.Grpd","_builtin_typeu"],"name":"CategoryTheory.Grpd.instCoeSortGrpdType","className":"CoeSort"},{"typeNames":["CategoryTheory.Grpd"],"name":"CategoryTheory.Grpd.category","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Grpd.forgetToCat"],"name":"CategoryTheory.Grpd.forgetToCatFull","className":"CategoryTheory.Full"},{"typeNames":["CategoryTheory.Grpd.forgetToCat"],"name":"CategoryTheory.Grpd.forgetToCat_faithful","className":"CategoryTheory.Faithful"},{"typeNames":["CategoryTheory.Discrete","CategoryTheory.Grpd"],"name":"CategoryTheory.Grpd.has_pi","className":"CategoryTheory.Limits.HasLimitsOfShape"}],"imports":["Init","Mathlib.CategoryTheory.SingleObj","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.CategoryTheory.Pi.Basic","Mathlib.CategoryTheory.Limits.IsLimit"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L152-L155","name":"CategoryTheory.Grpd.piIsoPi_hom_π","line":152,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi_hom_π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi_hom_π\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piIsoPi_hom_π</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi\">CategoryTheory.Grpd.piIsoPi</a> <span class=\"fn\">J</span> <span class=\"fn\">f</span></span>)</span>.hom</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">CategoryTheory.Limits.Pi.π</a> <span class=\"fn\">f</span> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Pi/Basic.html#CategoryTheory.Pi.eval\">CategoryTheory.Pi.eval</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L145-L147","name":"CategoryTheory.Grpd.piIsoPi","line":145,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi","doc":"The product of a family of groupoids is isomorphic\nto the product object in the category of Groupoids "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piIsoPi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piIsoPi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\">CategoryTheory.Grpd.of</a> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.piObj\">∏</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L138-L139","name":"CategoryTheory.Grpd.has_pi","line":138,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.has_pi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.has_pi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">has_pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProducts\">CategoryTheory.Limits.HasProducts</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L124-L134","name":"CategoryTheory.Grpd.piLimitFanIsLimit","line":124,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFanIsLimit","doc":"The product fan over an indexed family of groupoids, is a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFanIsLimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piLimitFanIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃J : <a href=\"./foundational_types.html\">Type</a> u⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan\">CategoryTheory.Grpd.piLimitFan</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L118-L119","name":"CategoryTheory.Grpd.piLimitFan","line":118,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan","doc":"Construct the product over an indexed family of groupoids, as a fan. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.piLimitFan\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">piLimitFan</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃J : <a href=\"./foundational_types.html\">Type</a> u⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">J</span> → <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Fan\">CategoryTheory.Limits.Fan</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L110-L111","name":"CategoryTheory.Grpd.id_to_functor","line":110,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.id_to_functor","doc":"Converts identity in the category of groupoids to the functor identity "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.id_to_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">id_to_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L104-L105","name":"CategoryTheory.Grpd.hom_to_functor","line":104,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.hom_to_functor","doc":"Convert arrows in the category of groupoids to functors,\nwhich sometimes helps in applying simp lemmas "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.hom_to_functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">hom_to_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">D</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L98-L98","name":"CategoryTheory.Grpd.forgetToCat_faithful","line":98,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat_faithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">forgetToCat_faithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat\">CategoryTheory.Grpd.forgetToCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L94-L94","name":"CategoryTheory.Grpd.forgetToCatFull","line":94,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCatFull","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCatFull\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">forgetToCatFull</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat\">CategoryTheory.Grpd.forgetToCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L88-L90","name":"CategoryTheory.Grpd.forgetToCat","line":88,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat","doc":"Forgetting functor to `Cat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.forgetToCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">forgetToCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L81-L83","name":"CategoryTheory.Grpd.objects","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.objects","doc":"Functor that gets the set of objects of a groupoid. It is not\ncalled `forget`, because it is not a faithful functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">objects</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L69-L75","name":"CategoryTheory.Grpd.category","line":69,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.category","doc":"Category structure on `Grpd` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L63-L64","name":"CategoryTheory.Grpd.coe_of","line":63,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.coe_of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\">CategoryTheory.Grpd.of</a> <span class=\"fn\">C</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L57-L58","name":"CategoryTheory.Grpd.of","line":57,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of","doc":"Construct a bundled `Grpd` from the underlying type and the typeclass `Groupoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L53-L54","name":"CategoryTheory.Grpd.instCoeSortGrpdType","line":53,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instCoeSortGrpdType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instCoeSortGrpdType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">instCoeSortGrpdType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L48-L49","name":"CategoryTheory.Grpd.str'","line":48,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.str'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.str'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">str'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L44-L45","name":"CategoryTheory.Grpd.instInhabitedGrpd","line":44,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instInhabitedGrpd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd.instInhabitedGrpd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span>.<span class=\"name\">instInhabitedGrpd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\">CategoryTheory.Grpd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Grpd.lean#L37-L38","name":"CategoryTheory.Grpd","line":37,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd","doc":"Category of groupoids "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Grpd.html#CategoryTheory.Grpd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Grpd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (u + 1) u (v + 1))</div></div>"}]}