{"name":"Mathlib.Order.Category.CompleteLat","instances":[{"typeNames":["CompleteLat","_builtin_typeu"],"name":"CompleteLat.instCoeSortCompleteLatType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"CompleteLat.instCompleteLatticeα","className":"CompleteLattice"},{"typeNames":["CompleteLat"],"name":"CompleteLat.instInhabitedCompleteLat","className":"Inhabited"},{"typeNames":["CompleteLatticeHom"],"name":"CompleteLat.instBundledHomTypeCompleteLatticeCompleteLatticeHom","className":"CategoryTheory.BundledHom"},{"typeNames":["CompleteLat"],"name":"CompleteLat.instConcreteCategoryCompleteLatInstCompleteLatLargeCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CompleteLat","BddLat"],"name":"CompleteLat.hasForgetToBddLat","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.Order.Category.BddLat","Mathlib.Order.Hom.CompleteLattice"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L94-L97","name":"completeLat_dual_comp_forget_to_bddLat","line":94,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#completeLat_dual_comp_forget_to_bddLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#completeLat_dual_comp_forget_to_bddLat\"><span class=\"name\">completeLat_dual_comp_forget_to_bddLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">CompleteLat.dual</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span>)</span> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L85-L89","name":"CompleteLat.dualEquiv","line":85,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv","doc":"The equivalence between `CompleteLat` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L84-L84","name":"CompleteLat.dualEquiv_inverse","line":84,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_inverse\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv\">CompleteLat.dualEquiv</a>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">CompleteLat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L84-L84","name":"CompleteLat.dualEquiv_functor","line":84,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_functor\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv\">CompleteLat.dualEquiv</a>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">CompleteLat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L78-L80","name":"CompleteLat.dual","line":78,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L77-L77","name":"CompleteLat.dual_obj","line":77,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual_obj\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dual_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">CompleteLat.dual</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of\">CompleteLat.of</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L77-L77","name":"CompleteLat.dual_map","line":77,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual_map\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom\">CompleteLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">CompleteLat.dual</a>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">CompleteLatticeHom.dual</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L69-L73","name":"CompleteLat.Iso.mk","line":69,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk","doc":"Constructs an isomorphism of complete lattices from an order isomorphism between them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L68-L68","name":"CompleteLat.Iso.mk_hom_toFun","line":68,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_hom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_hom_toFun\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#sInfHom.toFun\">sInfHom.toFun</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk\">CompleteLat.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.hom</span>.tosInfHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L68-L68","name":"CompleteLat.Iso.mk_inv_toFun","line":68,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_inv_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_inv_toFun\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#sInfHom.toFun\">sInfHom.toFun</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk\">CompleteLat.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.inv</span>.tosInfHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L60-L64","name":"CompleteLat.hasForgetToBddLat","line":60,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.hasForgetToBddLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.hasForgetToBddLat\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">hasForgetToBddLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L57-L58","name":"CompleteLat.instConcreteCategoryCompleteLatInstCompleteLatLargeCategory","line":57,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instConcreteCategoryCompleteLatInstCompleteLatLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instConcreteCategoryCompleteLatInstCompleteLatLargeCategory\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instConcreteCategoryCompleteLatInstCompleteLatLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L49-L53","name":"CompleteLat.instBundledHomTypeCompleteLatticeCompleteLatticeHom","line":49,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instBundledHomTypeCompleteLatticeCompleteLatticeHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instBundledHomTypeCompleteLatticeCompleteLatticeHom\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instBundledHomTypeCompleteLatticeCompleteLatticeHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom\">CompleteLatticeHom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L46-L47","name":"CompleteLat.instInhabitedCompleteLat","line":46,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instInhabitedCompleteLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instInhabitedCompleteLat\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instInhabitedCompleteLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L42-L43","name":"CompleteLat.coe_of","line":42,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.coe_of\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of\">CompleteLat.of</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L37-L38","name":"CompleteLat.of","line":37,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of","doc":"Construct a bundled `CompleteLat` from a `CompleteLattice`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L33-L34","name":"CompleteLat.instCompleteLatticeα","line":33,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instCompleteLatticeα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instCompleteLatticeα\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instCompleteLatticeα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L30-L31","name":"CompleteLat.instCoeSortCompleteLatType","line":30,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instCoeSortCompleteLatType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instCoeSortCompleteLatType\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instCoeSortCompleteLatType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/CompleteLat.lean#L24-L25","name":"CompleteLat","line":24,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat","doc":"The category of complete lattices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\"><span class=\"name\">CompleteLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}