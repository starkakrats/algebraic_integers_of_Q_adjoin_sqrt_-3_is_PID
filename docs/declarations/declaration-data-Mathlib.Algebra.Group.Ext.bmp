{"name":"Mathlib.Algebra.Group.Ext","instances":[],"imports":["Init","Mathlib.Algebra.Group.Hom.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L183-L184","name":"CommGroup.ext","line":183,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.ext\"><span class=\"name\">CommGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Mul.mul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Mul.mul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L182-L182","name":"AddCommGroup.ext","line":182,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.ext\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Add.add</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Add.add</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L177-L178","name":"CommGroup.toGroup_injective","line":177,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommGroup.toGroup_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommGroup.toGroup_injective\"><span class=\"name\">CommGroup</span>.<span class=\"name\">toGroup_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup.toGroup\">CommGroup.toGroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L176-L176","name":"AddCommGroup.toAddGroup_injective","line":176,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.toAddGroup_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommGroup.toAddGroup_injective\"><span class=\"name\">AddCommGroup</span>.<span class=\"name\">toAddGroup_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup.toAddGroup\">AddCommGroup.toAddGroup</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L164-L172","name":"Group.ext","line":164,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.ext\"><span class=\"name\">Group</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Mul.mul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Mul.mul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L163-L163","name":"AddGroup.ext","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.ext\"><span class=\"name\">AddGroup</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">Add.add</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Add.add</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L158-L159","name":"Group.toDivInvMonoid_injective","line":158,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Group.toDivInvMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Group.toDivInvMonoid_injective\"><span class=\"name\">Group</span>.<span class=\"name\">toDivInvMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#Group.toDivInvMonoid\">Group.toDivInvMonoid</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L157-L157","name":"AddGroup.toSubNegAddMonoid_injective","line":157,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddGroup.toSubNegAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddGroup.toSubNegAddMonoid_injective\"><span class=\"name\">AddGroup</span>.<span class=\"name\">toSubNegAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup.toSubNegMonoid\">AddGroup.toSubNegMonoid</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L134-L153","name":"DivInvMonoid.ext","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#DivInvMonoid.ext\"><span class=\"name\">DivInvMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\"><span class=\"fn\">Inv.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Inv.inv</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L133-L133","name":"SubNegMonoid.ext","line":133,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#SubNegMonoid.ext\"><span class=\"name\">SubNegMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_inv : <span class=\"fn\"><span class=\"fn\">Neg.neg</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Neg.neg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L126-L129","name":"CancelCommMonoid.ext","line":126,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.ext\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L125-L125","name":"AddCancelCommMonoid.ext","line":125,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.ext\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L116-L121","name":"CancelCommMonoid.toCommMonoid_injective","line":116,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.toCommMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelCommMonoid.toCommMonoid_injective\"><span class=\"name\">CancelCommMonoid</span>.<span class=\"name\">toCommMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid.toCommMonoid\">CancelCommMonoid.toCommMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L115-L115","name":"AddCancelCommMonoid.toAddCommMonoid_injective","line":115,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.toAddCommMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelCommMonoid.toAddCommMonoid_injective\"><span class=\"name\">AddCancelCommMonoid</span>.<span class=\"name\">toAddCommMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid.toAddCommMonoid\">AddCancelCommMonoid.toAddCommMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L108-L111","name":"CancelMonoid.ext","line":108,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.ext\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L107-L107","name":"AddCancelMonoid.ext","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.ext\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L100-L103","name":"CancelMonoid.toLeftCancelMonoid_injective","line":100,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.toLeftCancelMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CancelMonoid.toLeftCancelMonoid_injective\"><span class=\"name\">CancelMonoid</span>.<span class=\"name\">toLeftCancelMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid.toLeftCancelMonoid\">CancelMonoid.toLeftCancelMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L99-L99","name":"AddCancelMonoid.toAddLeftCancelMonoid_injective","line":99,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.toAddLeftCancelMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCancelMonoid.toAddLeftCancelMonoid_injective\"><span class=\"name\">AddCancelMonoid</span>.<span class=\"name\">toAddLeftCancelMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid.toAddLeftCancelMonoid\">AddCancelMonoid.toAddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L92-L95","name":"RightCancelMonoid.ext","line":92,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.ext\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L91-L91","name":"AddRightCancelMonoid.ext","line":91,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.ext\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L84-L87","name":"RightCancelMonoid.toMonoid_injective","line":84,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#RightCancelMonoid.toMonoid_injective\"><span class=\"name\">RightCancelMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid.toMonoid\">RightCancelMonoid.toMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L83-L83","name":"AddRightCancelMonoid.toAddMonoid_injective","line":83,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddRightCancelMonoid.toAddMonoid_injective\"><span class=\"name\">AddRightCancelMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid.toAddMonoid\">AddRightCancelMonoid.toAddMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L76-L79","name":"LeftCancelMonoid.ext","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.ext\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L75-L75","name":"AddLeftCancelMonoid.ext","line":75,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.ext\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L68-L71","name":"LeftCancelMonoid.toMonoid_injective","line":68,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#LeftCancelMonoid.toMonoid_injective\"><span class=\"name\">LeftCancelMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid.toMonoid\">LeftCancelMonoid.toMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L67-L67","name":"AddLeftCancelMonoid.toAddMonoid_injective","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddLeftCancelMonoid.toAddMonoid_injective\"><span class=\"name\">AddLeftCancelMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid.toAddMonoid\">AddLeftCancelMonoid.toAddMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L61-L63","name":"CommMonoid.ext","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.ext\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L60-L60","name":"AddCommMonoid.ext","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.ext\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L53-L56","name":"CommMonoid.toMonoid_injective","line":53,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#CommMonoid.toMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#CommMonoid.toMonoid_injective\"><span class=\"name\">CommMonoid</span>.<span class=\"name\">toMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid.toMonoid\">CommMonoid.toMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L52-L52","name":"AddCommMonoid.toAddMonoid_injective","line":52,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.toAddMonoid_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddCommMonoid.toAddMonoid_injective\"><span class=\"name\">AddCommMonoid</span>.<span class=\"name\">toAddMonoid_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\">@<a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid.toAddMonoid\">AddCommMonoid.toAddMonoid</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L35-L48","name":"Monoid.ext","line":35,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#Monoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#Monoid.ext\"><span class=\"name\">Monoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HMul.hMul</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HMul.hMul</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Group/Ext.lean#L34-L34","name":"AddMonoid.ext","line":34,"kind":"theorem","docLink":"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/Ext.html#AddMonoid.ext\"><span class=\"name\">AddMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃m₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mul : <span class=\"fn\"><span class=\"fn\">HAdd.hAdd</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HAdd.hAdd</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></span></div></div>"}]}