{"name":"Std.Tactic.FalseOrByContra","instances":[],"imports":["Init","Lean.Elab.Tactic.Basic","Std.Lean.Meta.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/FalseOrByContra.lean#L62-L63","name":"tacticFalse_or_by_contra","line":62,"kind":"def","docLink":"./Std/Tactic/FalseOrByContra.html#tacticFalse_or_by_contra","doc":"Changes the goal to `False`, retaining as much information as possible:\n\nIf the goal is `False`, do nothing.\nIf the goal is an implication or a function type, introduce the argument.\n(If the goal is `x ≠ y`, introduce `x = y`.)\nOtherwise, for a propositional goal `P`, replace it with `¬ ¬ P` and introduce `¬ P`.\nFor a non-propositional goal use `False.elim`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/FalseOrByContra.html#tacticFalse_or_by_contra\"><span class=\"name\">tacticFalse_or_by_contra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/FalseOrByContra.lean#L36-L59","name":"falseOrByContra","line":36,"kind":"opaque","docLink":"./Std/Tactic/FalseOrByContra.html#falseOrByContra","doc":"Changes the goal to `False`, retaining as much information as possible:\n\nIf the goal is `False`, do nothing.\nIf the goal is an implication or a function type, introduce the argument.\n(If the goal is `x ≠ y`, introduce `x = y`.)\nOtherwise, for a propositional goal `P`, replace it with `¬ ¬ P` and introduce `¬ P`.\nFor a non-propositional goal use `False.elim`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/FalseOrByContra.html#falseOrByContra\"><span class=\"name\">falseOrByContra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(useClassical : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Tactic/FalseOrByContra.lean#L22-L31","name":"false_or_by_contra","line":22,"kind":"def","docLink":"./Std/Tactic/FalseOrByContra.html#false_or_by_contra","doc":"Changes the goal to `False`, retaining as much information as possible:\n\nIf the goal is `False`, do nothing.\nIf the goal is an implication or a function type, introduce the argument.\n(If the goal is `x ≠ y`, introduce `x = y`.)\nOtherwise, for a propositional goal `P`, replace it with `¬ ¬ P` and introduce `¬ P`.\nFor a non-propositional goal use `False.elim`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/FalseOrByContra.html#false_or_by_contra\"><span class=\"name\">false_or_by_contra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}