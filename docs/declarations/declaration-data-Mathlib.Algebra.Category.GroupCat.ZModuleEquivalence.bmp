{"name":"Mathlib.Algebra.Category.GroupCat.ZModuleEquivalence","instances":[{"typeNames":["CategoryTheory.forget₂"],"name":"ModuleCat.forget₂AddCommGroupFull","className":"CategoryTheory.Full"},{"typeNames":["CategoryTheory.forget₂"],"name":"ModuleCat.forget₂_addCommGroupCat_essSurj","className":"CategoryTheory.EssSurj"},{"typeNames":["CategoryTheory.forget₂"],"name":"ModuleCat.forget₂AddCommGroupIsEquivalence","className":"CategoryTheory.IsEquivalence"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.lean#L52-L54","name":"ModuleCat.forget₂AddCommGroupIsEquivalence","line":52,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.html#ModuleCat.forget₂AddCommGroupIsEquivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.html#ModuleCat.forget₂AddCommGroupIsEquivalence\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">forget₂AddCommGroupIsEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.IsEquivalence\">CategoryTheory.IsEquivalence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.lean#L44-L48","name":"ModuleCat.forget₂_addCommGroupCat_essSurj","line":44,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.html#ModuleCat.forget₂_addCommGroupCat_essSurj","doc":"The forgetful functor from `ℤ` modules to `AddCommGroup` is essentially surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.html#ModuleCat.forget₂_addCommGroupCat_essSurj\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">forget₂_addCommGroupCat_essSurj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentialImage.html#CategoryTheory.EssSurj\">CategoryTheory.EssSurj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.lean#L29-L39","name":"ModuleCat.forget₂AddCommGroupFull","line":29,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.html#ModuleCat.forget₂AddCommGroupFull","doc":"The forgetful functor from `ℤ` modules to `AddCommGroup` is full. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/ZModuleEquivalence.html#ModuleCat.forget₂AddCommGroupFull\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">forget₂AddCommGroupFull</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span>)</span></span></div></div>"}]}