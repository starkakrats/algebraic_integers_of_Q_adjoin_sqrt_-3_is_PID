{"name":"Mathlib.Algebra.Order.CompleteField","instances":[{"typeNames":[],"name":"ConditionallyCompleteLinearOrderedField.to_archimedean","className":"Archimedean"},{"typeNames":["Real"],"name":"instConditionallyCompleteLinearOrderedFieldReal","className":"ConditionallyCompleteLinearOrderedField"},{"typeNames":["OrderRingHom"],"name":"LinearOrderedField.uniqueOrderRingHom","className":"Unique"},{"typeNames":["OrderRingIso"],"name":"LinearOrderedField.uniqueOrderRingIso","className":"Unique"},{"typeNames":["RingHom"],"name":"Real.RingHom.unique","className":"Unique"}],"imports":["Init","Mathlib.Algebra.Order.Hom.Ring","Mathlib.Algebra.Order.Pointwise","Mathlib.Analysis.SpecialFunctions.Pow.Real"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L370-L373","name":"Real.RingHom.unique","line":370,"kind":"instance","docLink":"./Mathlib/Algebra/Order/CompleteField.html#Real.RingHom.unique","doc":"There exists no nontrivial ring homomorphism `ℝ →+* ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#Real.RingHom.unique\"><span class=\"name\">Real</span>.<span class=\"name\">RingHom</span>.<span class=\"name\">unique</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L364-L366","name":"ringHom_monotone","line":364,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#ringHom_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#ringHom_monotone\"><span class=\"name\">ringHom_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedRing\">OrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedRing\">LinearOrderedRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span></span> → <span class=\"fn\">∃ (s : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L353-L354","name":"LinearOrderedField.uniqueOrderRingIso","line":353,"kind":"instance","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.uniqueOrderRingIso","doc":"There is a unique ordered ring isomorphism between two conditionally complete linear ordered\nfields. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.uniqueOrderRingIso\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">uniqueOrderRingIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Mathlib/Algebra/Order/Hom/Ring.html#OrderRingIso\">≃+*o</a> <span class=\"fn\">γ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L348-L349","name":"LinearOrderedField.uniqueOrderRingHom","line":348,"kind":"instance","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.uniqueOrderRingHom","doc":"There is a unique ordered ring homomorphism from an archimedean linear ordered field to a\nconditionally complete linear ordered field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.uniqueOrderRingHom\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">uniqueOrderRingHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Order/Hom/Ring.html#OrderRingHom\">→+*o</a> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L340-L341","name":"LinearOrderedField.inducedOrderRingIso_self","line":340,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso_self\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedOrderRingIso_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso\">LinearOrderedField.inducedOrderRingIso</a> <span class=\"fn\">β</span> <span class=\"fn\">β</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Hom/Ring.html#OrderRingIso.refl\">OrderRingIso.refl</a> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L336-L336","name":"LinearOrderedField.inducedOrderRingIso_symm","line":336,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso_symm\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedOrderRingIso_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Hom/Ring.html#OrderRingIso.symm\">OrderRingIso.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso\">LinearOrderedField.inducedOrderRingIso</a> <span class=\"fn\">β</span> <span class=\"fn\">γ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso\">LinearOrderedField.inducedOrderRingIso</a> <span class=\"fn\">γ</span> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L332-L332","name":"LinearOrderedField.coe_inducedOrderRingIso","line":332,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.coe_inducedOrderRingIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.coe_inducedOrderRingIso\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">coe_inducedOrderRingIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso\">LinearOrderedField.inducedOrderRingIso</a> <span class=\"fn\">β</span> <span class=\"fn\">γ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">β</span> <span class=\"fn\">γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L317-L328","name":"LinearOrderedField.inducedOrderRingIso","line":317,"kind":"def","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso","doc":"The isomorphism of ordered rings between two conditionally complete linearly ordered fields. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingIso\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedOrderRingIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> <a href=\"./Mathlib/Algebra/Order/Hom/Ring.html#OrderRingIso\">≃+*o</a> <span class=\"fn\">γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L296-L313","name":"LinearOrderedField.inducedOrderRingHom","line":296,"kind":"def","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingHom","doc":"`inducedMap` as an `OrderRingHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingHom\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedOrderRingHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Order/Hom/Ring.html#OrderRingHom\">→+*o</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L295-L295","name":"LinearOrderedField.inducedOrderRingHom_toFun","line":295,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingHom_toFun\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedOrderRingHom_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedOrderRingHom\">LinearOrderedField.inducedOrderRingHom</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedAddHom\">LinearOrderedField.inducedAddHom</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L290-L291","name":"LinearOrderedField.inducedAddHom","line":290,"kind":"def","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedAddHom","doc":"`inducedMap` as an additive homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedAddHom\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedAddHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L271-L284","name":"LinearOrderedField.exists_mem_cutMap_mul_self_of_lt_inducedMap_mul_self","line":271,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.exists_mem_cutMap_mul_self_of_lt_inducedMap_mul_self","doc":"Preparatory lemma for `inducedOrderRingHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.exists_mem_cutMap_mul_self_of_lt_inducedMap_mul_self\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">exists_mem_cutMap_mul_self_of_lt_inducedMap_mul_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hba : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ c ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span></span>, <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L258-L267","name":"LinearOrderedField.le_inducedMap_mul_self_of_mem_cutMap","line":258,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.le_inducedMap_mul_self_of_mem_cutMap","doc":"Preparatory lemma for `inducedOrderRingHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.le_inducedMap_mul_self_of_mem_cutMap\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">le_inducedMap_mul_self_of_mem_cutMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L248-L252","name":"LinearOrderedField.inducedMap_add","line":248,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_add\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L244-L245","name":"LinearOrderedField.inducedMap_inv_self","line":244,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_inv_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_inv_self\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_inv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">γ</span> <span class=\"fn\">β</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">β</span> <span class=\"fn\">γ</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L238-L240","name":"LinearOrderedField.inducedMap_inducedMap","line":238,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_inducedMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_inducedMap\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_inducedMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">β</span> <span class=\"fn\">γ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">γ</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L231-L232","name":"LinearOrderedField.inducedMap_self","line":231,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_self\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">β</span> <span class=\"fn\">β</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L225-L227","name":"LinearOrderedField.lt_inducedMap_iff","line":225,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.lt_inducedMap_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.lt_inducedMap_iff\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">lt_inducedMap_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L216-L222","name":"LinearOrderedField.coe_lt_inducedMap_iff","line":216,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.coe_lt_inducedMap_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.coe_lt_inducedMap_iff\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">coe_lt_inducedMap_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L212-L213","name":"LinearOrderedField.inducedMap_nonneg","line":212,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_nonneg\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L207-L207","name":"LinearOrderedField.inducedMap_one","line":207,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_one\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L203-L203","name":"LinearOrderedField.inducedMap_zero","line":203,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_zero\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L191-L199","name":"LinearOrderedField.inducedMap_rat","line":191,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_rat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_rat\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_rat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L187-L188","name":"LinearOrderedField.inducedMap_mono","line":187,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap_mono\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap_mono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\">LinearOrderedField.inducedMap</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L181-L182","name":"LinearOrderedField.inducedMap","line":181,"kind":"def","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap","doc":"The induced order preserving function from a linear ordered field to a conditionally complete\nlinear ordered field, defined by taking the Sup in the codomain of all the rationals less than the\ninput. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.inducedMap\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">inducedMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L149-L161","name":"LinearOrderedField.cutMap_add","line":149,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_add\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L144-L146","name":"LinearOrderedField.cutMap_bddAbove","line":144,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_bddAbove","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_bddAbove\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap_bddAbove</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L140-L141","name":"LinearOrderedField.cutMap_nonempty","line":140,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_nonempty\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L134-L135","name":"LinearOrderedField.cutMap_coe","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_coe\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Rat.cast</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> | <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L121-L127","name":"LinearOrderedField.cutMap_self","line":121,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_self\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">α</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">a</span></span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">Rat.cast</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L117-L118","name":"LinearOrderedField.coe_mem_cutMap_iff","line":117,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.coe_mem_cutMap_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.coe_mem_cutMap_iff\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">coe_mem_cutMap_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L113-L113","name":"LinearOrderedField.mem_cutMap_iff","line":113,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.mem_cutMap_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.mem_cutMap_iff\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">mem_cutMap_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L107-L107","name":"LinearOrderedField.cutMap_mono","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap_mono\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₁ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a₂ : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a₁</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\">LinearOrderedField.cutMap</a> <span class=\"fn\">β</span> <span class=\"fn\">a₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L103-L104","name":"LinearOrderedField.cutMap","line":103,"kind":"def","docLink":"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap","doc":"The lower cut of rationals inside a linear ordered field that are less than a given element of\nanother linear ordered field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#LinearOrderedField.cutMap\"><span class=\"name\">LinearOrderedField</span>.<span class=\"name\">cutMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L78-L80","name":"instConditionallyCompleteLinearOrderedFieldReal","line":78,"kind":"instance","docLink":"./Mathlib/Algebra/Order/CompleteField.html#instConditionallyCompleteLinearOrderedFieldReal","doc":"The reals are a conditionally complete linearly ordered field. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#instConditionallyCompleteLinearOrderedFieldReal\"><span class=\"name\">instConditionallyCompleteLinearOrderedFieldReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L65-L74","name":"ConditionallyCompleteLinearOrderedField.to_archimedean","line":65,"kind":"instance","docLink":"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField.to_archimedean","doc":"Any conditionally complete linearly ordered field is archimedean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField.to_archimedean\"><span class=\"name\">ConditionallyCompleteLinearOrderedField</span>.<span class=\"name\">to_archimedean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Archimedean.html#Archimedean\">Archimedean</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L59-L59","name":"ConditionallyCompleteLinearOrderedField.mk","line":59,"kind":"ctor","docLink":"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField.mk\"><span class=\"name\">ConditionallyCompleteLinearOrderedField</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toLinearOrderedField : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toSup : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Sup\">Sup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(le_sup_left : <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(le_sup_right : <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sup_le : <span class=\"fn\">∀ (<span class=\"fn\">a </span>b c : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toInf : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(inf_le_left : <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inf_le_right : <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(le_inf : <span class=\"fn\">∀ (<span class=\"fn\">a </span>b c : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">c</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toSupSet : <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet\">SupSet</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toInfSet : <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(le_csSup : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(csSup_le : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#upperBounds\">upperBounds</a> <span class=\"fn\">s</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(csInf_le : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddBelow\">BddBelow</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(le_csInf : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#lowerBounds\">lowerBounds</a> <span class=\"fn\">s</span></span></span> → <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(csSup_of_not_bddAbove : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddAbove\">BddAbove</a> <span class=\"fn\">s</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(csInf_of_not_bddBelow : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddBelow\">BddBelow</a> <span class=\"fn\">s</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\">ConditionallyCompleteLinearOrderedField</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/Order/CompleteField.lean#L59-L60","name":"ConditionallyCompleteLinearOrderedField","line":59,"kind":"class","docLink":"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField","doc":"A field which is both linearly ordered and conditionally complete with respect to the order.\nThis axiomatizes the reals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/CompleteField.html#ConditionallyCompleteLinearOrderedField\"><span class=\"name\">ConditionallyCompleteLinearOrderedField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\"><span class=\"name\">LinearOrderedField</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Notation.html#Sup\"><span class=\"name\">Sup</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Notation.html#Inf\"><span class=\"name\">Inf</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/CompleteLattice.html#SupSet\"><span class=\"name\">SupSet</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/CompleteLattice.html#InfSet\"><span class=\"name\">InfSet</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_5</div></div>"}]}