{"name":"Mathlib.CategoryTheory.Category.Pointed","instances":[{"typeNames":["Pointed","_builtin_typeu"],"name":"Pointed.instCoeSortPointedType","className":"CoeSort"},{"typeNames":["Pointed"],"name":"Pointed.instInhabitedPointed","className":"Inhabited"},{"typeNames":["Pointed.Hom"],"name":"Pointed.Hom.instInhabitedHom","className":"Inhabited"},{"typeNames":["Pointed"],"name":"Pointed.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["Pointed"],"name":"Pointed.concreteCategory","className":"CategoryTheory.ConcreteCategory"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L135-L150","name":"typeToPointedForgetAdjunction","line":135,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointedForgetAdjunction","doc":"`typeToPointed` is the free functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointedForgetAdjunction\"><span class=\"name\">typeToPointedForgetAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed\">typeToPointed</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L126-L130","name":"typeToPointed","line":126,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed","doc":"`Option` as a functor from types to pointed types. This is the free functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed\"><span class=\"name\">typeToPointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L125-L125","name":"typeToPointed_obj_X","line":125,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed_obj_X\"><span class=\"name\">typeToPointed_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed\">typeToPointed</a>.obj <span class=\"fn\">X</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L125-L125","name":"typeToPointed_obj_point","line":125,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed_obj_point","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed_obj_point\"><span class=\"name\">typeToPointed_obj_point</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed\">typeToPointed</a>.obj <span class=\"fn\">X</span></span>)</span>.point</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">none</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L125-L125","name":"typeToPointed_map_toFun","line":125,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed_map_toFun\"><span class=\"name\">typeToPointed_map_toFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./foundational_types.html\">Type</a> u} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#typeToPointed\">typeToPointed</a>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L114-L118","name":"Pointed.Iso.mk","line":114,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk","doc":"Constructs an isomorphism between pointed types from an equivalence that preserves the point\nbetween them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk\"><span class=\"name\">Pointed</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">β</span>.X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(he : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\"><span class=\"fn\">α</span>.point</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.point</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L113-L113","name":"Pointed.Iso.mk_inv_toFun","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk_inv_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk_inv_toFun\"><span class=\"name\">Pointed</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">β</span>.X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(he : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\"><span class=\"fn\">α</span>.point</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.point</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">β</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk\">Pointed.Iso.mk</a> <span class=\"fn\">e</span> <span class=\"fn\">he</span></span>)</span>.inv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.symm</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L113-L113","name":"Pointed.Iso.mk_hom_toFun","line":113,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk_hom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk_hom_toFun\"><span class=\"name\">Pointed</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\">β</span>.X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(he : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\"><span class=\"fn\">α</span>.point</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.point</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">α</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Iso.mk\">Pointed.Iso.mk</a> <span class=\"fn\">e</span> <span class=\"fn\">he</span></span>)</span>.hom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L103-L107","name":"Pointed.concreteCategory","line":103,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.concreteCategory\"><span class=\"name\">Pointed</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L95-L99","name":"Pointed.largeCategory","line":95,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.largeCategory\"><span class=\"name\">Pointed</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L88-L89","name":"Pointed.Hom.comp","line":88,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.comp","doc":"Composition of morphisms of `Pointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.comp\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L87-L87","name":"Pointed.Hom.comp_toFun","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.comp_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.comp_toFun\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.comp\">Pointed.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Function.comp\">(<a href=\"./Init/Prelude.html#Function.comp\"><span class=\"fn\"><span class=\"fn\">g</span>.toFun</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">f</span>.toFun</span></a>)</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L83-L84","name":"Pointed.Hom.instInhabitedHom","line":83,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.instInhabitedHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.instInhabitedHom\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instInhabitedHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L78-L79","name":"Pointed.Hom.id","line":78,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.id","doc":"The identity morphism of `X : Pointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.id\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L77-L77","name":"Pointed.Hom.id_toFun","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.id_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.id_toFun\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">X</span>.X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.id\">Pointed.Hom.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L70-L70","name":"Pointed.Hom.map_point","line":70,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.map_point","doc":"compatibility with the distinguished points "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.map_point\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_point</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">Pointed.Hom.toFun</a> <span class=\"fn\">self</span> <span class=\"fn\"><span class=\"fn\">X</span>.point</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Y</span>.point</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L68-L68","name":"Pointed.Hom.toFun","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun","doc":"the underlying map "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.X</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L66-L66","name":"Pointed.Hom.mk","line":66,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.mk\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.X</span> → <span class=\"fn\"><span class=\"fn\">Y</span>.X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_point : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\">X</span>.point</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Y</span>.point</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L66-L70","name":"Pointed.Hom","line":66,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom","doc":"Morphisms in `Pointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L65-L65","name":"Pointed.Hom.ext_iff","line":65,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.ext_iff\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L65-L65","name":"Pointed.Hom.ext","line":65,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.ext\"><span class=\"name\">Pointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom\">Pointed.Hom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toFun : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.toFun</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L61-L62","name":"Pointed.instInhabitedPointed","line":61,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.instInhabitedPointed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.instInhabitedPointed\"><span class=\"name\">Pointed</span>.<span class=\"name\">instInhabitedPointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L57-L57","name":"Prod.Pointed","line":57,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Prod.Pointed","doc":"**Alias** of `Pointed.of`.\n\n---\n\nTurns a point into a pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Prod.Pointed\"><span class=\"name\">Prod</span>.<span class=\"name\">Pointed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(point : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L52-L53","name":"Pointed.coe_of","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.coe_of\"><span class=\"name\">Pointed</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(point : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.of\">Pointed.of</a> <span class=\"fn\">point</span></span>)</span>.X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L46-L47","name":"Pointed.of","line":46,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.of","doc":"Turns a point into a pointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.of\"><span class=\"name\">Pointed</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(point : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L39-L40","name":"Pointed.instCoeSortPointedType","line":39,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.instCoeSortPointedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.instCoeSortPointedType\"><span class=\"name\">Pointed</span>.<span class=\"name\">instCoeSortPointedType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_3)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L33-L33","name":"Pointed.point","line":33,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.point","doc":"the distinguished element "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.point\"><span class=\"name\">Pointed</span>.<span class=\"name\">point</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L31-L31","name":"Pointed.X","line":31,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X","doc":"the underlying type "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\"><span class=\"name\">Pointed</span>.<span class=\"name\">X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L29-L29","name":"Pointed.mk","line":29,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.mk\"><span class=\"name\">Pointed</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(point : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Pointed.lean#L29-L33","name":"Pointed","line":29,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed","doc":"The category of pointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\"><span class=\"name\">Pointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}