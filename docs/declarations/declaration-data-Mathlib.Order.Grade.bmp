{"name":"Mathlib.Order.Grade","instances":[{"typeNames":[],"name":"Preorder.toGradeBoundedOrder","className":"GradeBoundedOrder"},{"typeNames":["OrderDual","OrderDual"],"name":"OrderDual.gradeOrder","className":"GradeOrder"},{"typeNames":["OrderDual","OrderDual"],"name":"OrderDual.gradeMinOrder","className":"GradeMinOrder"},{"typeNames":["OrderDual","OrderDual"],"name":"OrderDual.gradeMaxOrder","className":"GradeMaxOrder"},{"typeNames":["OrderDual","OrderDual"],"name":"instGradeBoundedOrderOrderDualOrderDualInstPreorderInstPreorder","className":"GradeBoundedOrder"},{"typeNames":["Int"],"name":"GradeOrder.natToInt","className":"GradeOrder"}],"imports":["Init","Mathlib.Data.Int.SuccPred"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L359-L360","name":"GradeOrder.natToInt","line":359,"kind":"instance","docLink":"./Mathlib/Order/Grade.html#GradeOrder.natToInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.natToInt\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">natToInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L351-L356","name":"GradeMinOrder.finToNat","line":351,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMinOrder.finToNat","doc":"A `Fin n`-graded order is also `‚Ñï`-graded. We do not mark this an instance because `n` is not\ninferrable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder.finToNat\"><span class=\"name\">GradeMinOrder</span>.<span class=\"name\">finToNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L343-L344","name":"GradeOrder.finToNat","line":343,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeOrder.finToNat","doc":"A `Fin n`-graded order is also `‚Ñï`-graded. We do not mark this an instance because `n` is not\ninferrable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.finToNat\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">finToNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L330-L333","name":"GradeBoundedOrder.liftRight","line":330,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeBoundedOrder.liftRight","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder.liftRight\"><span class=\"name\">GradeBoundedOrder</span>.<span class=\"name\">liftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmin : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmax : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L322-L324","name":"GradeMaxOrder.liftRight","line":322,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMaxOrder.liftRight","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMaxOrder.liftRight\"><span class=\"name\">GradeMaxOrder</span>.<span class=\"name\">liftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmax : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L314-L316","name":"GradeMinOrder.liftRight","line":314,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMinOrder.liftRight","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder.liftRight\"><span class=\"name\">GradeMinOrder</span>.<span class=\"name\">liftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmin : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L303-L308","name":"GradeOrder.liftRight","line":303,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeOrder.liftRight","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.liftRight\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">liftRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L294-L297","name":"GradeBoundedOrder.liftLeft","line":294,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeBoundedOrder.liftLeft","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder.liftLeft\"><span class=\"name\">GradeBoundedOrder</span>.<span class=\"name\">liftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{‚Ñô : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">‚Ñô</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ùïÜ</span> ‚Üí <span class=\"fn\">‚Ñô</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmin : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmax : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">‚Ñô</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L286-L288","name":"GradeMaxOrder.liftLeft","line":286,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMaxOrder.liftLeft","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMaxOrder.liftLeft\"><span class=\"name\">GradeMaxOrder</span>.<span class=\"name\">liftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{‚Ñô : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">‚Ñô</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ùïÜ</span> ‚Üí <span class=\"fn\">‚Ñô</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmax : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">‚Ñô</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L278-L280","name":"GradeMinOrder.liftLeft","line":278,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMinOrder.liftLeft","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder.liftLeft\"><span class=\"name\">GradeMinOrder</span>.<span class=\"name\">liftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{‚Ñô : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">‚Ñô</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ùïÜ</span> ‚Üí <span class=\"fn\">‚Ñô</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmin : <span class=\"fn\">‚àÄ (<span class=\"fn\">a</span> : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">‚Ñô</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L267-L272","name":"GradeOrder.liftLeft","line":267,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeOrder.liftLeft","doc":"Lifts a graded order along a strictly monotone function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.liftLeft\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">liftLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{‚Ñô : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">‚Ñô</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ùïÜ</span> ‚Üí <span class=\"fn\">‚Ñô</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hcovBy : <span class=\"fn\">‚àÄ (<span class=\"fn\">a </span>b : <span class=\"fn\">ùïÜ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">‚Ñô</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L258-L259","name":"grade_ofDual","line":258,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_ofDual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_ofDual\"><span class=\"name\">grade_ofDual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">OrderDual.ofDual</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">OrderDual.ofDual</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\"><span class=\"fn\">ùïÜ</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L253-L254","name":"grade_toDual","line":253,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_toDual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_toDual\"><span class=\"name\">grade_toDual</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\"><span class=\"fn\">ùïÜ</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">OrderDual.toDual</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">OrderDual.toDual</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L249-L250","name":"instGradeBoundedOrderOrderDualOrderDualInstPreorderInstPreorder","line":249,"kind":"instance","docLink":"./Mathlib/Order/Grade.html#instGradeBoundedOrderOrderDualOrderDualInstPreorderInstPreorder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#instGradeBoundedOrderOrderDualOrderDualInstPreorderInstPreorder\"><span class=\"name\">instGradeBoundedOrderOrderDualOrderDualInstPreorderInstPreorder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\"><span class=\"fn\">ùïÜ</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L246-L247","name":"OrderDual.gradeMaxOrder","line":246,"kind":"instance","docLink":"./Mathlib/Order/Grade.html#OrderDual.gradeMaxOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#OrderDual.gradeMaxOrder\"><span class=\"name\">OrderDual</span>.<span class=\"name\">gradeMaxOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\"><span class=\"fn\">ùïÜ</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L243-L244","name":"OrderDual.gradeMinOrder","line":243,"kind":"instance","docLink":"./Mathlib/Order/Grade.html#OrderDual.gradeMinOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#OrderDual.gradeMinOrder\"><span class=\"name\">OrderDual</span>.<span class=\"name\">gradeMinOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\"><span class=\"fn\">ùïÜ</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L238-L241","name":"OrderDual.gradeOrder","line":238,"kind":"instance","docLink":"./Mathlib/Order/Grade.html#OrderDual.gradeOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#OrderDual.gradeOrder\"><span class=\"name\">OrderDual</span>.<span class=\"name\">gradeOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\"><span class=\"fn\">ùïÜ</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">·µí·µà</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L232-L233","name":"grade_self","line":232,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_self\"><span class=\"name\">grade_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">Œ±</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L223-L228","name":"Preorder.toGradeBoundedOrder","line":223,"kind":"instance","docLink":"./Mathlib/Order/Grade.html#Preorder.toGradeBoundedOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#Preorder.toGradeBoundedOrder\"><span class=\"name\">Preorder</span>.<span class=\"name\">toGradeBoundedOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">Œ±</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L213-L214","name":"grade_top","line":213,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_top\"><span class=\"name\">grade_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderTop\">OrderTop</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderTop\">OrderTop</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L208-L209","name":"grade_bot","line":208,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_bot\"><span class=\"name\">grade_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">‚ä•</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">‚ä•</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L193-L194","name":"grade_covBy_grade_iff","line":193,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_covBy_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_covBy_grade_iff\"><span class=\"name\">grade_covBy_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L189-L190","name":"grade_ne_grade_iff","line":189,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_ne_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_ne_grade_iff\"><span class=\"name\">grade_ne_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L185-L186","name":"grade_eq_grade_iff","line":185,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_eq_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_eq_grade_iff\"><span class=\"name\">grade_eq_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L180-L181","name":"grade_lt_grade_iff","line":180,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_lt_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_lt_grade_iff\"><span class=\"name\">grade_lt_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L175-L176","name":"grade_le_grade_iff","line":175,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_le_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_le_grade_iff\"><span class=\"name\">grade_le_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L170-L171","name":"grade_injective","line":170,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_injective\"><span class=\"name\">grade_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L161-L162","name":"grade_mono","line":161,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_mono\"><span class=\"name\">grade_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L152-L153","name":"isMax_grade_iff","line":152,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#isMax_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#isMax_grade_iff\"><span class=\"name\">isMax_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L145-L146","name":"IsMax.grade","line":145,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#IsMax.grade","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#IsMax.grade\"><span class=\"name\">IsMax</span>.<span class=\"name\">grade</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L135-L136","name":"isMin_grade_iff","line":135,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#isMin_grade_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#isMin_grade_iff\"><span class=\"name\">isMin_grade_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L128-L129","name":"IsMin.grade","line":128,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#IsMin.grade","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#IsMin.grade\"><span class=\"name\">IsMin</span>.<span class=\"name\">grade</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L117-L119","name":"covBy_iff_lt_covBy_grade","line":117,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#covBy_iff_lt_covBy_grade","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#covBy_iff_lt_covBy_grade\"><span class=\"name\">covBy_iff_lt_covBy_grade</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L113-L114","name":"grade_strictMono","line":113,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#grade_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade_strictMono\"><span class=\"name\">grade_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L107-L108","name":"CovBy.grade","line":107,"kind":"theorem","docLink":"./Mathlib/Order/Grade.html#CovBy.grade","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#CovBy.grade\"><span class=\"name\">CovBy</span>.<span class=\"name\">grade</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#grade\">grade</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L103-L104","name":"grade","line":103,"kind":"def","docLink":"./Mathlib/Order/Grade.html#grade","doc":"The grade of an element in a graded order. Morally, this is the number of elements you need to\ngo down by to get to `‚ä•`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#grade\"><span class=\"name\">grade</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">ùïÜ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L87-L87","name":"GradeBoundedOrder.mk","line":87,"kind":"ctor","docLink":"./Mathlib/Order/Grade.html#GradeBoundedOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder.mk\"><span class=\"name\">GradeBoundedOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toGradeMinOrder : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(isMax_grade : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\">GradeBoundedOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L87-L88","name":"GradeBoundedOrder","line":87,"kind":"class","docLink":"./Mathlib/Order/Grade.html#GradeBoundedOrder","doc":"An `ùïÜ`-graded order where minimal elements have minimal grades and maximal elements have maximal\ngrades. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeBoundedOrder\"><span class=\"name\">GradeBoundedOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder\"><span class=\"name\">GradeMinOrder</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_5 u_6)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L82-L82","name":"GradeMaxOrder.isMax_grade","line":82,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMaxOrder.isMax_grade","doc":"Maximal elements have maximal grades. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMaxOrder.isMax_grade\"><span class=\"name\">GradeMaxOrder</span>.<span class=\"name\">isMax_grade</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Éa : <span class=\"fn\">Œ±</span>‚¶Ñ</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L80-L80","name":"GradeMaxOrder.mk","line":80,"kind":"ctor","docLink":"./Mathlib/Order/Grade.html#GradeMaxOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMaxOrder.mk\"><span class=\"name\">GradeMaxOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toGradeOrder : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(isMax_grade : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMax\">IsMax</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\">GradeMaxOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L80-L82","name":"GradeMaxOrder","line":80,"kind":"class","docLink":"./Mathlib/Order/Grade.html#GradeMaxOrder","doc":"An `ùïÜ`-graded order where maximal elements have maximal grades. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMaxOrder\"><span class=\"name\">GradeMaxOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder\"><span class=\"name\">GradeOrder</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_5 u_6)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L76-L76","name":"GradeMinOrder.isMin_grade","line":76,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeMinOrder.isMin_grade","doc":"Minimal elements have minimal grades. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder.isMin_grade\"><span class=\"name\">GradeMinOrder</span>.<span class=\"name\">isMin_grade</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Éa : <span class=\"fn\">Œ±</span>‚¶Ñ</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L74-L74","name":"GradeMinOrder.mk","line":74,"kind":"ctor","docLink":"./Mathlib/Order/Grade.html#GradeMinOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder.mk\"><span class=\"name\">GradeMinOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[toGradeOrder : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(isMin_grade : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">a</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#IsMin\">IsMin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeMinOrder\">GradeMinOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L74-L76","name":"GradeMinOrder","line":74,"kind":"class","docLink":"./Mathlib/Order/Grade.html#GradeMinOrder","doc":"An `ùïÜ`-graded order where minimal elements have minimal grades. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeMinOrder\"><span class=\"name\">GradeMinOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder\"><span class=\"name\">GradeOrder</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_5 u_6)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L70-L70","name":"GradeOrder.covBy_grade","line":70,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeOrder.covBy_grade","doc":"`grade` preserves `CovBy`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.covBy_grade\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">covBy_grade</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Éa : <span class=\"fn\">Œ±</span>‚¶Ñ</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Éb : <span class=\"fn\">Œ±</span>‚¶Ñ</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\">GradeOrder.grade</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L68-L68","name":"GradeOrder.grade_strictMono","line":68,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeOrder.grade_strictMono","doc":"`grade` is strictly monotonic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.grade_strictMono\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">grade_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">GradeOrder.grade</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L66-L66","name":"GradeOrder.grade","line":66,"kind":"def","docLink":"./Mathlib/Order/Grade.html#GradeOrder.grade","doc":"The grading function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.grade\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">grade</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">ùïÜ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L64-L64","name":"GradeOrder.mk","line":64,"kind":"ctor","docLink":"./Mathlib/Order/Grade.html#GradeOrder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder.mk\"><span class=\"name\">GradeOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(grade : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">ùïÜ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(grade_strictMono : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">grade</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(covBy_grade : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">a </span>b : <span class=\"fn\">Œ±</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\">b</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">grade</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">‚ãñ</a> <span class=\"fn\"><span class=\"fn\">grade</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Grade.html#GradeOrder\">GradeOrder</a> <span class=\"fn\">ùïÜ</span> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Grade.lean#L64-L70","name":"GradeOrder","line":64,"kind":"class","docLink":"./Mathlib/Order/Grade.html#GradeOrder","doc":"An `ùïÜ`-graded order is an order `Œ±` equipped with a strictly monotone function\n`grade ùïÜ : Œ± ‚Üí ùïÜ` which preserves order covering (`CovBy`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Grade.html#GradeOrder\"><span class=\"name\">GradeOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïÜ : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">ùïÜ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_5 u_6)</div></div>"}]}