{"name":"Mathlib.NumberTheory.ArithmeticFunction","instances":[{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.zero","className":"Zero"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.instInhabitedArithmeticFunction","className":"Inhabited"},{"typeNames":["Nat.ArithmeticFunction","Nat"],"name":"Nat.ArithmeticFunction.instFunLikeArithmeticFunctionNat","className":"DFunLike"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.one","className":"One"},{"typeNames":["Nat.ArithmeticFunction","Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.natCoe","className":"Coe"},{"typeNames":["Nat.ArithmeticFunction","Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.intCoe","className":"Coe"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.add","className":"Add"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instAddMonoid","className":"AddMonoid"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instAddMonoidWithOne","className":"AddMonoidWithOne"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instAddCommMonoid","className":"AddCommMonoid"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid","className":"AddGroup"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid","className":"AddCommGroup"},{"typeNames":["Nat.ArithmeticFunction","Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid","className":"SMul"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero","className":"Mul"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instMonoid","className":"Monoid"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instSemiring","className":"Semiring"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero","className":"CommSemiring"},{"typeNames":["Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring","className":"CommRing"},{"typeNames":["Nat.ArithmeticFunction","Nat.ArithmeticFunction"],"name":"Nat.ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid","className":"Module"},{"typeNames":["Nat.ArithmeticFunction.natToArithmeticFunction"],"name":"Nat.ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta","className":"Invertible"}],"imports":["Init","Mathlib.Algebra.BigOperators.Ring","Mathlib.Algebra.Module.BigOperators","Mathlib.NumberTheory.Divisors","Mathlib.Data.Nat.Squarefree","Mathlib.Data.Nat.GCD.BigOperators","Mathlib.Data.Nat.Factorization.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1302-L1326","name":"Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero","line":1302,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero","doc":"Möbius inversion for functions to a `CommGroupWithZero`, where the equalities only hold on\na well-behaved set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq_on_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommGroupWithZero\">CommGroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> →\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1294-L1298","name":"Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on","line":1294,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on","doc":"Möbius inversion for functions to a `CommGroup`, where the equalities only hold on a\nwell-behaved set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_on\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> →\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1281-L1290","name":"Nat.ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq_on","line":1281,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq_on","doc":"Möbius inversion for functions to a `Ring`, where the equalities only hold on a well-behaved\nset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq_on\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_mul_moebius_eq_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> →\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1269-L1277","name":"Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on'","line":1269,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on'\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_smul_moebius_eq_on'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₀ : <span class=\"fn\"><span class=\"fn\">0</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1244-L1267","name":"Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on","line":1244,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on","doc":"Möbius inversion for functions to an `AddCommGroup`, where the equalities only hold on a\nwell-behaved set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq_on\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_smul_moebius_eq_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> →\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1217-L1239","name":"Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_of_nonzero","line":1217,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_of_nonzero","doc":"Möbius inversion for functions to a `CommGroupWithZero`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq_of_nonzero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommGroupWithZero\">CommGroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1210-L1213","name":"Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq","line":1210,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq","doc":"Möbius inversion for functions to a `CommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prod_eq_iff_prod_pow_moebius_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prod_eq_iff_prod_pow_moebius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1200-L1206","name":"Nat.ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq","line":1200,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq","doc":"Möbius inversion for functions to a `Ring`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_mul_moebius_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_mul_moebius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>,\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1164-L1196","name":"Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq","line":1164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq","doc":"Möbius inversion for functions to an `AddCommGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sum_eq_iff_sum_smul_moebius_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sum_eq_iff_sum_smul_moebius_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">n</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1157-L1158","name":"Nat.ArithmeticFunction.inv_zetaUnit","line":1157,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.inv_zetaUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.inv_zetaUnit\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">inv_zetaUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Nat.ArithmeticFunction.zetaUnit</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1152-L1153","name":"Nat.ArithmeticFunction.coe_zetaUnit","line":1152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zetaUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zetaUnit\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zetaUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">Nat.ArithmeticFunction.zetaUnit</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1147-L1148","name":"Nat.ArithmeticFunction.zetaUnit","line":1147,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zetaUnit","doc":"A unit in `ArithmeticFunction R` that evaluates to `ζ`, with inverse `μ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zetaUnit\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zetaUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1141-L1144","name":"Nat.ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta","line":1141,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instInvertibleArithmeticFunctionToZeroToAddMonoidToAddMonoidWithOneToAddGroupWithOneToRingInstMulArithmeticFunctionToZeroToMonoidWithZeroToSemiringToCommSemiringOneToOneNatToArithmeticFunctionZeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Invertible/Defs.html#Invertible\">Invertible</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1133-L1134","name":"Nat.ArithmeticFunction.coe_zeta_mul_coe_moebius","line":1133,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_mul_coe_moebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_mul_coe_moebius\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_mul_coe_moebius</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1128-L1129","name":"Nat.ArithmeticFunction.coe_moebius_mul_coe_zeta","line":1128,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_moebius_mul_coe_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_moebius_mul_coe_zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_moebius_mul_coe_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1123-L1124","name":"Nat.ArithmeticFunction.coe_zeta_mul_moebius","line":1123,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_mul_moebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_mul_moebius\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_mul_moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1102-L1119","name":"Nat.ArithmeticFunction.moebius_mul_coe_zeta","line":1102,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_mul_coe_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_mul_coe_zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_mul_coe_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1088-L1097","name":"Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_sub_of_squarefree","line":1088,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_sub_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_sub_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors_one_sub_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\"><span class=\"fn\">n</span>.primeFactors</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">d</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">d</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1078-L1086","name":"Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_add_of_squarefree","line":1078,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_add_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_one_add_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors_one_add_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mult : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\"><span class=\"fn\">n</span>.primeFactors</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1070-L1075","name":"Nat.ArithmeticFunction.isMultiplicative_moebius","line":1070,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_moebius","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_moebius\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1062-L1067","name":"Nat.ArithmeticFunction.moebius_apply_isPrimePow_not_prime","line":1062,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_isPrimePow_not_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_isPrimePow_not_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_isPrimePow_not_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn' : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1053-L1059","name":"Nat.ArithmeticFunction.moebius_apply_prime_pow","line":1053,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> then <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span> else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1049-L1050","name":"Nat.ArithmeticFunction.moebius_apply_prime","line":1049,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1041-L1046","name":"Nat.ArithmeticFunction.moebius_ne_zero_iff_eq_or","line":1041,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_ne_zero_iff_eq_or","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_ne_zero_iff_eq_or\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_ne_zero_iff_eq_or</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1034-L1038","name":"Nat.ArithmeticFunction.moebius_ne_zero_iff_squarefree","line":1034,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_ne_zero_iff_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_ne_zero_iff_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_ne_zero_iff_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1031-L1031","name":"Nat.ArithmeticFunction.moebius_apply_one","line":1031,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1027-L1028","name":"Nat.ArithmeticFunction.moebius_eq_zero_of_not_squarefree","line":1027,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_eq_zero_of_not_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_eq_zero_of_not_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_eq_zero_of_not_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1022-L1023","name":"Nat.ArithmeticFunction.moebius_apply_of_squarefree","line":1022,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius_apply_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius_apply_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\">Nat.ArithmeticFunction.moebius</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1018-L1019","name":"Nat.ArithmeticFunction.termμ","line":1018,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termμ","doc":"`μ` is the Möbius function. If `n` is squarefree with an even number of distinct prime factors,\n`μ n = 1`. If `n` is squarefree with an odd number of distinct prime factors, `μ n = -1`.\nIf `n` is not squarefree, `μ n = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termμ\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termμ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1013-L1014","name":"Nat.ArithmeticFunction.moebius","line":1013,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius","doc":"`μ` is the Möbius function. If `n` is squarefree with an even number of distinct prime factors,\n`μ n = 1`. If `n` is squarefree with an odd number of distinct prime factors, `μ n = -1`.\nIf `n` is not squarefree, `μ n = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.moebius\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">moebius</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1006-L1007","name":"Nat.ArithmeticFunction.cardDistinctFactors_apply_prime","line":1006,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_apply_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_apply_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_apply_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\">Nat.ArithmeticFunction.cardDistinctFactors</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L1000-L1002","name":"Nat.ArithmeticFunction.cardDistinctFactors_apply_prime_pow","line":1000,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_apply_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\">Nat.ArithmeticFunction.cardDistinctFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L989-L996","name":"Nat.ArithmeticFunction.cardDistinctFactors_eq_cardFactors_iff_squarefree","line":989,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_eq_cardFactors_iff_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_eq_cardFactors_iff_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_eq_cardFactors_iff_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\">Nat.ArithmeticFunction.cardDistinctFactors</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L985-L986","name":"Nat.ArithmeticFunction.cardDistinctFactors_apply","line":985,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\">Nat.ArithmeticFunction.cardDistinctFactors</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/List/Defs.html#List.dedup\">List.dedup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factors.html#Nat.factors\">Nat.factors</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L982-L982","name":"Nat.ArithmeticFunction.cardDistinctFactors_one","line":982,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\">Nat.ArithmeticFunction.cardDistinctFactors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L978-L978","name":"Nat.ArithmeticFunction.cardDistinctFactors_zero","line":978,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\">Nat.ArithmeticFunction.cardDistinctFactors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L975-L976","name":"Nat.ArithmeticFunction.termω","line":975,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termω","doc":"`ω n` is the number of distinct prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termω\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termω</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L970-L971","name":"Nat.ArithmeticFunction.cardDistinctFactors","line":970,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors","doc":"`ω n` is the number of distinct prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardDistinctFactors\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardDistinctFactors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L965-L966","name":"Nat.ArithmeticFunction.cardFactors_apply_prime_pow","line":965,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_apply_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L960-L961","name":"Nat.ArithmeticFunction.cardFactors_apply_prime","line":960,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_apply_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_apply_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_apply_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L952-L956","name":"Nat.ArithmeticFunction.cardFactors_multiset_prod","line":952,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_multiset_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_multiset_prod\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_multiset_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.prod\">Multiset.prod</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Multiset/Basic.html#Multiset.sum\">Multiset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<span class=\"fn\">⇑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a></span>)</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L946-L949","name":"Nat.ArithmeticFunction.cardFactors_mul","line":946,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n0 : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L935-L943","name":"Nat.ArithmeticFunction.cardFactors_eq_one_iff_prime","line":935,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_eq_one_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_eq_one_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_eq_one_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L931-L931","name":"Nat.ArithmeticFunction.cardFactors_one","line":931,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L929-L929","name":"Nat.ArithmeticFunction.cardFactors_zero","line":929,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L924-L925","name":"Nat.ArithmeticFunction.cardFactors_apply","line":924,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\">Nat.ArithmeticFunction.cardFactors</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factors.html#Nat.factors\">Nat.factors</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L921-L922","name":"Nat.ArithmeticFunction.termΩ","line":921,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termΩ","doc":"`Ω n` is the number of prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termΩ\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termΩ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L916-L917","name":"Nat.ArithmeticFunction.cardFactors","line":916,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors","doc":"`Ω n` is the number of prime factors of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.cardFactors\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">cardFactors</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L910-L912","name":"Nat.ArithmeticFunction.isMultiplicative_sigma","line":910,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_sigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_sigma\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_sigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\">Nat.ArithmeticFunction.sigma</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L906-L907","name":"Nat.ArithmeticFunction.isMultiplicative_pow","line":906,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow\">Nat.ArithmeticFunction.pow</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L898-L903","name":"Nat.ArithmeticFunction.IsMultiplicative.ppow","line":898,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.ppow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.ppow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">ppow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L894-L895","name":"Nat.ArithmeticFunction.isMultiplicative_id","line":894,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_id\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.id\">Nat.ArithmeticFunction.id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L890-L891","name":"Nat.ArithmeticFunction.isMultiplicative_zeta","line":890,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L879-L887","name":"Nat.ArithmeticFunction.isMultiplicative_one","line":879,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.isMultiplicative_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">isMultiplicative_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L869-L876","name":"Nat.ArithmeticFunction.zeta_mul_pow_eq_sigma","line":869,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_mul_pow_eq_sigma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_mul_pow_eq_sigma\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_mul_pow_eq_sigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow\">Nat.ArithmeticFunction.pow</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\">Nat.ArithmeticFunction.sigma</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L865-L866","name":"Nat.ArithmeticFunction.sigma_zero_apply_prime_pow","line":865,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_zero_apply_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_zero_apply_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_zero_apply_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\">Nat.ArithmeticFunction.sigma</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L862-L862","name":"Nat.ArithmeticFunction.sigma_zero_apply","line":862,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_zero_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_zero_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\">Nat.ArithmeticFunction.sigma</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span>.card</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L859-L859","name":"Nat.ArithmeticFunction.sigma_one_apply","line":859,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_one_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_one_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_one_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\">Nat.ArithmeticFunction.sigma</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L855-L856","name":"Nat.ArithmeticFunction.sigma_apply","line":855,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\">Nat.ArithmeticFunction.sigma</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L852-L853","name":"Nat.ArithmeticFunction.termσ","line":852,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termσ","doc":"`σ k n` is the sum of the `k`th powers of the divisors of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termσ\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termσ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L847-L848","name":"Nat.ArithmeticFunction.sigma","line":847,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma","doc":"`σ k n` is the sum of the `k`th powers of the divisors of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.sigma\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">sigma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L841-L843","name":"Nat.ArithmeticFunction.pow_zero_eq_zeta","line":841,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow_zero_eq_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow_zero_eq_zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pow_zero_eq_zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow\">Nat.ArithmeticFunction.pow</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L834-L838","name":"Nat.ArithmeticFunction.pow_apply","line":834,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pow_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow\">Nat.ArithmeticFunction.pow</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span> then <span class=\"fn\">0</span> else <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L829-L830","name":"Nat.ArithmeticFunction.pow","line":829,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow","doc":"`pow k n = n ^ k`, except `pow 0 0 = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L824-L825","name":"Nat.ArithmeticFunction.id_apply","line":824,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.id_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.id\">Nat.ArithmeticFunction.id</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L819-L820","name":"Nat.ArithmeticFunction.id","line":819,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.id","doc":"The identity on `ℕ` as an `ArithmeticFunction`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.id\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L786-L811","name":"Nat.ArithmeticFunction.IsMultiplicative.lcm_apply_mul_gcd_apply","line":786,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.lcm_apply_mul_gcd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.lcm_apply_mul_gcd_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">lcm_apply_mul_gcd_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/Nat/Basic.html#Nat.lcm\">Nat.lcm</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">Nat.gcd</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L771-L784","name":"Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_add_of_squarefree","line":771,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_add_of_squarefree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors_add_of_squarefree\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors_add_of_squarefree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Squarefree.html#Squarefree\">Squarefree</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors\">Nat.ArithmeticFunction.prodPrimeFactors</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">p</span></span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L762-L769","name":"Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors","line":762,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.prodPrimeFactors\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">prodPrimeFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors\">Nat.ArithmeticFunction.prodPrimeFactors</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L748-L759","name":"Nat.ArithmeticFunction.IsMultiplicative.eq_iff_eq_on_prime_powers","line":748,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.eq_iff_eq_on_prime_powers","doc":"Two multiplicative functions `f` and `g` are equal if and only if\nthey agree on prime powers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.eq_iff_eq_on_prime_powers\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">eq_iff_eq_on_prime_powers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">p </span>i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L735-L743","name":"Nat.ArithmeticFunction.IsMultiplicative.iff_ne_zero","line":735,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.iff_ne_zero","doc":"A recapitulation of the definition of multiplicative that is simpler for proofs "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.iff_ne_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">iff_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ {<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L728-L731","name":"Nat.ArithmeticFunction.IsMultiplicative.multiplicative_factorization","line":728,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.multiplicative_factorization","doc":"For any multiplicative function `f` and any `n > 0`,\nwe can evaluate `f n` by evaluating `f` at `p ^ k` over the factorization of `n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.multiplicative_factorization\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">multiplicative_factorization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Finsupp.html#Finsupp.prod\">Finsupp.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorization/Basic.html#Nat.factorization\">Nat.factorization</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L718-L723","name":"Nat.ArithmeticFunction.IsMultiplicative.pdiv","line":718,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.pdiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.pdiv\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">pdiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommGroupWithZero\">CommGroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv\">Nat.ArithmeticFunction.pdiv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L711-L715","name":"Nat.ArithmeticFunction.IsMultiplicative.pmul","line":711,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.pmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.pmul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">pmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L650-L708","name":"Nat.ArithmeticFunction.IsMultiplicative.mul","line":650,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.mul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L644-L647","name":"Nat.ArithmeticFunction.IsMultiplicative.int_cast","line":644,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.int_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.int_cast\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">int_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L638-L641","name":"Nat.ArithmeticFunction.IsMultiplicative.nat_cast","line":638,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.nat_cast\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">nat_cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L632-L636","name":"Nat.ArithmeticFunction.IsMultiplicative.map_prod_of_subset_primeFactors","line":632,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_prod_of_subset_primeFactors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_prod_of_subset_primeFactors\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_prod_of_subset_primeFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mult : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">l</span>.primeFactors</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L626-L630","name":"Nat.ArithmeticFunction.IsMultiplicative.map_prod_of_prime","line":626,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_prod_of_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_prod_of_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_prod_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mult : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L615-L623","name":"Nat.ArithmeticFunction.IsMultiplicative.map_prod","line":615,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_prod\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Set.Pairwise\">Set.Pairwise</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">g</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L608-L610","name":"Nat.ArithmeticFunction.IsMultiplicative.map_mul_of_coprime","line":608,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_mul_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_mul_of_coprime\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_mul_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L603-L604","name":"Nat.ArithmeticFunction.IsMultiplicative.map_one","line":603,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative.map_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L592-L593","name":"Nat.ArithmeticFunction.IsMultiplicative","line":592,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative","doc":"Multiplicative functions "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L585-L587","name":"Nat.ArithmeticFunction.prodPrimeFactors_apply","line":585,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prodPrimeFactors_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors\">Nat.ArithmeticFunction.prodPrimeFactors</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\"><span class=\"fn\">n</span>.primeFactors</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L579-L580","name":"Nat.ArithmeticFunction.bigproddvd","line":579,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.bigproddvd","doc":"`∏ᵖ p ∣ n, f p` is custom notation for `prodPrimeFactors f n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.bigproddvd\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">bigproddvd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L573-L575","name":"Nat.ArithmeticFunction.prodPrimeFactors","line":573,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors","doc":"The map $n \\mapsto \\prod_{p \\mid n} f(p)$ as an arithmetic function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.prodPrimeFactors\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">prodPrimeFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L563-L566","name":"Nat.ArithmeticFunction.pdiv_zeta","line":563,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv_zeta","doc":"This result only holds for `DivisionSemiring`s instead of `GroupWithZero`s because zeta takes\nvalues in ℕ, and hence the coersion requires an `AddMonoidWithOne`. TODO: Generalise zeta "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv_zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pdiv_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionSemiring\">DivisionSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv\">Nat.ArithmeticFunction.pdiv</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L557-L558","name":"Nat.ArithmeticFunction.pdiv_apply","line":557,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pdiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv\">Nat.ArithmeticFunction.pdiv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L553-L554","name":"Nat.ArithmeticFunction.pdiv","line":553,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv","doc":"This is the pointwise division of `ArithmeticFunction`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pdiv\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pdiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L541-L545","name":"Nat.ArithmeticFunction.ppow_succ'","line":541,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_succ'\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{kpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L535-L538","name":"Nat.ArithmeticFunction.ppow_succ","line":535,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L530-L532","name":"Nat.ArithmeticFunction.ppow_apply","line":530,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(kpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L526-L526","name":"Nat.ArithmeticFunction.ppow_zero","line":526,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\">Nat.ArithmeticFunction.ppow</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L515-L522","name":"Nat.ArithmeticFunction.ppow","line":515,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow","doc":"This is the pointwise power of `ArithmeticFunction`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ppow\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ppow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L505-L507","name":"Nat.ArithmeticFunction.zeta_pmul","line":505,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_pmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_pmul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_pmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">(<span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L499-L501","name":"Nat.ArithmeticFunction.pmul_zeta","line":499,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul_zeta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul_zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_zeta</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L489-L491","name":"Nat.ArithmeticFunction.pmul_comm","line":489,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul_comm\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L485-L486","name":"Nat.ArithmeticFunction.pmul_apply","line":485,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MulZeroClass\">MulZeroClass</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\">Nat.ArithmeticFunction.pmul</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L480-L481","name":"Nat.ArithmeticFunction.pmul","line":480,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul","doc":"This is the pointwise product of `ArithmeticFunction`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.pmul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">pmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MulZeroClass\">MulZeroClass</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L468-L469","name":"Nat.ArithmeticFunction.mul_zeta_apply","line":468,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_zeta_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_zeta_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_zeta_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L463-L464","name":"Nat.ArithmeticFunction.zeta_mul_apply","line":463,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_mul_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_mul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L453-L460","name":"Nat.ArithmeticFunction.coe_mul_zeta_apply","line":453,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_mul_zeta_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_mul_zeta_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_mul_zeta_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L447-L449","name":"Nat.ArithmeticFunction.coe_zeta_mul_apply","line":447,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_mul_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_mul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L435-L443","name":"Nat.ArithmeticFunction.coe_zeta_smul_apply","line":435,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_zeta_smul_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_zeta_smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">Nat.divisors</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L430-L431","name":"Nat.ArithmeticFunction.zeta_apply_ne","line":430,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_apply_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_apply_ne\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_apply_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L426-L427","name":"Nat.ArithmeticFunction.zeta_apply","line":426,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\">Nat.ArithmeticFunction.zeta</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> then <span class=\"fn\">0</span> else <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L422-L423","name":"Nat.ArithmeticFunction.termζ","line":422,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termζ","doc":"`ζ 0 = 0`, otherwise `ζ x = 1`. The Dirichlet Series is the Riemann `ζ`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.termζ\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">termζ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L417-L418","name":"Nat.ArithmeticFunction.zeta","line":417,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta","doc":"`ζ 0 = 0`, otherwise `ζ x = 1`. The Dirichlet Series is the Riemann `ζ`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zeta\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zeta</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L397-L412","name":"Nat.ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid","line":397,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instModuleArithmeticFunctionToZeroToMonoidWithZeroArithmeticFunctionToZeroToAddMonoidInstSemiringInstAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L392-L395","name":"Nat.ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring","line":392,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instCommRingArithmeticFunctionToZeroToCommMonoidWithZeroToCommSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L385-L390","name":"Nat.ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero","line":385,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instCommSemiringArithmeticFunctionToZeroToCommMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L364-L380","name":"Nat.ArithmeticFunction.instSemiring","line":364,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instSemiring\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L341-L361","name":"Nat.ArithmeticFunction.instMonoid","line":341,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L313-L332","name":"Nat.ArithmeticFunction.one_smul'","line":313,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_smul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_smul'\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_smul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L305-L310","name":"Nat.ArithmeticFunction.mul_smul'","line":305,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_smul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_smul'\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_smul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">h</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L295-L298","name":"Nat.ArithmeticFunction.intCoe_mul","line":295,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L288-L291","name":"Nat.ArithmeticFunction.natCoe_mul","line":288,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L284-L284","name":"Nat.ArithmeticFunction.mul_apply_one","line":284,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_apply_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_apply_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_apply_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L279-L281","name":"Nat.ArithmeticFunction.mul_apply","line":279,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.mul_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">mul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L275-L276","name":"Nat.ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero","line":275,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero","doc":"The Dirichlet convolution of two arithmetic functions `f` and `g` is another arithmetic function\nsuch that `(f * g) n` is the sum of `f x * g y` over all `(x,y)` such that `x * y = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instMulArithmeticFunctionToZeroToMonoidWithZero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instMulArithmeticFunctionToZeroToMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L266-L268","name":"Nat.ArithmeticFunction.smul_apply","line":266,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.smul_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">Nat.divisorsAntidiagonal</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L262-L263","name":"Nat.ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid","line":262,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid","doc":"The Dirichlet convolution of two arithmetic functions `f` and `g` is another arithmetic function\nsuch that `(f * g) n` is the sum of `f x * g y` over all `(x,y)` such that `x * y = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instSMulArithmeticFunctionArithmeticFunctionToZeroToAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">M</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L252-L254","name":"Nat.ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid","line":252,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddCommGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoidToDivisionAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L247-L250","name":"Nat.ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid","line":247,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddGroupArithmeticFunctionToZeroToNegZeroClassToSubNegZeroMonoidToSubtractionMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L244-L245","name":"Nat.ArithmeticFunction.instAddCommMonoid","line":244,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddCommMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L236-L241","name":"Nat.ArithmeticFunction.instAddMonoidWithOne","line":236,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddMonoidWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddMonoidWithOne\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddMonoidWithOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L226-L231","name":"Nat.ArithmeticFunction.instAddMonoid","line":226,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instAddMonoid\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L222-L223","name":"Nat.ArithmeticFunction.add_apply","line":222,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.add_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.add_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">add_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L218-L219","name":"Nat.ArithmeticFunction.add","line":218,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.add\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L208-L211","name":"Nat.ArithmeticFunction.intCoe_one","line":208,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L201-L204","name":"Nat.ArithmeticFunction.natCoe_one","line":201,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L194-L197","name":"Nat.ArithmeticFunction.coe_coe","line":194,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_coe\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L189-L190","name":"Nat.ArithmeticFunction.intCoe_apply","line":189,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L184-L185","name":"Nat.ArithmeticFunction.intCoe_int","line":184,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe_int\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L179-L180","name":"Nat.ArithmeticFunction.intCoe","line":179,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.intCoe\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">intCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L175-L177","name":"Nat.ArithmeticFunction.ofInt","line":175,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ofInt","doc":"Coerce an arithmetic function with values in `ℤ` to one with values in `R`. We cannot inline\nthis in `intCoe` because it gets unfolded too much. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ofInt\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ofInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L167-L169","name":"Nat.ArithmeticFunction.natCoe_apply","line":167,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L162-L163","name":"Nat.ArithmeticFunction.natCoe_nat","line":162,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe_nat\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L157-L158","name":"Nat.ArithmeticFunction.natCoe","line":157,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natCoe\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natCoe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L153-L155","name":"Nat.ArithmeticFunction.natToArithmeticFunction","line":153,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natToArithmeticFunction","doc":"Coerce an arithmetic function with values in `ℕ` to one with values in `R`. We cannot inline\nthis in `natCoe` because it gets unfolded too much. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.natToArithmeticFunction\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">natToArithmeticFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L142-L143","name":"Nat.ArithmeticFunction.one_apply_ne","line":142,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_apply_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_apply_ne\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_apply_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L137-L138","name":"Nat.ArithmeticFunction.one_one","line":137,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L132-L133","name":"Nat.ArithmeticFunction.one_apply","line":132,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> then <span class=\"fn\">1</span> else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L129-L130","name":"Nat.ArithmeticFunction.one","line":129,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.one\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L121-L122","name":"Nat.ArithmeticFunction.ext_iff","line":121,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ext_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L117-L118","name":"Nat.ArithmeticFunction.ext","line":117,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.ext\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L112-L113","name":"Nat.ArithmeticFunction.zero_apply","line":112,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zero_apply\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zero_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L107-L108","name":"Nat.ArithmeticFunction.coe_inj","line":107,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L103-L104","name":"Nat.ArithmeticFunction.map_zero","line":103,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.map_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L99-L100","name":"Nat.ArithmeticFunction.coe_mk","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.coe_mk\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">hf</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L95-L95","name":"Nat.ArithmeticFunction.toFun_eq","line":95,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.toFun_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.toFun_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">toFun_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L91-L92","name":"Nat.ArithmeticFunction.instFunLikeArithmeticFunctionNat","line":91,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instFunLikeArithmeticFunctionNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.instFunLikeArithmeticFunctionNat\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">instFunLikeArithmeticFunctionNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L80-L80","name":"Nat.instInhabitedArithmeticFunction","line":80,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.instInhabitedArithmeticFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.instInhabitedArithmeticFunction\"><span class=\"name\">Nat</span>.<span class=\"name\">instInhabitedArithmeticFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L77-L78","name":"Nat.ArithmeticFunction.zero","line":77,"kind":"instance","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.zero\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/ArithmeticFunction.lean#L73-L74","name":"Nat.ArithmeticFunction","line":73,"kind":"def","docLink":"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction","doc":"An arithmetic function is a function from `ℕ` that maps 0 to 0. In the literature, they are\noften instead defined as functions from `ℕ+`. Multiplication on `ArithmeticFunctions` is by\nDirichlet convolution. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}