{"name":"Std.Lean.Tactic","instances":[],"imports":["Init","Lean.Elab.Tactic.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/0d0ac1c43e1ec1965e0806af9e7a32999ea31096/Std/Lean/Tactic.lean#L14-L17","name":"Lean.Elab.Tactic.evalTacticAtRaw","line":14,"kind":"def","docLink":"./Std/Lean/Tactic.html#Lean.Elab.Tactic.evalTacticAtRaw","doc":"Like `evalTacticAt`, but without restoring the goal list or pruning solved goals.\nUseful when these tasks are already being done in an outer loop.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Lean/Tactic.html#Lean.Elab.Tactic.evalTacticAtRaw\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">evalTacticAtRaw</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"}]}