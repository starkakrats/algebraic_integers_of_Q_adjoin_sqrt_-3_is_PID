{"name":"Mathlib.CategoryTheory.Limits.Bicones","instances":[{"typeNames":["Eq"],"name":"CategoryTheory.instDecidableEqBicone","className":"Decidable"},{"typeNames":["CategoryTheory.Bicone"],"name":"CategoryTheory.instInhabitedBicone","className":"Inhabited"},{"typeNames":["CategoryTheory.Bicone"],"name":"CategoryTheory.finBicone","className":"Fintype"},{"typeNames":["CategoryTheory.BiconeHom"],"name":"CategoryTheory.instInhabitedBiconeHomLeft","className":"Inhabited"},{"typeNames":["Eq"],"name":"CategoryTheory.BiconeHom.decidableEq","className":"Decidable"},{"typeNames":["CategoryTheory.Bicone"],"name":"CategoryTheory.biconeCategoryStruct","className":"CategoryTheory.CategoryStruct"},{"typeNames":["CategoryTheory.Bicone"],"name":"CategoryTheory.biconeCategory","className":"CategoryTheory.Category"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.finBiconeHom","className":"Fintype"},{"typeNames":["CategoryTheory.Bicone"],"name":"CategoryTheory.biconeSmallCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Bicone"],"name":"CategoryTheory.biconeFinCategory","className":"CategoryTheory.FinCategory"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Cones","Mathlib.CategoryTheory.FinCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L172-L172","name":"CategoryTheory.biconeFinCategory","line":172,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeFinCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeFinCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeFinCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FinCategory.html#CategoryTheory.FinCategory\">CategoryTheory.FinCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FinCategory.html#CategoryTheory.FinCategory\">CategoryTheory.FinCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L168-L169","name":"CategoryTheory.biconeSmallCategory","line":168,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeSmallCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeSmallCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeSmallCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L133-L165","name":"CategoryTheory.finBiconeHom","line":133,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.finBiconeHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.finBiconeHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">finBiconeHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FinCategory.html#CategoryTheory.FinCategory\">CategoryTheory.FinCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L110-L130","name":"CategoryTheory.biconeMk","line":110,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk","doc":"Given a diagram `F : J ⥤ C` and two `Cone F`s, we can join them into a diagram `Bicone J ⥤ C`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeMk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L109-L109","name":"CategoryTheory.biconeMk_obj","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeMk_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk\">CategoryTheory.biconeMk</a> <span class=\"fn\">J</span> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L109-L109","name":"CategoryTheory.biconeMk_map","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeMk_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> v₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeMk\">CategoryTheory.biconeMk</a> <span class=\"fn\">J</span> <span class=\"fn\">c₁</span> <span class=\"fn\">c₂</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.casesOn\">CategoryTheory.BiconeHom.casesOn</a> (motive :=\n      <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> →\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> →\n          <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span> →\n            <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>               <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n      <span class=\"fn\">f</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">CategoryTheory.Bicone.left</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a>\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">CategoryTheory.Bicone.left</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">CategoryTheory.Bicone.right</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a>\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">CategoryTheory.Bicone.right</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">j</span></span>)</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">j</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">CategoryTheory.Bicone.left</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">j</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₁</span>.π</span>.app <span class=\"fn\">j</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">j</span></span>)</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">j</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">CategoryTheory.Bicone.right</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">j</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c₂</span>.π</span>.app <span class=\"fn\">j</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">j </span>k : <span class=\"fn\">J</span>} (<span class=\"fn\">f_1</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span> →\n              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f_1</span></span>)</span></span> →\n                <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                    <span class=\"fn\">Y</span></span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f_1</span></span>)</span></span> →\n                  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) =&gt;\n                        <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">c₁</span>.pt</span> <span class=\"fn\"><span class=\"fn\">c₂</span>.pt</span> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">j</span></span></span></span></span>)</span>\n                      <span class=\"fn\">Y</span></span></span>)</span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f_1</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f_1</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L94-L98","name":"CategoryTheory.biconeCategory","line":94,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{max u₁ v₁, u₁}</a>            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L78-L91","name":"CategoryTheory.biconeCategoryStruct","line":78,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeCategoryStruct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{max u₁ v₁, u₁}</a>            <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L77-L77","name":"CategoryTheory.biconeCategoryStruct_id","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeCategoryStruct_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.casesOn\">CategoryTheory.Bicone.casesOn</a> <span class=\"fn\">j</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <span class=\"fn\">J</span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">k</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L77-L77","name":"CategoryTheory.biconeCategoryStruct_Hom","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct_Hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct_Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeCategoryStruct_Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a </span>a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">a_1</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L77-L77","name":"CategoryTheory.biconeCategoryStruct_comp","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.biconeCategoryStruct_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">biconeCategoryStruct_comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y Z : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.casesOn\">CategoryTheory.BiconeHom.casesOn</a> (motive :=\n      <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>) <span class=\"fn\">f</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span> →\n                <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.left_id</span></span>) =&gt;\n                <span class=\"fn\">g</span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span> →\n                <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">CategoryTheory.BiconeHom.right_id</span></span>) =&gt;\n                <span class=\"fn\">g</span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span> →\n                <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)\n                  (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">j</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.casesOn\">CategoryTheory.BiconeHom.casesOn</a> (motive :=\n                  <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">t</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>) <span class=\"fn\">g</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j_1</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j_1</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">j_1 </span>k : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">j_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)\n                      (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j_1</span></span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span> <span class=\"fn\">fun (<span class=\"fn\">val_eq</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j_1</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">j_2</span> : <span class=\"fn\">J</span>} =&gt;\n                        <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">j_2</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) →\n                          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span> →\n                            <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n                        <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>) =&gt;\n                          <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n                            <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) →\n                              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span>)\n                            <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>)\n                                (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f</span></span>)</span></span>) =&gt;\n                              <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\">CategoryTheory.BiconeHom.left</a> <span class=\"fn\">k</span></span></span>)</span>\n                            <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></span>)</span> <span class=\"fn\">g</span></span></span>)</span>\n                        <span class=\"fn\">val_eq</span> <span class=\"fn\">f</span></span></span></span></span>)</span>\n                  <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">g</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span> →\n                <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">j</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)\n                  (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">j</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.casesOn\">CategoryTheory.BiconeHom.casesOn</a> (motive :=\n                  <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">t</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>) <span class=\"fn\">g</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j_1</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j_1</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">j_1 </span>k : <span class=\"fn\">J</span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">j_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)\n                      (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j_1</span></span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span> <span class=\"fn\">fun (<span class=\"fn\">val_eq</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j_1</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">j_2</span> : <span class=\"fn\">J</span>} =&gt;\n                        <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">j_2</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) →\n                          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span> →\n                            <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n                        <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>) =&gt;\n                          <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n                            <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) →\n                              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span>)\n                            <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>)\n                                (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f</span></span>)</span></span>) =&gt;\n                              <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\">CategoryTheory.BiconeHom.right</a> <span class=\"fn\">k</span></span></span>)</span>\n                            <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></span>)</span> <span class=\"fn\">g</span></span></span>)</span>\n                        <span class=\"fn\">val_eq</span> <span class=\"fn\">f</span></span></span></span></span>)</span>\n                  <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">g</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">CategoryTheory.Bicone.right</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">j </span>k : <span class=\"fn\">J</span>} (<span class=\"fn\">f_1</span> : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span></span>) =&gt;\n        <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n          <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f_1</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n          <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n              <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span> →\n                <span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) →\n                  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f_1</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n              <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)\n                  (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>)\n                  (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">f_1</span></span>)</span></span>) =&gt;\n                <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.casesOn\">CategoryTheory.BiconeHom.casesOn</a> (motive :=\n                  <span class=\"fn\">fun (<span class=\"fn\">a</span> a_1 : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>) =&gt;\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a_1</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">x</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>) <span class=\"fn\">g</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j_1</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">j_1</span> : <span class=\"fn\">J</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">CategoryTheory.Bicone.right</span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span></span></span>)</span>\n                  <span class=\"fn\">(<span class=\"fn\">fun {<span class=\"fn\">j_1 </span>k_1 : <span class=\"fn\">J</span>} (<span class=\"fn\">g_1</span> : <span class=\"fn\"><span class=\"fn\">j_1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k_1</span></span>)\n                      (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j_1</span></span></span>) =&gt;\n                    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.noConfusion\">CategoryTheory.Bicone.noConfusion</a> <span class=\"fn\">h</span> <span class=\"fn\">fun (<span class=\"fn\">val_eq</span> : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j_1</span></span>) =&gt;\n                      <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">j_2</span> : <span class=\"fn\">J</span>} =&gt;\n                        <span class=\"fn\">(<span class=\"fn\">g_2</span> : <span class=\"fn\"><span class=\"fn\">j_2</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k_1</span></span>) →\n                          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k_1</span></span></span> →\n                            <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">g_2</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span></span>)\n                        <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g_2</span> : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k_1</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k_1</span></span></span>) =&gt;\n                          <span class=\"fn\"><a href=\"./Init/Prelude.html#Eq.ndrec\">Eq.ndrec</a> (motive := <span class=\"fn\">fun {<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>} =&gt;\n                            <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>) →\n                              <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">g_2</span></span>)</span></span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span></span></span>)\n                            <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k_1</span></span></span>)\n                                (<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">g_2</span></span>)</span></span>) =&gt;\n                              <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\">CategoryTheory.BiconeHom.diagram</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f_1</span> <span class=\"fn\">g_2</span></span>)</span></span></span>)</span>\n                            <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k_1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></span>)</span> <span class=\"fn\">g</span></span></span>)</span>\n                        <span class=\"fn\">val_eq</span> <span class=\"fn\">g_1</span></span></span></span></span>)</span>\n                  <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">g</span> <span class=\"fn\">g</span></span>)</span></span></span>)</span>\n              <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span>)</span>\n          <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">f</span></span></span>)</span>\n      <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L73-L74","name":"CategoryTheory.BiconeHom.decidableEq","line":73,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.decidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.decidableEq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span>.<span class=\"name\">decidableEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L70-L71","name":"CategoryTheory.instInhabitedBiconeHomLeft","line":70,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.instInhabitedBiconeHomLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.instInhabitedBiconeHomLeft\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instInhabitedBiconeHomLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">CategoryTheory.Bicone.left</span> <span class=\"fn\">CategoryTheory.Bicone.left</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L67-L67","name":"CategoryTheory.BiconeHom.diagram","line":67,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.diagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span>.<span class=\"name\">diagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{j : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">k</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L66-L66","name":"CategoryTheory.BiconeHom.right","line":66,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">CategoryTheory.Bicone.right</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L65-L65","name":"CategoryTheory.BiconeHom.left","line":65,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(j : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">CategoryTheory.Bicone.left</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\">CategoryTheory.Bicone.diagram</a> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L64-L64","name":"CategoryTheory.BiconeHom.right_id","line":64,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.right_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span>.<span class=\"name\">right_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">CategoryTheory.Bicone.right</span> <span class=\"fn\">CategoryTheory.Bicone.right</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L63-L63","name":"CategoryTheory.BiconeHom.left_id","line":63,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom.left_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span>.<span class=\"name\">left_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\">CategoryTheory.BiconeHom</a> <span class=\"fn\">J</span> <span class=\"fn\">CategoryTheory.Bicone.left</span> <span class=\"fn\">CategoryTheory.Bicone.left</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L62-L67","name":"CategoryTheory.BiconeHom","line":62,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom","doc":"The homs for a walking `Bicone J`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.BiconeHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BiconeHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a>     <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span> → <a href=\"./foundational_types.html\">Type</a> (max u₁ v₁)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L51-L56","name":"CategoryTheory.finBicone","line":51,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.finBicone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.finBicone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">finBicone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L48-L49","name":"CategoryTheory.instInhabitedBicone","line":48,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.instInhabitedBicone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.instInhabitedBicone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instInhabitedBicone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L43-L43","name":"CategoryTheory.instDecidableEqBicone","line":43,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.instDecidableEqBicone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.instDecidableEqBicone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instDecidableEqBicone</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">J</span></span>] → <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L42-L42","name":"CategoryTheory.Bicone.diagram","line":42,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.diagram\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Bicone</span>.<span class=\"name\">diagram</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L41-L41","name":"CategoryTheory.Bicone.right","line":41,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Bicone</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L40-L40","name":"CategoryTheory.Bicone.left","line":40,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Bicone</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\">CategoryTheory.Bicone</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Bicones.lean#L39-L43","name":"CategoryTheory.Bicone","line":39,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone","doc":"Given a category `J`, construct a walking `Bicone J` by adjoining two elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Bicones.html#CategoryTheory.Bicone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Bicone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(J : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u₁</div></div>"}]}