{"name":"Aesop.Search.Main","instances":[],"imports":["Init","Aesop.Check","Aesop.Frontend.Attribute","Aesop.Options","Aesop.RuleSet","Aesop.Search.Expansion","Aesop.Search.ExpandSafePrefix","Aesop.Search.Queue","Aesop.Tree"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L258-L278","name":"Aesop.search","line":258,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.search","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.search\"><span class=\"name\">Aesop</span>.<span class=\"name\">search</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ruleSet? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RuleSet.html#Aesop.RuleSet\">Aesop.RuleSet</a></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Aesop/Options/Public.html#Aesop.Options\">Aesop.Options</a>\n  <span class=\"fn\">{ <span class=\"fn\">strategy</span> := <a href=\"./Aesop/Options/Public.html#Aesop.Strategy.bestFirst\">Aesop.Strategy.bestFirst</a>, <span class=\"fn\">maxRuleApplicationDepth</span> := <span class=\"fn\">30</span>, <span class=\"fn\">maxRuleApplications</span> := <span class=\"fn\">200</span>, <span class=\"fn\">maxGoals</span> := <span class=\"fn\">0</span>,\n    <span class=\"fn\">maxNormIterations</span> := <span class=\"fn\">100</span>, <span class=\"fn\">maxRuleHeartbeats</span> := <span class=\"fn\">0</span>, <span class=\"fn\">maxSimpHeartbeats</span> := <span class=\"fn\">0</span>, <span class=\"fn\">maxUnfoldHeartbeats</span> := <span class=\"fn\">0</span>,\n    <span class=\"fn\">applyHypsTransparency</span> := <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode.default\">Lean.Meta.TransparencyMode.default</a>,\n    <span class=\"fn\">assumptionTransparency</span> := <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode.default\">Lean.Meta.TransparencyMode.default</a>,\n    <span class=\"fn\">destructProductsTransparency</span> := <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode.reducible\">Lean.Meta.TransparencyMode.reducible</a>, <span class=\"fn\">introsTransparency?</span> := <span class=\"fn\">none</span>,\n    <span class=\"fn\">terminal</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">warnOnNonterminal</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">traceScript</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">enableSimp</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">useSimpAll</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>,\n    <span class=\"fn\">enableUnfold</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpConfig : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a>\n  <span class=\"fn\">{ <span class=\"fn\">maxSteps</span> := <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.defaultMaxSteps\">Lean.Meta.Simp.defaultMaxSteps</a>, <span class=\"fn\">maxDischargeDepth</span> := <span class=\"fn\">2</span>, <span class=\"fn\">contextual</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">memoize</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>,\n    <span class=\"fn\">singlePass</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">zeta</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">beta</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">eta</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">etaStruct</span> := <a href=\"./Init/MetaTypes.html#Lean.Meta.EtaStructMode.all\">Lean.Meta.EtaStructMode.all</a>,\n    <span class=\"fn\">iota</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">proj</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">decide</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">arith</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">autoUnfold</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">dsimp</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>,\n    <span class=\"fn\">failIfUnchanged</span> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>, <span class=\"fn\">ground</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>, <span class=\"fn\">unfoldPartialApp</span> := <a href=\"./Init/Prelude.html#Bool.false\">false</a> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpConfigSyntax? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span> <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(profile : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Aesop/Profiling.html#Aesop.Profile\">Aesop.Profile</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Profiling.html#Aesop.Profile\">Aesop.Profile</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L241-L256","name":"Aesop.searchLoop","line":241,"kind":"opaque","docLink":"./Aesop/Search/Main.html#Aesop.searchLoop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.searchLoop\"><span class=\"name\">Aesop</span>.<span class=\"name\">searchLoop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L237-L239","name":"Aesop.handleFatalError","line":237,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.handleFatalError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.handleFatalError\"><span class=\"name\">Aesop</span>.<span class=\"name\">handleFatalError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L218-L235","name":"Aesop.handleNonfatalError","line":218,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.handleNonfatalError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.handleNonfatalError\"><span class=\"name\">Aesop</span>.<span class=\"name\">handleNonfatalError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(err : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L185-L204","name":"Aesop.treeHasNonPreprocessingRapp","line":185,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.treeHasNonPreprocessingRapp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.treeHasNonPreprocessingRapp\"><span class=\"name\">Aesop</span>.<span class=\"name\">treeHasNonPreprocessingRapp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.TreeM\">Aesop.TreeM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L177-L183","name":"Aesop.finishIfProven","line":177,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.finishIfProven","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.finishIfProven\"><span class=\"name\">Aesop</span>.<span class=\"name\">finishIfProven</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L174-L175","name":"Aesop.traceTree","line":174,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.traceTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.traceTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">traceTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L152-L172","name":"Aesop.traceScript","line":152,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.traceScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.traceScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">traceScript</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L146-L150","name":"Aesop.checkScriptSteps","line":146,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.checkScriptSteps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.checkScriptSteps\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkScriptSteps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(script : <a href=\"./Aesop/Script.html#Aesop.UnstructuredScript\">Aesop.UnstructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L129-L144","name":"Aesop.checkRenderedScript","line":129,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.checkRenderedScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.checkRenderedScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkRenderedScript</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(script : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L116-L126","name":"Aesop.finalizeProof","line":116,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.finalizeProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.finalizeProof\"><span class=\"name\">Aesop</span>.<span class=\"name\">finalizeProof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L108-L111","name":"Aesop.getProof?","line":108,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.getProof?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.getProof?\"><span class=\"name\">Aesop</span>.<span class=\"name\">getProof?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L97-L106","name":"Aesop.checkRootUnprovable","line":97,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.checkRootUnprovable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.checkRootUnprovable\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkRootUnprovable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L90-L95","name":"Aesop.checkRappLimit","line":90,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.checkRappLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.checkRappLimit\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkRappLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L83-L88","name":"Aesop.checkGoalLimit","line":83,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.checkGoalLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.checkGoalLimit\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkGoalLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L66-L81","name":"Aesop.expandNextGoal.traceNewRapps","line":66,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.expandNextGoal.traceNewRapps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.expandNextGoal.traceNewRapps\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandNextGoal</span>.<span class=\"name\">traceNewRapps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(newRapps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">Aesop.RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L58-L64","name":"Aesop.expandNextGoal.fmt","line":58,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.expandNextGoal.fmt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.expandNextGoal.fmt\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandNextGoal</span>.<span class=\"name\">fmt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalId\">Aesop.GoalId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(priority : <a href=\"./Aesop/Percent.html#Aesop.Percent\">Aesop.Percent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initialGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initialMetaState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(result : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">Aesop.RuleResult</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L33-L81","name":"Aesop.expandNextGoal","line":33,"kind":"def","docLink":"./Aesop/Search/Main.html#Aesop.expandNextGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.expandNextGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandNextGoal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/24a4e8fea81999723bfc38bebf7adc86c2f26c6c/Aesop/Search/Main.lean#L25-L31","name":"Aesop.nextActiveGoal","line":25,"kind":"opaque","docLink":"./Aesop/Search/Main.html#Aesop.nextActiveGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Main.html#Aesop.nextActiveGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">nextActiveGoal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Q : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Aesop.Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">Aesop.SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">Aesop.GoalRef</a></span></div></div>"}]}