{"name":"Mathlib.RingTheory.EisensteinCriterion","instances":[],"imports":["Init","Mathlib.Data.Nat.Cast.WithTop","Mathlib.RingTheory.Prime","Mathlib.RingTheory.Polynomial.Content","Mathlib.RingTheory.Ideal.Quotient"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/EisensteinCriterion.lean#L91-L136","name":"Polynomial.irreducible_of_eisenstein_criterion","line":91,"kind":"theorem","docLink":"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.irreducible_of_eisenstein_criterion","doc":"If `f` is a non constant polynomial with coefficients in `R`, and `P` is a prime ideal in `R`,\nthen if every coefficient in `R` except the leading coefficient is in `P`, and\nthe trailing coefficient is not in `P^2` and no non units in `R` divide `f`, then `f` is\nirreducible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.irreducible_of_eisenstein_criterion\"><span class=\"name\">Polynomial</span>.<span class=\"name\">irreducible_of_eisenstein_criterion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsPrime\">Ideal.IsPrime</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfl : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.leadingCoeff\">Polynomial.leadingCoeff</a> <span class=\"fn\">f</span></span> ∉ <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfP : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.degree\">Polynomial.degree</a> <span class=\"fn\">f</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial.coeff\">Polynomial.coeff</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfd0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.degree\">Polynomial.degree</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial.coeff\">Polynomial.coeff</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> ∉ <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Content.html#Polynomial.IsPrimitive\">Polynomial.IsPrimitive</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Associated.html#Irreducible\">Irreducible</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/EisensteinCriterion.lean#L72-L78","name":"Polynomial.EisensteinCriterionAux.isUnit_of_natDegree_eq_zero_of_isPrimitive","line":72,"kind":"theorem","docLink":"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.isUnit_of_natDegree_eq_zero_of_isPrimitive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.isUnit_of_natDegree_eq_zero_of_isPrimitive\"><span class=\"name\">Polynomial</span>.<span class=\"name\">EisensteinCriterionAux</span>.<span class=\"name\">isUnit_of_natDegree_eq_zero_of_isPrimitive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Polynomial/Content.html#Polynomial.IsPrimitive\">Polynomial.IsPrimitive</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">Polynomial.natDegree</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/EisensteinCriterion.lean#L65-L68","name":"Polynomial.EisensteinCriterionAux.eval_zero_mem_ideal_of_eq_mul_X_pow","line":65,"kind":"theorem","docLink":"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.eval_zero_mem_ideal_of_eq_mul_X_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.eval_zero_mem_ideal_of_eq_mul_X_pow\"><span class=\"name\">Polynomial</span>.<span class=\"name\">EisensteinCriterionAux</span>.<span class=\"name\">eval_zero_mem_ideal_of_eq_mul_X_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">P</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">0</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/EisensteinCriterion.lean#L52-L61","name":"Polynomial.EisensteinCriterionAux.le_natDegree_of_map_eq_mul_X_pow","line":52,"kind":"theorem","docLink":"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.le_natDegree_of_map_eq_mul_X_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.le_natDegree_of_map_eq_mul_X_pow\"><span class=\"name\">Polynomial</span>.<span class=\"name\">EisensteinCriterionAux</span>.<span class=\"name\">le_natDegree_of_map_eq_mul_X_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.IsPrime\">Ideal.IsPrime</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">P</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc0 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.degree\">Polynomial.degree</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">Polynomial.natDegree</a> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RingTheory/EisensteinCriterion.lean#L32-L48","name":"Polynomial.EisensteinCriterionAux.map_eq_C_mul_X_pow_of_forall_coeff_mem","line":32,"kind":"theorem","docLink":"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.map_eq_C_mul_X_pow_of_forall_coeff_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/EisensteinCriterion.html#Polynomial.EisensteinCriterionAux.map_eq_C_mul_X_pow_of_forall_coeff_mem\"><span class=\"name\">Polynomial</span>.<span class=\"name\">EisensteinCriterionAux</span>.<span class=\"name\">map_eq_C_mul_X_pow_of_forall_coeff_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hfP : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.degree\">Polynomial.degree</a> <span class=\"fn\">f</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Basic.html#Polynomial.coeff\">Polynomial.coeff</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Eval.html#Polynomial.map\">Polynomial.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Polynomial.C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Quotient.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">P</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.leadingCoeff\">Polynomial.leadingCoeff</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Polynomial.X</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">Polynomial.natDegree</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"}]}