{"name":"Mathlib.Analysis.Complex.Schwarz","instances":[],"imports":["Init","Mathlib.Analysis.Complex.AbsMax","Mathlib.Analysis.Complex.RemovableSingularity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L194-L198","name":"Complex.abs_le_abs_of_mapsTo_ball_self","line":194,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.abs_le_abs_of_mapsTo_ball_self","doc":"The **Schwarz Lemma**: if `f : ℂ → ℂ` sends an open disk with center `0` to itself, then for any\npoint `z` of this disk we have `abs (f z) ≤ abs z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.abs_le_abs_of_mapsTo_ball_self\"><span class=\"name\">Complex</span>.<span class=\"name\">abs_le_abs_of_mapsTo_ball_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Abs.html#Complex.abs\">Complex.abs</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Abs.html#Complex.abs\">Complex.abs</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Abs.html#Complex.abs\">Complex.abs</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L183-L189","name":"Complex.dist_le_dist_of_mapsTo_ball_self","line":183,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.dist_le_dist_of_mapsTo_ball_self","doc":"The **Schwarz Lemma**: if `f : ℂ → ℂ` sends an open disk to itself and the center `c` of this\ndisk to itself, then for any point `z` of this disk we have `dist (f z) c ≤ dist z c`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.dist_le_dist_of_mapsTo_ball_self\"><span class=\"name\">Complex</span>.<span class=\"name\">dist_le_dist_of_mapsTo_ball_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L176-L178","name":"Complex.abs_deriv_le_one_of_mapsTo_ball","line":176,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.abs_deriv_le_one_of_mapsTo_ball","doc":"The **Schwarz Lemma**: if `f : ℂ → ℂ` sends an open disk of positive radius to itself and the\ncenter of this disk to itself, then the absolute value of the derivative of `f` at the center of\nthis disk is at most `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.abs_deriv_le_one_of_mapsTo_ball\"><span class=\"name\">Complex</span>.<span class=\"name\">abs_deriv_le_one_of_mapsTo_ball</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Abs.html#Complex.abs\">Complex.abs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L168-L170","name":"Complex.abs_deriv_le_div_of_mapsTo_ball","line":168,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.abs_deriv_le_div_of_mapsTo_ball","doc":"The **Schwarz Lemma**: if `f : ℂ → ℂ` sends an open disk with center `c` and a positive radius\n`R₁` to an open disk with center `f c` and radius `R₂`, then the absolute value of the derivative of\n`f` at `c` is at most the ratio `R₂ / R₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.abs_deriv_le_div_of_mapsTo_ball\"><span class=\"name\">Complex</span>.<span class=\"name\">abs_deriv_le_div_of_mapsTo_ball</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">R₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Abs.html#Complex.abs\">Complex.abs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L152-L158","name":"Complex.dist_le_div_mul_dist_of_mapsTo_ball","line":152,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.dist_le_div_mul_dist_of_mapsTo_ball","doc":"The **Schwarz Lemma**: if `f : ℂ → E` sends an open disk with center `c` and radius `R₁` to an\nopen ball with center `f c` and radius `R₂`, then for any `z` in the former disk we have\n`dist (f z) (f c) ≤ (R₂ / R₁) * dist z c`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.dist_le_div_mul_dist_of_mapsTo_ball\"><span class=\"name\">Complex</span>.<span class=\"name\">dist_le_div_mul_dist_of_mapsTo_ball</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L144-L146","name":"Complex.norm_deriv_le_div_of_mapsTo_ball","line":144,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.norm_deriv_le_div_of_mapsTo_ball","doc":"The **Schwarz Lemma**: if `f : ℂ → E` sends an open disk with center `c` and a positive radius\n`R₁` to an open ball with center `f c` and radius `R₂`, then the absolute value of the derivative of\n`f` at `c` is at most the ratio `R₂ / R₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.norm_deriv_le_div_of_mapsTo_ball\"><span class=\"name\">Complex</span>.<span class=\"name\">norm_deriv_le_div_of_mapsTo_ball</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">R₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L132-L138","name":"Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div'","line":132,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div'\"><span class=\"name\">Complex</span>.<span class=\"name\">affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/StrictConvexSpace.html#StrictConvexSpace\">StrictConvexSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_z₀ : <span class=\"fn\">∃ z₀ ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Dslope.html#dslope\">dslope</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">z₀</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (C : <span class=\"fn\">E</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">C</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">C</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L113-L129","name":"Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div","line":113,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div","doc":"Equality case in the **Schwarz Lemma**: in the setup of `norm_dslope_le_div_of_mapsTo_ball`, if\n`‖dslope f c z₀‖ = R₂ / R₁` holds at a point in the ball then the map `f` is affine. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div\"><span class=\"name\">Complex</span>.<span class=\"name\">affine_of_mapsTo_ball_of_exists_norm_dslope_eq_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z₀ : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Convex/StrictConvexSpace.html#StrictConvexSpace\">StrictConvexSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_z₀ : <span class=\"fn\"><span class=\"fn\">z₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_eq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Dslope.html#dslope\">dslope</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">z₀</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Dslope.html#dslope\">dslope</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">z₀</span></span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L92-L108","name":"Complex.norm_dslope_le_div_of_mapsTo_ball","line":92,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.norm_dslope_le_div_of_mapsTo_ball","doc":"Two cases of the **Schwarz Lemma** (derivative and distance), merged together. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.norm_dslope_le_div_of_mapsTo_ball\"><span class=\"name\">Complex</span>.<span class=\"name\">norm_dslope_le_div_of_mapsTo_ball</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Dslope.html#dslope\">dslope</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">z</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Complex/Schwarz.lean#L65-L88","name":"Complex.schwarz_aux","line":65,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Schwarz.html#Complex.schwarz_aux","doc":"An auxiliary lemma for `Complex.norm_dslope_le_div_of_mapsTo_ball`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Schwarz.html#Complex.schwarz_aux\"><span class=\"name\">Complex</span>.<span class=\"name\">schwarz_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₁ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R₂ : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableOn\">DifferentiableOn</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_maps : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">R₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">c</span> <span class=\"fn\">R₁</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Dslope.html#dslope\">dslope</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">z</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">R₂</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">R₁</span></span></span></div></div>"}]}