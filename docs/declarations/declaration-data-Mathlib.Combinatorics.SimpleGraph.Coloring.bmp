{"name":"Mathlib.Combinatorics.SimpleGraph.Coloring","instances":[{"typeNames":["SimpleGraph.Coloring"],"name":"SimpleGraph.instFintypeColoring","className":"Fintype"}],"imports":["Init","Mathlib.Combinatorics.SimpleGraph.Clique","Mathlib.Data.ENat.Lattice","Mathlib.Data.Nat.Lattice","Mathlib.Data.Setoid.Partition","Mathlib.Order.Antichain"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L490-L498","name":"SimpleGraph.cliqueFree_of_chromaticNumber_lt","line":490,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.cliqueFree_of_chromaticNumber_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.cliqueFree_of_chromaticNumber_lt\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">cliqueFree_of_chromaticNumber_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Clique.html#SimpleGraph.CliqueFree\">SimpleGraph.CliqueFree</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L482-L487","name":"SimpleGraph.Colorable.cliqueFree","line":482,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.cliqueFree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.cliqueFree\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">cliqueFree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Clique.html#SimpleGraph.CliqueFree\">SimpleGraph.CliqueFree</a> <span class=\"fn\">G</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L469-L479","name":"SimpleGraph.IsClique.card_le_chromaticNumber","line":469,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.IsClique.card_le_chromaticNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.IsClique.card_le_chromaticNumber\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">IsClique</span>.<span class=\"name\">card_le_chromaticNumber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Clique.html#SimpleGraph.IsClique\">SimpleGraph.IsClique</a> <span class=\"fn\">G</span> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.card</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L463-L466","name":"SimpleGraph.IsClique.card_le_of_colorable","line":463,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.IsClique.card_le_of_colorable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.IsClique.card_le_of_colorable\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">IsClique</span>.<span class=\"name\">card_le_of_colorable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Clique.html#SimpleGraph.IsClique\">SimpleGraph.IsClique</a> <span class=\"fn\">G</span> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.card</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L454-L460","name":"SimpleGraph.IsClique.card_le_of_coloring","line":454,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.IsClique.card_le_of_coloring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.IsClique.card_le_of_coloring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">IsClique</span>.<span class=\"name\">card_le_of_coloring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Clique.html#SimpleGraph.IsClique\">SimpleGraph.IsClique</a> <span class=\"fn\">G</span> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.card</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L432-L448","name":"SimpleGraph.CompleteBipartiteGraph.chromaticNumber","line":432,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.CompleteBipartiteGraph.chromaticNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.CompleteBipartiteGraph.chromaticNumber\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">CompleteBipartiteGraph</span>.<span class=\"name\">chromaticNumber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#completeBipartiteGraph\">completeBipartiteGraph</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L425-L429","name":"SimpleGraph.CompleteBipartiteGraph.bicoloring","line":425,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.CompleteBipartiteGraph.bicoloring","doc":"The bicoloring of a complete bipartite graph using whether a vertex\nis on the left or on the right. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.CompleteBipartiteGraph.bicoloring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">CompleteBipartiteGraph</span>.<span class=\"name\">bicoloring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#completeBipartiteGraph\">completeBipartiteGraph</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L415-L420","name":"SimpleGraph.chromaticNumber_top_eq_top_of_infinite","line":415,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_top_eq_top_of_infinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_top_eq_top_of_infinite\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_top_eq_top_of_infinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L405-L412","name":"SimpleGraph.chromaticNumber_top","line":405,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_top\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">V</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L395-L401","name":"SimpleGraph.chromaticNumber_bot","line":395,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_bot\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L377-L392","name":"SimpleGraph.chromaticNumber_eq_card_of_forall_surj","line":377,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_card_of_forall_surj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_card_of_forall_surj\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_eq_card_of_forall_surj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">C'</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">C'</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L372-L374","name":"SimpleGraph.chromaticNumber_mono_of_embedding","line":372,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_mono_of_embedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_mono_of_embedding\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_mono_of_embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Combinatorics/SimpleGraph/Maps.html#SimpleGraph.Embedding\">↪g</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L367-L369","name":"SimpleGraph.chromaticNumber_mono","line":367,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_mono\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G' : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L356-L364","name":"SimpleGraph.chromaticNumber_le_of_forall_imp","line":356,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_of_forall_imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_of_forall_imp\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_le_of_forall_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G'</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L351-L353","name":"SimpleGraph.Colorable.mono_left","line":351,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.mono_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.mono_left\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">mono_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G'</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L344-L348","name":"SimpleGraph.colorable_of_chromaticNumber_ne_top","line":344,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_of_chromaticNumber_ne_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_of_chromaticNumber_ne_top\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_of_chromaticNumber_ne_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ENat/Basic.html#ENat.toNat\">ENat.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L333-L341","name":"SimpleGraph.chromaticNumber_pos","line":333,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_pos\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L326-L330","name":"SimpleGraph.isEmpty_of_chromaticNumber_eq_zero","line":326,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.isEmpty_of_chromaticNumber_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.isEmpty_of_chromaticNumber_eq_zero\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">isEmpty_of_chromaticNumber_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L320-L323","name":"SimpleGraph.chromaticNumber_eq_zero_of_isempty","line":320,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_zero_of_isempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_zero_of_isempty\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_eq_zero_of_isempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L311-L317","name":"SimpleGraph.chromaticNumber_le_one_of_subsingleton","line":311,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_one_of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_one_of_subsingleton\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_le_one_of_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L305-L308","name":"SimpleGraph.colorable_chromaticNumber_of_fintype","line":305,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_chromaticNumber_of_fintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_chromaticNumber_of_fintype\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_chromaticNumber_of_fintype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ENat/Basic.html#ENat.toNat\">ENat.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L297-L302","name":"SimpleGraph.colorable_chromaticNumber","line":297,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_chromaticNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_chromaticNumber\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_chromaticNumber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/ENat/Basic.html#ENat.toNat\">ENat.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L290-L294","name":"SimpleGraph.chromaticNumber_le_card","line":290,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_card\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_le_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L280-L288","name":"SimpleGraph.chromaticNumber_le_iff_colorable","line":280,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_iff_colorable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_le_iff_colorable\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_le_iff_colorable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L273-L278","name":"SimpleGraph.chromaticNumber_ne_top_iff_exists","line":273,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_ne_top_iff_exists","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_ne_top_iff_exists\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_ne_top_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L266-L270","name":"SimpleGraph.Colorable.chromaticNumber_le","line":266,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.chromaticNumber_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.chromaticNumber_le\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">chromaticNumber_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L262-L263","name":"SimpleGraph.chromaticNumber_bddBelow","line":262,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_bddBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_bddBelow\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_bddBelow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#BddBelow\">BddBelow</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L257-L259","name":"SimpleGraph.colorable_set_nonempty_of_colorable","line":257,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_set_nonempty_of_colorable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_set_nonempty_of_colorable\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_set_nonempty_of_colorable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L239-L254","name":"SimpleGraph.colorable_iff_exists_bdd_nat_coloring","line":239,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_iff_exists_bdd_nat_coloring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_iff_exists_bdd_nat_coloring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_iff_exists_bdd_nat_coloring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>), <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L234-L236","name":"SimpleGraph.Colorable.of_embedding","line":234,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.of_embedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.of_embedding\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">of_embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V' : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Combinatorics/SimpleGraph/Maps.html#SimpleGraph.Embedding\">↪g</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G'</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L228-L231","name":"SimpleGraph.Colorable.toColoring","line":228,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.toColoring","doc":"Noncomputably get a coloring from colorability. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.toColoring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">toColoring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L223-L224","name":"SimpleGraph.colorable_of_fintype","line":223,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_of_fintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_of_fintype\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_of_fintype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L219-L220","name":"SimpleGraph.Coloring.colorable","line":219,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorable\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">colorable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L215-L216","name":"SimpleGraph.Colorable.mono","line":215,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.mono\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L208-L210","name":"SimpleGraph.recolorOfCardLE","line":208,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.recolorOfCardLE","doc":"There is a noncomputable embedding of `α`-colorings to `β`-colorings if\n`β` has at least as large a cardinality as `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.recolorOfCardLE\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">recolorOfCardLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L195-L203","name":"SimpleGraph.recolorOfEquiv","line":195,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.recolorOfEquiv","doc":"Given an equivalence, there is an induced equivalence between colorings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.recolorOfEquiv\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">recolorOfEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L182-L191","name":"SimpleGraph.recolorOfEmbedding","line":182,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.recolorOfEmbedding","doc":"Given an embedding, there is an induced embedding of colorings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.recolorOfEmbedding\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">recolorOfEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L176-L179","name":"SimpleGraph.Colorable.chromaticNumber_eq_sInf","line":176,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.chromaticNumber_eq_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable.chromaticNumber_eq_sInf\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span>.<span class=\"name\">chromaticNumber_eq_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">{<span class=\"fn\">n'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n'</span></span>}</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L172-L174","name":"SimpleGraph.chromaticNumber_eq_iInf","line":172,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_iInf\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_eq_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (n : <span class=\"fn\">↑<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> | <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">m</span></span>}</span></span>), <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L169-L170","name":"SimpleGraph.chromaticNumber_eq_biInf","line":169,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_biInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber_eq_biInf\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber_eq_biInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\">SimpleGraph.chromaticNumber</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ n ∈ <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#setOf\">setOf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span></span>)</span></span>, <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L166-L166","name":"SimpleGraph.chromaticNumber","line":166,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber","doc":"The chromatic number of a graph is the minimal number of colors needed to color it.\nThis is `⊤` (infinity) iff `G` isn't colorable with finitely many colors.\n\nIf `G` is colorable, then `ENat.toNat G.chromaticNumber` is the `ℕ`-valued chromatic number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.chromaticNumber\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">chromaticNumber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENat/Basic.html#ENat\">ℕ∞</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L159-L159","name":"SimpleGraph.selfColoring","line":159,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.selfColoring","doc":"The \"tautological\" coloring of a graph, using the vertices of the graph as colors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.selfColoring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">selfColoring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L151-L155","name":"SimpleGraph.isEmpty_of_colorable_zero","line":151,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.isEmpty_of_colorable_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.isEmpty_of_colorable_zero\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">isEmpty_of_colorable_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L147-L148","name":"SimpleGraph.colorable_of_isEmpty","line":147,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_of_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.colorable_of_isEmpty\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">colorable_of_isEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\">SimpleGraph.Colorable</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L143-L144","name":"SimpleGraph.coloringOfIsEmpty","line":143,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.coloringOfIsEmpty","doc":"The coloring of an empty graph. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.coloringOfIsEmpty\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">coloringOfIsEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L139-L139","name":"SimpleGraph.Colorable","line":139,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable","doc":"Whether a graph can be colored by at most `n` colors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Colorable\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Colorable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L131-L134","name":"SimpleGraph.instFintypeColoring","line":131,"kind":"instance","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.instFintypeColoring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.instFintypeColoring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">instFintypeColoring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L126-L127","name":"SimpleGraph.Coloring.color_classes_independent","line":126,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.color_classes_independent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.color_classes_independent\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">color_classes_independent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Antichain.html#IsAntichain\">IsAntichain</a> <span class=\"fn\"><span class=\"fn\">G</span>.Adj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass\">SimpleGraph.Coloring.colorClass</a> <span class=\"fn\">C</span> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L122-L123","name":"SimpleGraph.Coloring.not_adj_of_mem_colorClass","line":122,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.not_adj_of_mem_colorClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.not_adj_of_mem_colorClass\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">not_adj_of_mem_colorClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hv : <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass\">SimpleGraph.Coloring.colorClass</a> <span class=\"fn\">C</span> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass\">SimpleGraph.Coloring.colorClass</a> <span class=\"fn\">C</span> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">SimpleGraph.Adj</a> <span class=\"fn\">G</span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L114-L119","name":"SimpleGraph.Coloring.card_colorClasses_le","line":114,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.card_colorClasses_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.card_colorClasses_le\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">card_colorClasses_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses\">SimpleGraph.Coloring.colorClasses</a> <span class=\"fn\">C</span></span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses\">SimpleGraph.Coloring.colorClasses</a> <span class=\"fn\">C</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L110-L111","name":"SimpleGraph.Coloring.colorClasses_finite","line":110,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses_finite\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">colorClasses_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Finite.html#Set.Finite\">Set.Finite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses\">SimpleGraph.Coloring.colorClasses</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L106-L107","name":"SimpleGraph.Coloring.mem_colorClasses","line":106,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.mem_colorClasses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.mem_colorClasses\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">mem_colorClasses</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass\">SimpleGraph.Coloring.colorClass</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">v</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses\">SimpleGraph.Coloring.colorClasses</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L102-L103","name":"SimpleGraph.Coloring.colorClasses_isPartition","line":102,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses_isPartition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses_isPartition\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">colorClasses_isPartition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Setoid/Partition.html#Setoid.IsPartition\">Setoid.IsPartition</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses\">SimpleGraph.Coloring.colorClasses</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L99-L99","name":"SimpleGraph.Coloring.mem_colorClass","line":99,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.mem_colorClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.mem_colorClass\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">mem_colorClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass\">SimpleGraph.Coloring.colorClass</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">v</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L96-L96","name":"SimpleGraph.Coloring.colorClasses","line":96,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses","doc":"The set containing all color classes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClasses\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">colorClasses</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L92-L92","name":"SimpleGraph.Coloring.colorClass","line":92,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass","doc":"The color class of a given color.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.colorClass\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">colorClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L85-L87","name":"SimpleGraph.Coloring.mk","line":85,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.mk","doc":"Construct a term of `SimpleGraph.Coloring` using a function that\nassigns vertices to colors and a proof that it is as proper coloring.\n\n(Note: this is a definitionally the constructor for `SimpleGraph.Hom`,\nbut with a syntactically better proper coloring hypothesis.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.mk\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(color : <span class=\"fn\"><span class=\"fn\">V</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(valid : <span class=\"fn\">∀ {<span class=\"fn\">v </span>w : <span class=\"fn\">V</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">SimpleGraph.Adj</a> <span class=\"fn\">G</span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">color</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">color</span> <span class=\"fn\">w</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L74-L75","name":"SimpleGraph.Coloring.valid","line":74,"kind":"theorem","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.valid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring.valid\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span>.<span class=\"name\">valid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\">SimpleGraph.Coloring</a> <span class=\"fn\">G</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph.Adj\">SimpleGraph.Adj</a> <span class=\"fn\">G</span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/SimpleGraph/Coloring.lean#L69-L69","name":"SimpleGraph.Coloring","line":69,"kind":"def","docLink":"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring","doc":"An `α`-coloring of a simple graph `G` is a homomorphism of `G` into the complete graph on `α`.\nThis is also known as a proper coloring.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/SimpleGraph/Coloring.html#SimpleGraph.Coloring\"><span class=\"name\">SimpleGraph</span>.<span class=\"name\">Coloring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/SimpleGraph/Basic.html#SimpleGraph\">SimpleGraph</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"}]}