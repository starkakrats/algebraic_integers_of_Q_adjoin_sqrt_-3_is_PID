{"name":"Mathlib.Analysis.Fourier.AddCircle","instances":[{"typeNames":["AddCircle.haarAddCircle"],"name":"AddCircle.instIsAddHaarMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealAddGroupToAddGroupToAddCommGroupToOrderedAddCommGroupZmultiplesNormal_of_commInstAddCommGroupRealTopologicalSpaceMeasurableSpaceMeasurableSpaceHaarAddCircle","className":"MeasureTheory.Measure.IsAddHaarMeasure"},{"typeNames":["AddCircle.haarAddCircle"],"name":"AddCircle.instIsProbabilityMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealMeasurableSpaceToAddGroupToAddCommGroupToOrderedAddCommGroupMeasurableSpaceZmultiplesHaarAddCircle","className":"MeasureTheory.IsProbabilityMeasure"}],"imports":["Init","Mathlib.Analysis.SpecialFunctions.ExpDeriv","Mathlib.Analysis.SpecialFunctions.Complex.Circle","Mathlib.Analysis.InnerProductSpace.l2Space","Mathlib.MeasureTheory.Function.ContinuousMapDense","Mathlib.MeasureTheory.Function.L2Space","Mathlib.MeasureTheory.Group.Integral","Mathlib.MeasureTheory.Integral.Periodic","Mathlib.Topology.ContinuousFunction.StoneWeierstrass","Mathlib.MeasureTheory.Integral.FundThmCalculus"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L557-L577","name":"fourierCoeffOn_of_hasDerivAt","line":557,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn_of_hasDerivAt","doc":"Express Fourier coefficients of `f` on an interval in terms of those of its derivative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn_of_hasDerivAt\"><span class=\"name\">fourierCoeffOn_of_hasDerivAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f' : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#HasDerivAt\">HasDerivAt</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf' : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">f'</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">f'</span> <span class=\"fn\">n</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L548-L553","name":"has_antideriv_at_fourier_neg","line":548,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#has_antideriv_at_fourier_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#has_antideriv_at_fourier_neg\"><span class=\"name\">has_antideriv_at_fourier_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#HasDerivAt\">HasDerivAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L540-L543","name":"hasDerivAt_fourier_neg","line":540,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#hasDerivAt_fourier_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#hasDerivAt_fourier_neg\"><span class=\"name\">hasDerivAt_fourier_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#HasDerivAt\">HasDerivAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">T</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L529-L537","name":"hasDerivAt_fourier","line":529,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#hasDerivAt_fourier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#hasDerivAt_fourier\"><span class=\"name\">hasDerivAt_fourier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#HasDerivAt\">HasDerivAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">T</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L512-L514","name":"has_pointwise_sum_fourier_series_of_summable","line":512,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#has_pointwise_sum_fourier_series_of_summable","doc":"If the sequence of Fourier coefficients of `f` is summable, then the Fourier series of `f`\nconverges everywhere pointwise to `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#has_pointwise_sum_fourier_series_of_summable\"><span class=\"name\">has_pointwise_sum_fourier_series_of_summable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#HasSum\">HasSum</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L501-L507","name":"hasSum_fourier_series_of_summable","line":501,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#hasSum_fourier_series_of_summable","doc":"If the sequence of Fourier coefficients of `f` is summable, then the Fourier series converges\nuniformly to `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#hasSum_fourier_series_of_summable\"><span class=\"name\">hasSum_fourier_series_of_summable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#HasSum\">HasSum</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">i</span></span></span></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L490-L493","name":"fourierCoeff_toLp","line":490,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_toLp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_toLp\"><span class=\"name\">fourierCoeff_toLp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSpace.html#ContinuousMap.toLp\">ContinuousMap.toLp</a> <span class=\"fn\">2</span> <span class=\"fn\">AddCircle.haarAddCircle</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">f</span></span>)</span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L469-L481","name":"tsum_sq_fourierCoeff","line":469,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#tsum_sq_fourierCoeff","doc":"**Parseval's identity**: for an `L²` function `f` on `AddCircle T`, the sum of the squared\nnorms of the Fourier coefficients equals the `L²` norm of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#tsum_sq_fourierCoeff\"><span class=\"name\">tsum_sq_fourierCoeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSpace.html#MeasureTheory.Lp\">MeasureTheory.Lp</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∑' (i : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∫ (t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">t</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> ∂<span class=\"fn\">AddCircle.haarAddCircle</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L460-L463","name":"hasSum_fourier_series_L2","line":460,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#hasSum_fourier_series_L2","doc":"The Fourier series of an `L2` function `f` sums to `f`, in the `L²` space of `AddCircle T`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#hasSum_fourier_series_L2\"><span class=\"name\">hasSum_fourier_series_L2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSpace.html#MeasureTheory.Lp\">MeasureTheory.Lp</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#HasSum\">HasSum</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp\">fourierLp</a> <span class=\"fn\">2</span> <span class=\"fn\">i</span></span></span></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L449-L456","name":"fourierBasis_repr","line":449,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierBasis_repr","doc":"Under the isometric isomorphism `fourierBasis` from `Lp ℂ 2 haarAddCircle` to `ℓ²(ℤ, ℂ)`, the\n`i`-th coefficient is `fourierCoeff f i`, i.e., the integral over `AddCircle T` of\n`fun t => fourier (-i) t * f t` with respect to the Haar measure of total mass 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierBasis_repr\"><span class=\"name\">fourierBasis_repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSpace.html#MeasureTheory.Lp\">MeasureTheory.Lp</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">fourierBasis</span>.repr</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L442-L443","name":"coe_fourierBasis","line":442,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#coe_fourierBasis","doc":"The elements of the Hilbert basis `fourierBasis` are the functions `fourierLp 2`, i.e. the\nmonomials `fourier n` on the circle considered as elements of `L²`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#coe_fourierBasis\"><span class=\"name\">coe_fourierBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/LinearIsometry.html#LinearIsometryEquiv.symm\">LinearIsometryEquiv.symm</a> <span class=\"fn\"><span class=\"fn\">fourierBasis</span>.repr</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/lpSpace.html#lp.single\">lp.single</a> <span class=\"fn\">2</span> <span class=\"fn\">i</span> <span class=\"fn\">1</span></span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp\">fourierLp</a> <span class=\"fn\">2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L435-L436","name":"fourierBasis","line":435,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierBasis","doc":"We define `fourierBasis` to be a `ℤ`-indexed Hilbert basis for `Lp ℂ 2 haarAddCircle`,\nwhich by definition is an isometric isomorphism from `Lp ℂ 2 haarAddCircle` to `ℓ²(ℤ, ℂ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierBasis\"><span class=\"name\">fourierBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/l2Space.html#HilbertBasis\">HilbertBasis</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSpace.html#MeasureTheory.Lp\">MeasureTheory.Lp</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L418-L426","name":"fourierCoeff_liftIco_eq","line":418,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_liftIco_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_liftIco_eq\"><span class=\"name\">fourierCoeff_liftIco_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle.liftIco\">AddCircle.liftIco</a> <span class=\"fn\">T</span> <span class=\"fn\">a</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">T</span></span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L408-L415","name":"fourierCoeff_liftIoc_eq","line":408,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_liftIoc_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_liftIoc_eq\"><span class=\"name\">fourierCoeff_liftIoc_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle.liftIoc\">AddCircle.liftIoc</a> <span class=\"fn\">T</span> <span class=\"fn\">a</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">T</span></span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L403-L405","name":"fourierCoeffOn.const_mul","line":403,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn.const_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn.const_mul\"><span class=\"name\">fourierCoeffOn</span>.<span class=\"name\">const_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L397-L400","name":"fourierCoeffOn.const_smul","line":397,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn.const_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn.const_smul\"><span class=\"name\">fourierCoeffOn</span>.<span class=\"name\">const_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L385-L394","name":"fourierCoeffOn_eq_integral","line":385,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn_eq_integral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn_eq_integral\"><span class=\"name\">fourierCoeffOn_eq_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\">fourierCoeffOn</a> <span class=\"fn\">hab</span> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">∫ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\">a</span>..<span class=\"fn\">b</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L380-L382","name":"fourierCoeffOn","line":380,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn","doc":"For a function on `ℝ`, the Fourier coefficients of `f` on `[a, b]` are defined as the\nFourier coefficients of the unique periodic function agreeing with `f` on `Ioc a b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeffOn\"><span class=\"name\">fourierCoeffOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L373-L375","name":"fourierCoeff.const_mul","line":373,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff.const_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff.const_mul\"><span class=\"name\">fourierCoeff</span>.<span class=\"name\">const_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L367-L370","name":"fourierCoeff.const_smul","line":367,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff.const_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff.const_smul\"><span class=\"name\">fourierCoeff</span>.<span class=\"name\">const_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L357-L364","name":"fourierCoeff_eq_intervalIntegral","line":357,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_eq_intervalIntegral","doc":"The Fourier coefficients of a function on `AddCircle T` can be computed as an integral\nover `[a, a + T]`, for any real `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff_eq_intervalIntegral\"><span class=\"name\">fourierCoeff_eq_intervalIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\">fourierCoeff</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">∫ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\">a</span>..<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">T</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L351-L352","name":"fourierCoeff","line":351,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff","doc":"The `n`-th Fourier coefficient of a function `AddCircle T → E`, for `E` a complete normed\n`ℂ`-vector space, defined as the integral over `AddCircle T` of `fourier (-n) t • f t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierCoeff\"><span class=\"name\">fourierCoeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L321-L335","name":"orthonormal_fourier","line":321,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#orthonormal_fourier","doc":"The monomials `fourier n` are an orthonormal set with respect to normalised Haar measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#orthonormal_fourier\"><span class=\"name\">orthonormal_fourier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/InnerProductSpace/Basic.html#Orthonormal\">Orthonormal</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp\">fourierLp</a> <span class=\"fn\">2</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L310-L316","name":"span_fourierLp_closure_eq_top","line":310,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#span_fourierLp_closure_eq_top","doc":"For each `1 ≤ p < ∞`, the linear span of the monomials `fourier n` is dense in\n`Lp ℂ p haarAddCircle`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#span_fourierLp_closure_eq_top\"><span class=\"name\">span_fourierLp_closure_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#Submodule.topologicalClosure\">Submodule.topologicalClosure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp\">fourierLp</a> <span class=\"fn\">p</span></span>)</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L302-L304","name":"coeFn_fourierLp","line":302,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#coeFn_fourierLp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#coeFn_fourierLp\"><span class=\"name\">coeFn_fourierLp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp\">fourierLp</a> <span class=\"fn\">p</span> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure.ae\">MeasureTheory.Measure.ae</a> <span class=\"fn\">AddCircle.haarAddCircle</span></span><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L297-L298","name":"fourierLp","line":297,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp","doc":"The family of monomials `fourier n`, parametrized by `n : ℤ` and considered as\nelements of the `Lp` space of functions `AddCircle T → ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierLp\"><span class=\"name\">fourierLp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSpace.html#MeasureTheory.Lp\">MeasureTheory.Lp</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">p</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L289-L292","name":"span_fourier_closure_eq_top","line":289,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#span_fourier_closure_eq_top","doc":"The linear span of the monomials `fourier n` is dense in `C(AddCircle T, ℂ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#span_fourier_closure_eq_top\"><span class=\"name\">span_fourier_closure_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#Submodule.topologicalClosure\">Submodule.topologicalClosure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fourier</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L283-L285","name":"fourierSubalgebra_closure_eq_top","line":283,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra_closure_eq_top","doc":"The subalgebra of `C(AddCircle T, ℂ)` generated by `fourier n` for `n ∈ ℤ` is dense. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra_closure_eq_top\"><span class=\"name\">fourierSubalgebra_closure_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/StarSubalgebra.html#StarSubalgebra.topologicalClosure\">StarSubalgebra.topologicalClosure</a> <span class=\"fn\">fourierSubalgebra</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L273-L279","name":"fourierSubalgebra_separatesPoints","line":273,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra_separatesPoints","doc":"The subalgebra of `C(AddCircle T, ℂ)` generated by `fourier n` for `n ∈ ℤ`\nseparates points. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra_separatesPoints\"><span class=\"name\">fourierSubalgebra_separatesPoints</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Algebra.html#Subalgebra.SeparatesPoints\">Subalgebra.SeparatesPoints</a> <span class=\"fn\"><span class=\"fn\">fourierSubalgebra</span>.toSubalgebra</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L252-L262","name":"fourierSubalgebra_coe","line":252,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra_coe","doc":"The star subalgebra of `C(AddCircle T, ℂ)` generated by `fourier n` for `n ∈ ℤ` is in fact the\nlinear span of these functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra_coe\"><span class=\"name\">fourierSubalgebra_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Subalgebra.toSubmodule</span> <span class=\"fn\"><span class=\"fn\">fourierSubalgebra</span>.toSubalgebra</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span.html#Submodule.span\">Submodule.span</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">fourier</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L239-L246","name":"fourierSubalgebra","line":239,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra","doc":"The star subalgebra of `C(AddCircle T, ℂ)` generated by `fourier n` for `n ∈ ℤ` . "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourierSubalgebra\"><span class=\"name\">fourierSubalgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Subalgebra.html#StarSubalgebra\">StarSubalgebra</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L226-L235","name":"fourier_add_half_inv_index","line":226,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_add_half_inv_index","doc":"For `n ≠ 0`, a translation by `T / 2 / n` negates the function `fourier n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_add_half_inv_index\"><span class=\"name\">fourier_add_half_inv_index</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L218-L222","name":"fourier_norm","line":218,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_norm\"><span class=\"name\">fourier_norm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L214-L216","name":"fourier_add'","line":214,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_add'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_add'\"><span class=\"name\">fourier_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L209-L210","name":"fourier_add","line":209,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_add\"><span class=\"name\">fourier_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L205-L206","name":"fourier_neg'","line":205,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_neg'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_neg'\"><span class=\"name\">fourier_neg'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L196-L201","name":"fourier_neg","line":196,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_neg\"><span class=\"name\">fourier_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L192-L192","name":"fourier_one","line":192,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_one\"><span class=\"name\">fourier_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L186-L188","name":"fourier_eval_zero","line":186,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_eval_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_eval_zero\"><span class=\"name\">fourier_eval_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L181-L183","name":"fourier_zero'","line":181,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_zero'\"><span class=\"name\">fourier_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L174-L177","name":"fourier_zero","line":174,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_zero\"><span class=\"name\">fourier_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L169-L171","name":"fourier_coe_apply'","line":169,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_coe_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_coe_apply'\"><span class=\"name\">fourier_coe_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">T</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L159-L165","name":"fourier_coe_apply","line":159,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_coe_apply\"><span class=\"name\">fourier_coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">T</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L154-L155","name":"fourier_apply","line":154,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier_apply\"><span class=\"name\">fourier_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\">fourier</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L148-L150","name":"fourier","line":148,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#fourier","doc":"The family of exponential monomials `fun x => exp (2 π i n x / T)`, parametrized by `n : ℤ` and\nconsidered as bundled continuous maps from `ℝ / ℤ • T` to `ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#fourier\"><span class=\"name\">fourier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L135-L137","name":"AddCircle.volume_eq_smul_haarAddCircle","line":135,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.volume_eq_smul_haarAddCircle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.volume_eq_smul_haarAddCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">volume_eq_smul_haarAddCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.volume</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">T</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">AddCircle.haarAddCircle</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L132-L133","name":"AddCircle.instIsProbabilityMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealMeasurableSpaceToAddGroupToAddCommGroupToOrderedAddCommGroupMeasurableSpaceZmultiplesHaarAddCircle","line":132,"kind":"instance","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.instIsProbabilityMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealMeasurableSpaceToAddGroupToAddCommGroupToOrderedAddCommGroupMeasurableSpaceZmultiplesHaarAddCircle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.instIsProbabilityMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealMeasurableSpaceToAddGroupToAddCommGroupToOrderedAddCommGroupMeasurableSpaceZmultiplesHaarAddCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">instIsProbabilityMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealMeasurableSpaceToAddGroupToAddCommGroupToOrderedAddCommGroupMeasurableSpaceZmultiplesHaarAddCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">AddCircle.haarAddCircle</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L129-L130","name":"AddCircle.instIsAddHaarMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealAddGroupToAddGroupToAddCommGroupToOrderedAddCommGroupZmultiplesNormal_of_commInstAddCommGroupRealTopologicalSpaceMeasurableSpaceMeasurableSpaceHaarAddCircle","line":129,"kind":"instance","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.instIsAddHaarMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealAddGroupToAddGroupToAddCommGroupToOrderedAddCommGroupZmultiplesNormal_of_commInstAddCommGroupRealTopologicalSpaceMeasurableSpaceMeasurableSpaceHaarAddCircle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.instIsAddHaarMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealAddGroupToAddGroupToAddCommGroupToOrderedAddCommGroupZmultiplesNormal_of_commInstAddCommGroupRealTopologicalSpaceMeasurableSpaceMeasurableSpaceHaarAddCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">instIsAddHaarMeasureAddCircleRealInstLinearOrderedAddCommGroupRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstOrderTopologyRealToTopologicalSpaceToUniformSpacePseudoMetricSpaceInstPreorderRealAddGroupToAddGroupToAddCommGroupToOrderedAddCommGroupZmultiplesNormal_of_commInstAddCommGroupRealTopologicalSpaceMeasurableSpaceMeasurableSpaceHaarAddCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Group/Measure.html#MeasureTheory.Measure.IsAddHaarMeasure\">MeasureTheory.Measure.IsAddHaarMeasure</a> <span class=\"fn\">AddCircle.haarAddCircle</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L124-L125","name":"AddCircle.haarAddCircle","line":124,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.haarAddCircle","doc":"Haar measure on the additive circle, normalised to have total measure 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.haarAddCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">haarAddCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hT : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">T</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L102-L112","name":"AddCircle.injective_toCircle","line":102,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.injective_toCircle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.injective_toCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">injective_toCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hT : <span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">AddCircle.toCircle</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L98-L99","name":"AddCircle.continuous_toCircle","line":98,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.continuous_toCircle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.continuous_toCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">continuous_toCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">AddCircle.toCircle</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L90-L95","name":"AddCircle.toCircle_add","line":90,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle_add\"><span class=\"name\">AddCircle</span>.<span class=\"name\">toCircle_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\">AddCircle.toCircle</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L86-L87","name":"AddCircle.toCircle","line":86,"kind":"def","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle","doc":"The canonical map `fun x => exp (2 π i x / T)` from `ℝ / ℤ • T` to the unit circle in `ℂ`.\nIf `T = 0` we understand this as the constant function 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.toCircle\"><span class=\"name\">AddCircle</span>.<span class=\"name\">toCircle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">T</span></span> → <span class=\"fn\">↥<a href=\"./Mathlib/Analysis/Complex/Circle.html#circle\">circle</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Analysis/Fourier/AddCircle.lean#L77-L81","name":"AddCircle.scaled_exp_map_periodic","line":77,"kind":"theorem","docLink":"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.scaled_exp_map_periodic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Fourier/AddCircle.html#AddCircle.scaled_exp_map_periodic\"><span class=\"name\">AddCircle</span>.<span class=\"name\">scaled_exp_map_periodic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Periodic.html#Function.Periodic\">Function.Periodic</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Circle.html#expMapCircle\">expMapCircle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">T</span></span></div></div>"}]}