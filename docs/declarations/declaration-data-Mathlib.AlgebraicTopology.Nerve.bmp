{"name":"Mathlib.AlgebraicTopology.Nerve","instances":[{"typeNames":["Prefunctor.obj"],"name":"CategoryTheory.instCategoryObjOppositeSimplexCategoryToQuiverToCategoryStructOppositeSmallCategoryTypeToQuiverToCategoryStructTypesToPrefunctorNerve","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialSet","Mathlib.CategoryTheory.ComposableArrows"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L52-L52","name":"CategoryTheory.Nerve.δ₀_eq","line":52,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.Nerve.δ₀_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.Nerve.δ₀_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Nerve</span>.<span class=\"name\">δ₀_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject.html#CategoryTheory.SimplicialObject.δ\">CategoryTheory.SimplicialObject.δ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.δ₀\">CategoryTheory.ComposableArrows.δ₀</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L43-L45","name":"CategoryTheory.nerveFunctor","line":43,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor","doc":"The nerve of a category, as a functor `Cat ⥤ SSet` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nerveFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L42-L42","name":"CategoryTheory.nerveFunctor_map_app","line":42,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nerveFunctor_map_app</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>} (<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">Δ</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)\n  (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.len\">SimplexCategory.len</a> <span class=\"fn\"><span class=\"fn\">Δ</span>.unop</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor\">CategoryTheory.nerveFunctor</a>.map <span class=\"fn\">F</span></span>)</span>.app <span class=\"fn\">Δ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.Functor.mapComposableArrows\">CategoryTheory.Functor.mapComposableArrows</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.len\">SimplexCategory.len</a> <span class=\"fn\"><span class=\"fn\">Δ</span>.unop</span></span>)</span></span>)</span>.obj <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L42-L42","name":"CategoryTheory.nerveFunctor_obj","line":42,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nerveFunctor_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerveFunctor\">CategoryTheory.nerveFunctor</a>.obj <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">↑<span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L38-L39","name":"CategoryTheory.instCategoryObjOppositeSimplexCategoryToQuiverToCategoryStructOppositeSmallCategoryTypeToQuiverToCategoryStructTypesToPrefunctorNerve","line":38,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.instCategoryObjOppositeSimplexCategoryToQuiverToCategoryStructOppositeSmallCategoryTypeToQuiverToCategoryStructTypesToPrefunctorNerve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.instCategoryObjOppositeSimplexCategoryToQuiverToCategoryStructOppositeSmallCategoryTypeToQuiverToCategoryStructTypesToPrefunctorNerve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCategoryObjOppositeSimplexCategoryToQuiverToCategoryStructOppositeSmallCategoryTypeToQuiverToCategoryStructTypesToPrefunctorNerve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a>      <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, max u_1 u_2}</a>              <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span></span>)</span>.obj <span class=\"fn\">Δ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L33-L35","name":"CategoryTheory.nerve","line":33,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve","doc":"The nerve of a category "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nerve</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L32-L32","name":"CategoryTheory.nerve_map","line":32,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nerve_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.len\">SimplexCategory.len</a> <span class=\"fn\"><span class=\"fn\">X</span>.unop</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span></span>)</span>.map <span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.whiskerLeft\">CategoryTheory.ComposableArrows.whiskerLeft</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.toCat\">SimplexCategory.toCat</a>.map <span class=\"fn\"><span class=\"fn\">f</span>.unop</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/AlgebraicTopology/Nerve.lean#L32-L32","name":"CategoryTheory.nerve_obj","line":32,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">nerve_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Δ : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span></span>)</span>.obj <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows\">CategoryTheory.ComposableArrows</a> <span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory.html#SimplexCategory.len\">SimplexCategory.len</a> <span class=\"fn\"><span class=\"fn\">Δ</span>.unop</span></span>)</span></span></span></div></div>"}]}