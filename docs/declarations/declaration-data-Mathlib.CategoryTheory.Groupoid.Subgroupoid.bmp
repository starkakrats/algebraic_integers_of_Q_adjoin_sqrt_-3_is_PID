{"name":"Mathlib.CategoryTheory.Groupoid.Subgroupoid","instances":[{"typeNames":["Set.Elem"],"name":"CategoryTheory.Subgroupoid.coe","className":"CategoryTheory.Groupoid"},{"typeNames":["CategoryTheory.Subgroupoid","Sigma"],"name":"CategoryTheory.Subgroupoid.instSetLikeSubgroupoidSigmaSigmaHomToQuiverToCategoryStructToCategory","className":"SetLike"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instTopSubgroupoid","className":"Top"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instBotSubgroupoid","className":"Bot"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instInhabitedSubgroupoid","className":"Inhabited"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instInfSubgroupoid","className":"Inf"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instInfSetSubgroupoid","className":"InfSet"},{"typeNames":["CategoryTheory.Subgroupoid"],"name":"CategoryTheory.Subgroupoid.instCompleteLatticeSubgroupoid","className":"CompleteLattice"}],"imports":["Init","Mathlib.CategoryTheory.Groupoid.VertexGroup","Mathlib.CategoryTheory.Groupoid.Basic","Mathlib.CategoryTheory.Groupoid","Mathlib.Algebra.Group.Defs","Mathlib.Data.Set.Lattice","Mathlib.GroupTheory.Subgroup.Basic","Mathlib.Order.GaloisConnection"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L702-L704","name":"CategoryTheory.Subgroupoid.full_arrow_eq_iff","line":702,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_arrow_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_arrow_eq_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_arrow_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">D</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">D</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L694-L698","name":"CategoryTheory.Subgroupoid.full_mono","line":694,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">E</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L689-L691","name":"CategoryTheory.Subgroupoid.full_univ","line":689,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_univ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L683-L685","name":"CategoryTheory.Subgroupoid.full_empty","line":683,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_empty\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L679-L679","name":"CategoryTheory.Subgroupoid.mem_full_objs_iff","line":679,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_full_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">D</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L674-L675","name":"CategoryTheory.Subgroupoid.mem_full_iff","line":674,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_full_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_full_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L669-L670","name":"CategoryTheory.Subgroupoid.full_objs","line":669,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\">CategoryTheory.Subgroupoid.full</a> <span class=\"fn\">D</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L663-L666","name":"CategoryTheory.Subgroupoid.full","line":663,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full","doc":"The full subgroupoid on a set `D : Set C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.full\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">full</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L652-L653","name":"CategoryTheory.Subgroupoid.disconnect_isTotallyDisconnected","line":652,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_isTotallyDisconnected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_isTotallyDisconnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_isTotallyDisconnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected\">CategoryTheory.Subgroupoid.IsTotallyDisconnected</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">CategoryTheory.Subgroupoid.disconnect</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L649-L649","name":"CategoryTheory.Subgroupoid.disconnect_objs","line":649,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">CategoryTheory.Subgroupoid.disconnect</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L645-L646","name":"CategoryTheory.Subgroupoid.mem_disconnect_objs_iff","line":645,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_disconnect_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_disconnect_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_disconnect_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">CategoryTheory.Subgroupoid.disconnect</a> <span class=\"fn\">S</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L639-L641","name":"CategoryTheory.Subgroupoid.disconnect_normal","line":639,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_normal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">CategoryTheory.Subgroupoid.disconnect</a> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L636-L636","name":"CategoryTheory.Subgroupoid.disconnect_le","line":636,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\">CategoryTheory.Subgroupoid.disconnect</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L630-L633","name":"CategoryTheory.Subgroupoid.disconnect","line":630,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect","doc":"The isotropy subgroupoid of `S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.disconnect\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">disconnect</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L618-L626","name":"CategoryTheory.Subgroupoid.isTotallyDisconnected_iff","line":618,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isTotallyDisconnected_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isTotallyDisconnected_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isTotallyDisconnected_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected\">CategoryTheory.Subgroupoid.IsTotallyDisconnected</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L614-L615","name":"CategoryTheory.Subgroupoid.IsTotallyDisconnected","line":614,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected","doc":"A subgroupoid `IsTotallyDisconnected` if it has only isotropy arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsTotallyDisconnected\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsTotallyDisconnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L606-L606","name":"CategoryTheory.Subgroupoid.isThin_iff","line":606,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isThin_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isThin_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isThin_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsThin\">CategoryTheory.Subgroupoid.IsThin</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>), <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">↑<span class=\"fn\">c</span></span> <span class=\"fn\">↑<span class=\"fn\">c</span></span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L602-L603","name":"CategoryTheory.Subgroupoid.IsThin","line":602,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsThin","doc":"A subgroupoid is thin (`CategoryTheory.Subgroupoid.IsThin`) if it has at most one arrow between\nany two vertices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsThin\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsThin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L574-L593","name":"CategoryTheory.Subgroupoid.isNormal_map","line":574,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isNormal_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">CategoryTheory.Subgroupoid.im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L567-L571","name":"CategoryTheory.Subgroupoid.obj_surjective_of_im_eq_top","line":567,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.obj_surjective_of_im_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.obj_surjective_of_im_eq_top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">obj_surjective_of_im_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ' : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">CategoryTheory.Subgroupoid.im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L562-L564","name":"CategoryTheory.Subgroupoid.mem_im_objs_iff","line":562,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_im_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">CategoryTheory.Subgroupoid.im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (c : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L555-L559","name":"CategoryTheory.Subgroupoid.mem_im_iff","line":555,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_im_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_im_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\">CategoryTheory.Subgroupoid.im</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (a : <span class=\"fn\">C</span>) (b : <span class=\"fn\">C</span>) (g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>) (ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>) (hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span>),\n    <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">a</span></span></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">hb</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L551-L552","name":"CategoryTheory.Subgroupoid.im","line":551,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im","doc":"The image of a functor injective on objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.im\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L546-L547","name":"CategoryTheory.Subgroupoid.map_objs_eq","line":546,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_objs_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_objs_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_objs_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L533-L542","name":"CategoryTheory.Subgroupoid.mem_map_objs_iff","line":533,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_objs_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_objs_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_map_objs_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ c ∈ <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L528-L530","name":"CategoryTheory.Subgroupoid.map_le_iff_le_comap","line":528,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_le_iff_le_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_le_iff_le_comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_le_iff_le_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L523-L525","name":"CategoryTheory.Subgroupoid.map_comap_le","line":523,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_comap_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">T</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L518-L520","name":"CategoryTheory.Subgroupoid.le_comap_map","line":518,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_comap_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_comap_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">le_comap_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L514-L515","name":"CategoryTheory.Subgroupoid.map_mono","line":514,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L506-L511","name":"CategoryTheory.Subgroupoid.galoisConnection_map_comap","line":506,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.galoisConnection_map_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.galoisConnection_map_comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">galoisConnection_map_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/GaloisConnection.html#GaloisConnection\">GaloisConnection</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L499-L503","name":"CategoryTheory.Subgroupoid.mem_map_iff","line":499,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_map_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\">CategoryTheory.Subgroupoid.map</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (a : <span class=\"fn\">C</span>) (b : <span class=\"fn\">C</span>) (g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>) (ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>) (hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span>) (_ : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>),\n    <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">a</span></span></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">hb</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L486-L496","name":"CategoryTheory.Subgroupoid.map","line":486,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map","doc":"The \"forward\" image of a subgroupoid under a functor injective on objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L476-L482","name":"CategoryTheory.Subgroupoid.Map.arrows_iff","line":476,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.arrows_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.arrows_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Map</span>.<span class=\"name\">arrows_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">D</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows\">CategoryTheory.Subgroupoid.Map.Arrows</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (a : <span class=\"fn\">C</span>) (b : <span class=\"fn\">C</span>) (g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>) (ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>) (hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span>) (_ : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>),\n    <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">a</span></span></span>)</span></span>)</span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.map <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">hb</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L473-L473","name":"CategoryTheory.Subgroupoid.Map.Arrows.im","line":473,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows.im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows.im\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Map</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows\">CategoryTheory.Subgroupoid.Map.Arrows</a> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">S</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">d</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.map <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L472-L473","name":"CategoryTheory.Subgroupoid.Map.Arrows","line":472,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows","doc":"The family of arrows of the image of a subgroupoid under a functor injective on objects "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Map.Arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Map</span>.<span class=\"name\">Arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hφ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L467-L468","name":"CategoryTheory.Subgroupoid.ker_comp","line":467,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ker_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">CategoryTheory.Subgroupoid.ker</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">CategoryTheory.Subgroupoid.ker</a> <span class=\"fn\">ψ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L462-L463","name":"CategoryTheory.Subgroupoid.ker_isNormal","line":462,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ker_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">CategoryTheory.Subgroupoid.ker</a> <span class=\"fn\">φ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L457-L459","name":"CategoryTheory.Subgroupoid.mem_ker_iff","line":457,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_ker_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_ker_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_ker_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\">CategoryTheory.Subgroupoid.ker</a> <span class=\"fn\">φ</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span>.obj <span class=\"fn\">d</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L453-L454","name":"CategoryTheory.Subgroupoid.ker","line":453,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker","doc":"The kernel of a functor between subgroupoid is the preimage. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ker\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L448-L449","name":"CategoryTheory.Subgroupoid.comap_comp","line":448,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">comap_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ψ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">ψ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">ψ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L440-L444","name":"CategoryTheory.Subgroupoid.isNormal_comap","line":440,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isNormal_comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isNormal_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">S</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L436-L437","name":"CategoryTheory.Subgroupoid.comap_mono","line":436,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">comap_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\">CategoryTheory.Subgroupoid.comap</a> <span class=\"fn\">φ</span> <span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L427-L433","name":"CategoryTheory.Subgroupoid.comap","line":427,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap","doc":"A functor between groupoid defines a map of subgroupoids in the reverse direction\nby taking preimages.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.comap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(φ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L406-L415","name":"CategoryTheory.Subgroupoid.IsNormal.generatedNormal_le","line":406,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.generatedNormal_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.generatedNormal_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">generatedNormal_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\">CategoryTheory.Subgroupoid.generatedNormal</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L402-L403","name":"CategoryTheory.Subgroupoid.generatedNormal_isNormal","line":402,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generatedNormal_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\">CategoryTheory.Subgroupoid.generatedNormal</a> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L397-L399","name":"CategoryTheory.Subgroupoid.generated_le_generatedNormal","line":397,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated_le_generatedNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated_le_generatedNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generated_le_generatedNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated\">CategoryTheory.Subgroupoid.generated</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\">CategoryTheory.Subgroupoid.generatedNormal</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L393-L394","name":"CategoryTheory.Subgroupoid.generatedNormal","line":393,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal","doc":"The normal sugroupoid generated by the set of arrows `X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generatedNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generatedNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L386-L389","name":"CategoryTheory.Subgroupoid.subset_generated","line":386,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.subset_generated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.subset_generated\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">subset_generated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated\">CategoryTheory.Subgroupoid.generated</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L382-L383","name":"CategoryTheory.Subgroupoid.generated","line":382,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated","doc":"The subgropoid generated by the set of arrows `X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.generated\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">generated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L371-L373","name":"CategoryTheory.Subgroupoid.IsNormal.vertexSubgroup","line":371,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.vertexSubgroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.vertexSubgroup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">vertexSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cS : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.vertexSubgroup\">CategoryTheory.Subgroupoid.vertexSubgroup</a> <span class=\"fn\">S</span> <span class=\"fn\">cS</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L364-L368","name":"CategoryTheory.Subgroupoid.discrete_isNormal","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">discrete_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">CategoryTheory.Subgroupoid.discrete</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L359-L361","name":"CategoryTheory.Subgroupoid.sInf_isNormal","line":359,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.sInf_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.sInf_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">sInf_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sn : <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L354-L356","name":"CategoryTheory.Subgroupoid.top_isNormal","line":354,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.top_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.top_isNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">top_isNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L344-L351","name":"CategoryTheory.Subgroupoid.IsNormal.conjugation_bij","line":344,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conjugation_bij","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conjugation_bij\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">conjugation_bij</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.BijOn\">Set.BijOn</a>\n  <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">γ</span> : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">p</span></span>)</span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L339-L341","name":"CategoryTheory.Subgroupoid.IsNormal.conj'","line":339,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">conj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Sn : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{γ : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L336-L336","name":"CategoryTheory.Subgroupoid.IsNormal.conj","line":336,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.conj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{γ : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L335-L335","name":"CategoryTheory.Subgroupoid.IsNormal.mk","line":335,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toIsWide : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">CategoryTheory.Subgroupoid.IsWide</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(conj : <span class=\"fn\">∀ {<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>} (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>) {<span class=\"fn\">γ</span> : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">γ</span> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\">CategoryTheory.Subgroupoid.IsNormal</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L335-L336","name":"CategoryTheory.Subgroupoid.IsNormal","line":335,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal","doc":"A subgroupoid is normal if it is wide and satisfies the expected stability under conjugacy. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsNormal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsNormal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L330-L331","name":"CategoryTheory.Subgroupoid.IsWide.eqToHom_mem","line":330,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.eqToHom_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.eqToHom_mem\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">eqToHom_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Sw : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">CategoryTheory.Subgroupoid.IsWide</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L326-L327","name":"CategoryTheory.Subgroupoid.IsWide.id_mem","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.id_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.id_mem\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">id_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Sw : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">CategoryTheory.Subgroupoid.IsWide</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L315-L323","name":"CategoryTheory.Subgroupoid.isWide_iff_objs_eq_univ","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isWide_iff_objs_eq_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.isWide_iff_objs_eq_univ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">isWide_iff_objs_eq_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">CategoryTheory.Subgroupoid.IsWide</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L312-L312","name":"CategoryTheory.Subgroupoid.IsWide.wide","line":312,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.wide","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.wide\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">wide</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">CategoryTheory.Subgroupoid.IsWide</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L311-L311","name":"CategoryTheory.Subgroupoid.IsWide.mk","line":311,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(wide : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\">CategoryTheory.Subgroupoid.IsWide</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L311-L312","name":"CategoryTheory.Subgroupoid.IsWide","line":311,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide","doc":"A subgroupoid is wide if its carrier set is all of `C`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.IsWide\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">IsWide</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L305-L307","name":"CategoryTheory.Subgroupoid.mem_discrete_iff","line":305,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_discrete_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_discrete_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_discrete_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">CategoryTheory.Subgroupoid.discrete</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L299-L302","name":"CategoryTheory.Subgroupoid.discrete","line":299,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete","doc":"The only arrows of the discrete groupoid are the identity arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.discrete\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">discrete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L295-L295","name":"CategoryTheory.Subgroupoid.Discrete.Arrows.id","line":295,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Discrete</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows\">CategoryTheory.Subgroupoid.Discrete.Arrows</a> <span class=\"fn\">c</span> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L294-L295","name":"CategoryTheory.Subgroupoid.Discrete.Arrows","line":294,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows","doc":"The family of arrows of the discrete groupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.Discrete.Arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">Discrete</span>.<span class=\"name\">Arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L289-L290","name":"CategoryTheory.Subgroupoid.inclusion_comp_embedding","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_comp_embedding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_comp_embedding\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_comp_embedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">h</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">CategoryTheory.Subgroupoid.hom</a> <span class=\"fn\">T</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">CategoryTheory.Subgroupoid.hom</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L284-L286","name":"CategoryTheory.Subgroupoid.inclusion_trans","line":284,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_trans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">k</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">h</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L280-L281","name":"CategoryTheory.Subgroupoid.inclusion_refl","line":280,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_refl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L274-L277","name":"CategoryTheory.Subgroupoid.inclusion_faithful","line":274,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_faithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_faithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">h</span></span>)</span>.map <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L269-L271","name":"CategoryTheory.Subgroupoid.inclusion_inj_on_objects","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_inj_on_objects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion_inj_on_objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion_inj_on_objects</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\">CategoryTheory.Subgroupoid.inclusion</a> <span class=\"fn\">h</span></span>)</span>.toPrefunctor</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L262-L266","name":"CategoryTheory.Subgroupoid.inclusion","line":262,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion","doc":"The functor associated to the embedding of subgroupoids "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">T</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L257-L258","name":"CategoryTheory.Subgroupoid.le_objs","line":257,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">le_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L244-L255","name":"CategoryTheory.Subgroupoid.instCompleteLatticeSubgroupoid","line":244,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instCompleteLatticeSubgroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instCompleteLatticeSubgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instCompleteLatticeSubgroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L240-L242","name":"CategoryTheory.Subgroupoid.mem_sInf","line":240,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_sInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\">(c : <span class=\"fn\">C</span>) × <span class=\"fn\">(d : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L236-L238","name":"CategoryTheory.Subgroupoid.mem_sInf_arrows","line":236,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf_arrows","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_sInf_arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_sInf_arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">S</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L227-L233","name":"CategoryTheory.Subgroupoid.instInfSetSubgroupoid","line":227,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInfSetSubgroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInfSetSubgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instInfSetSubgroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet\">InfSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L221-L225","name":"CategoryTheory.Subgroupoid.instInfSubgroupoid","line":221,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInfSubgroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInfSubgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instInfSubgroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Inf\">Inf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L218-L219","name":"CategoryTheory.Subgroupoid.instInhabitedSubgroupoid","line":218,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInhabitedSubgroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instInhabitedSubgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instInhabitedSubgroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L213-L216","name":"CategoryTheory.Subgroupoid.instBotSubgroupoid","line":213,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instBotSubgroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instBotSubgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instBotSubgroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L208-L210","name":"CategoryTheory.Subgroupoid.mem_top_objs","line":208,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top_objs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top_objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_top_objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L204-L205","name":"CategoryTheory.Subgroupoid.mem_top","line":204,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_top\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L199-L202","name":"CategoryTheory.Subgroupoid.instTopSubgroupoid","line":199,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instTopSubgroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instTopSubgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instTopSubgroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L195-L196","name":"CategoryTheory.Subgroupoid.le_iff","line":195,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.le_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">T</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ {<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">T</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L191-L192","name":"CategoryTheory.Subgroupoid.mem_iff","line":191,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\">(c : <span class=\"fn\">C</span>) × <span class=\"fn\">(d : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.snd</span>.snd</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">F</span>.fst</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.snd</span>.fst</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L187-L189","name":"CategoryTheory.Subgroupoid.instSetLikeSubgroupoidSigmaSigmaHomToQuiverToCategoryStructToCategory","line":187,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instSetLikeSubgroupoidSigmaSigmaHomToQuiverToCategoryStructToCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.instSetLikeSubgroupoidSigmaSigmaHomToQuiverToCategoryStructToCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">instSetLikeSubgroupoidSigmaSigmaHomToQuiverToCategoryStructToCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">(c : <span class=\"fn\">C</span>) × <span class=\"fn\">(d : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L184-L185","name":"CategoryTheory.Subgroupoid.toSet","line":184,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.toSet","doc":"The set of all arrows of a subgroupoid, as a set in `Σ c d : C, c ⟶ d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.toSet\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">toSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">(c : <span class=\"fn\">C</span>) × <span class=\"fn\">(d : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L176-L180","name":"CategoryTheory.Subgroupoid.vertexSubgroup","line":176,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.vertexSubgroup","doc":"The subgroup of the vertex group at `c` given by the subgroupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.vertexSubgroup\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">vertexSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L171-L172","name":"CategoryTheory.Subgroupoid.hom.faithful","line":171,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.faithful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">hom</span>.<span class=\"name\">faithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">CategoryTheory.Subgroupoid.hom</a> <span class=\"fn\">S</span></span>)</span>.map <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L166-L168","name":"CategoryTheory.Subgroupoid.hom.inj_on_objects","line":166,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.inj_on_objects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom.inj_on_objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">hom</span>.<span class=\"name\">inj_on_objects</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\">CategoryTheory.Subgroupoid.hom</a> <span class=\"fn\">S</span></span>)</span>.toPrefunctor</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L159-L163","name":"CategoryTheory.Subgroupoid.hom","line":159,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom","doc":"The embedding of the coerced subgroupoid to its parent"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L153-L155","name":"CategoryTheory.Subgroupoid.coe_inv_coe'","line":153,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe_inv_coe'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">CategoryTheory.inv</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.inv\">CategoryTheory.inv</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L145-L149","name":"CategoryTheory.Subgroupoid.coe","line":145,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe","doc":"The coercion of a subgroupoid as a groupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L144-L144","name":"CategoryTheory.Subgroupoid.coe_inv_coe","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_inv_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe_inv_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>} (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L144-L144","name":"CategoryTheory.Subgroupoid.coe_comp_coe","line":144,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_comp_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.coe_comp_coe\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">coe_comp_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span>Y Z : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span>)</span></span>} (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>),\n  <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L139-L140","name":"CategoryTheory.Subgroupoid.asWideQuiver","line":139,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.asWideQuiver","doc":"A subgroupoid seen as a quiver on vertex set `C` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.asWideQuiver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">asWideQuiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L134-L135","name":"CategoryTheory.Subgroupoid.id_mem_of_tgt","line":134,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_tgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_tgt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">id_mem_of_tgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L130-L131","name":"CategoryTheory.Subgroupoid.id_mem_of_src","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_src","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_src\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">id_mem_of_src</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L124-L127","name":"CategoryTheory.Subgroupoid.id_mem_of_nonempty_isotropy","line":124,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_nonempty_isotropy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.id_mem_of_nonempty_isotropy\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">id_mem_of_nonempty_isotropy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L120-L121","name":"CategoryTheory.Subgroupoid.mem_objs_of_tgt","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_tgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_tgt\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_objs_of_tgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L116-L117","name":"CategoryTheory.Subgroupoid.mem_objs_of_src","line":116,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_src","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mem_objs_of_src\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mem_objs_of_src</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\">CategoryTheory.Subgroupoid.objs</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L112-L113","name":"CategoryTheory.Subgroupoid.objs","line":112,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs","doc":"The vertices of `C` on which `S` has non-trivial isotropy "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.objs\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">objs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L101-L108","name":"CategoryTheory.Subgroupoid.mul_mem_cancel_right","line":101,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mul_mem_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L91-L98","name":"CategoryTheory.Subgroupoid.mul_mem_cancel_left","line":91,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul_mem_cancel_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mul_mem_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L83-L88","name":"CategoryTheory.Subgroupoid.inv_mem_iff","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv_mem_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv_mem_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inv_mem_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">d</span> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">S</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L76-L76","name":"CategoryTheory.Subgroupoid.mul","line":76,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mul\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">self</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> →\n  <span class=\"fn\">∀ {<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span></span>},\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">self</span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span></span> →\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">self</span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L75-L75","name":"CategoryTheory.Subgroupoid.inv","line":75,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{d : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">self</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\">CategoryTheory.Subgroupoid.arrows</a> <span class=\"fn\">self</span> <span class=\"fn\">d</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L74-L74","name":"CategoryTheory.Subgroupoid.arrows","line":74,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.arrows\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">arrows</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L73-L73","name":"CategoryTheory.Subgroupoid.mk","line":73,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(arrows : <span class=\"fn\">(<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>) → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inv : <span class=\"fn\">∀ {<span class=\"fn\">c </span>d : <span class=\"fn\">C</span>} {<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid.inv\">CategoryTheory.Groupoid.inv</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">d</span> <span class=\"fn\">c</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mul : <span class=\"fn\">∀ {<span class=\"fn\">c </span>d e : <span class=\"fn\">C</span>} {<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>},\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span></span> → <span class=\"fn\">∀ {<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">e</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">arrows</span> <span class=\"fn\">c</span> <span class=\"fn\">e</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L73-L76","name":"CategoryTheory.Subgroupoid","line":73,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid","doc":"A sugroupoid of `C` consists of a choice of arrows for each pair of vertices, closed\nunder composition and inverses.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u u_1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L72-L72","name":"CategoryTheory.Subgroupoid.ext_iff","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>} (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.arrows</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.arrows</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Groupoid/Subgroupoid.lean#L72-L72","name":"CategoryTheory.Subgroupoid.ext","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subgroupoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">CategoryTheory.Groupoid</a> <span class=\"fn\">C</span></span>} (<span class=\"fn\">x </span>y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/Subgroupoid.html#CategoryTheory.Subgroupoid\">CategoryTheory.Subgroupoid</a> <span class=\"fn\">C</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.arrows</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.arrows</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></span></div></div>"}]}