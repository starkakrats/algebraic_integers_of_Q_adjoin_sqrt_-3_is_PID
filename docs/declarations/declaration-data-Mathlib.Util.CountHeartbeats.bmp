{"name":"Mathlib.Util.CountHeartbeats","instances":[],"imports":["Init","Std.Lean.CoreM","Std.Tactic.TryThis"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Util/CountHeartbeats.lean#L27-L62","name":"Mathlib.CountHeartbeats.commandCount_heartbeatsIn__","line":27,"kind":"def","docLink":"./Mathlib/Util/CountHeartbeats.html#Mathlib.CountHeartbeats.commandCount_heartbeatsIn__","doc":"Count the heartbeats used in the enclosed command.\n\nThis is most useful for setting sufficient but reasonable limits via `set_option maxHeartbeats`\nfor long running declarations.\n\nIf you do so, please resist the temptation to set the limit as low as possible.\nAs the `simp` set and other features of the library evolve,\nother contributors will find that their (likely unrelated) changes\nhave pushed the declaration over the limit.\n`count_heartbearts in` will automatically suggest a `set_option maxHeartbeats` via \"Try this:\"\nusing the least number of the form `2^k * 200000` that suffices.\n\nNote that that internal heartbeat counter accessible via `IO.getNumHeartbeats`\nhas granularity 1000 times finer that the limits set by `set_option maxHeartbeats`.\nAs this is intended as a user command, we divide by 1000.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/CountHeartbeats.html#Mathlib.CountHeartbeats.commandCount_heartbeatsIn__\"><span class=\"name\">Mathlib</span>.<span class=\"name\">CountHeartbeats</span>.<span class=\"name\">commandCount_heartbeatsIn__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}