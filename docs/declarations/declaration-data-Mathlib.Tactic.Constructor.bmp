{"name":"Mathlib.Tactic.Constructor","instances":[],"imports":["Init","Lean.Elab.SyntheticMVars","Lean.Meta.Tactic.Constructor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Constructor.lean#L21-L29","name":"tacticEconstructor","line":21,"kind":"def","docLink":"./Mathlib/Tactic/Constructor.html#tacticEconstructor","doc":"`econstructor` is like `constructor`\n(it calls `apply` using the first matching constructor of an inductive datatype)\nexcept only non-dependent premises are added as new goals.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Constructor.html#tacticEconstructor\"><span class=\"name\">tacticEconstructor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/Constructor.lean#L11-L19","name":"tacticFconstructor","line":11,"kind":"def","docLink":"./Mathlib/Tactic/Constructor.html#tacticFconstructor","doc":"`fconstructor` is like `constructor`\n(it calls `apply` using the first matching constructor of an inductive datatype)\nexcept that it does not reorder goals.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Constructor.html#tacticFconstructor\"><span class=\"name\">tacticFconstructor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}