{"name":"Mathlib.CategoryTheory.Galois.Examples","instances":[{"typeNames":["CategoryTheory.FintypeCat.Action.imageComplementIncl"],"name":"CategoryTheory.FintypeCat.instMonoActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionImageComplementImageComplementIncl","className":"CategoryTheory.Mono"},{"typeNames":["CategoryTheory.SingleObj","FintypeCat"],"name":"CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjCategoryToMonoidToDivInvMonoidFintypeCatInstCategoryFintypeCat","className":"CategoryTheory.Limits.HasColimitsOfShape"},{"typeNames":["CategoryTheory.forget"],"name":"CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionTypeTypesForgetInstConcreteCategoryActionInstCategoryActionConcreteCategoryFintype","className":"CategoryTheory.Limits.PreservesFiniteLimits"},{"typeNames":["Action"],"name":"CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryAction","className":"CategoryTheory.PreGaloisCategory"},{"typeNames":["Action.forget"],"name":"CategoryTheory.FintypeCat.instFibreFunctorActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionInstPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionForget","className":"CategoryTheory.PreGaloisCategory.FibreFunctor"}],"imports":["Init","Mathlib.CategoryTheory.Galois.Basic","Mathlib.RepresentationTheory.Action.Basic","Mathlib.RepresentationTheory.Action.Limits","Mathlib.CategoryTheory.Limits.FintypeCat","Mathlib.CategoryTheory.Limits.Shapes.Types","Mathlib.Logic.Equiv.TransferInstance"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L96-L99","name":"CategoryTheory.FintypeCat.instFibreFunctorActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionInstPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionForget","line":96,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instFibreFunctorActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionInstPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionForget","doc":"The forgetful functor from finite `G`-sets to sets is a `FibreFunctor`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instFibreFunctorActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionInstPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionForget\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instFibreFunctorActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionInstPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionForget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory.FibreFunctor\">CategoryTheory.PreGaloisCategory.FibreFunctor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action.forget\">Action.forget</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L87-L93","name":"CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryAction","line":87,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryAction","doc":"The category of finite `G`-sets is a `PreGaloisCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryAction\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instPreGaloisCategoryActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Basic.html#CategoryTheory.PreGaloisCategory\">CategoryTheory.PreGaloisCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L82-L84","name":"CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionTypeTypesForgetInstConcreteCategoryActionInstCategoryActionConcreteCategoryFintype","line":82,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionTypeTypesForgetInstConcreteCategoryActionInstCategoryActionConcreteCategoryFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instPreservesFiniteLimitsActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionTypeTypesForgetInstConcreteCategoryActionInstCategoryActionConcreteCategoryFintype\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instPreservesFiniteLimitsActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionTypeTypesForgetInstConcreteCategoryActionInstCategoryActionConcreteCategoryFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteLimits\">CategoryTheory.Limits.PreservesFiniteLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L78-L80","name":"CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjCategoryToMonoidToDivInvMonoidFintypeCatInstCategoryFintypeCat","line":78,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjCategoryToMonoidToDivInvMonoidFintypeCatInstCategoryFintypeCat","doc":"The category of finite sets has quotients by finite groups in arbitrary universes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instHasColimitsOfShapeSingleObjCategoryToMonoidToDivInvMonoidFintypeCatInstCategoryFintypeCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instHasColimitsOfShapeSingleObjCategoryToMonoidToDivInvMonoidFintypeCatInstCategoryFintypeCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfShape\">CategoryTheory.Limits.HasColimitsOfShape</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span></span>)</span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L71-L75","name":"CategoryTheory.FintypeCat.instMonoActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionImageComplementImageComplementIncl","line":71,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instMonoActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionImageComplementImageComplementIncl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.instMonoActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionImageComplementImageComplementIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">instMonoActionFintypeCatInstCategoryFintypeCatOfToMonoidToDivInvMonoidInstCategoryActionImageComplementImageComplementIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplementIncl\">CategoryTheory.FintypeCat.Action.imageComplementIncl</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L66-L69","name":"CategoryTheory.FintypeCat.Action.imageComplementIncl","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplementIncl","doc":"The inclusion from the complement of the image of `f : X ⟶ Y` into `Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplementIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">imageComplementIncl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplement\">CategoryTheory.FintypeCat.Action.imageComplement</a> <span class=\"fn\">G</span> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L49-L63","name":"CategoryTheory.FintypeCat.Action.imageComplement","line":49,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplement","doc":"Given `f : X ⟶ Y` for `X Y : Action FintypeCat (MonCat.of G)`, the complement of the image\nof `f` has a natural `G`-action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.Action.imageComplement\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">Action</span>.<span class=\"name\">imageComplement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Action/Basic.html#Action\">Action</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/MonCat/Basic.html#MonCat.of\">MonCat.of</a> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L41-L43","name":"CategoryTheory.FintypeCat.imageComplementIncl","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplementIncl","doc":"The inclusion from the complement of the image of `f : X ⟶ Y` into `Y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplementIncl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">imageComplementIncl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplement\">CategoryTheory.FintypeCat.imageComplement</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Galois/Examples.lean#L35-L38","name":"CategoryTheory.FintypeCat.imageComplement","line":35,"kind":"def","docLink":"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplement","doc":"Complement of the image of a morphism `f : X ⟶ Y` in `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Galois/Examples.html#CategoryTheory.FintypeCat.imageComplement\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FintypeCat</span>.<span class=\"name\">imageComplement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></div></div>"}]}