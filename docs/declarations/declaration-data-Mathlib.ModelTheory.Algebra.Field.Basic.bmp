{"name":"Mathlib.ModelTheory.Algebra.Field.Basic","instances":[{"typeNames":["FirstOrder.Language.Theory.field"],"name":"FirstOrder.Field.instModelRingToStructureToAddToDistribToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToMulToNonUnitalNonAssocRingToNegToRingToDivisionRingToOneToSemiringToDivisionSemiringToSemifieldToZeroToCommMonoidWithZeroToCommGroupWithZeroField","className":"FirstOrder.Language.Theory.Model"}],"imports":["Init","Mathlib.ModelTheory.Syntax","Mathlib.ModelTheory.Semantics","Mathlib.ModelTheory.Algebra.Ring.Basic","Mathlib.Algebra.Field.MinimalAxioms"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L145-L159","name":"FirstOrder.Field.instModelRingToStructureToAddToDistribToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToMulToNonUnitalNonAssocRingToNegToRingToDivisionRingToOneToSemiringToDivisionSemiringToSemifieldToZeroToCommMonoidWithZeroToCommGroupWithZeroField","line":145,"kind":"instance","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.instModelRingToStructureToAddToDistribToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToMulToNonUnitalNonAssocRingToNegToRingToDivisionRingToOneToSemiringToDivisionSemiringToSemifieldToZeroToCommMonoidWithZeroToCommGroupWithZeroField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.instModelRingToStructureToAddToDistribToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToMulToNonUnitalNonAssocRingToNegToRingToDivisionRingToOneToSemiringToDivisionSemiringToSemifieldToZeroToCommMonoidWithZeroToCommGroupWithZeroField\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">instModelRingToStructureToAddToDistribToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingToCommRingToMulToNonUnitalNonAssocRingToNegToRingToDivisionRingToOneToSemiringToDivisionSemiringToSemifieldToZeroToCommMonoidWithZeroToCommGroupWithZeroField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">FirstOrder.Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field\">FirstOrder.Language.Theory.field</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L139-L141","name":"FirstOrder.Field.compatibleRingOfModelField","line":139,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.compatibleRingOfModelField","doc":"The instances given by `fieldOfModelField` are compatible with the `Language.ring.Structure`\ninstance on `K`. This instance is to be used on models for the language of fields that do\nnot already have the ring operations on the Type.\n\nAlways add `fieldOfModelField` as a local instance first before using this instance.\n  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.compatibleRingOfModelField\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">compatibleRingOfModelField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">FirstOrder.Language.Structure</a> <a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">FirstOrder.Language.ring</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field\">FirstOrder.Language.Theory.field</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">FirstOrder.Ring.CompatibleRing</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L103-L126","name":"FirstOrder.Field.fieldOfModelField","line":103,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.fieldOfModelField","doc":"A model for the theory of fields is a field. To introduced locally on Types that don't\nalready have instances for ring operations.\n\nWhen this is used, it is almost always useful to also add locally the instance\n`compatibleFieldOfModelField` afterwards. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.fieldOfModelField\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">fieldOfModelField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">FirstOrder.Language.Structure</a> <a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">FirstOrder.Language.ring</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field\">FirstOrder.Language.Theory.field</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L88-L93","name":"FirstOrder.Field.FieldAxiom.toProp_of_model","line":88,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toProp_of_model","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toProp_of_model\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">toProp_of_model</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">FirstOrder.Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field\">FirstOrder.Language.Theory.field</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ax : <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toProp\">FirstOrder.Field.FieldAxiom.toProp</a> <span class=\"fn\">K</span> <span class=\"fn\">ax</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L81-L86","name":"FirstOrder.Field.FieldAxiom.realize_toSentence_iff_toProp","line":81,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.realize_toSentence_iff_toProp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.realize_toSentence_iff_toProp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">realize_toSentence_iff_toProp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">FirstOrder.Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ax : <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Sentence.Realize\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toSentence\">FirstOrder.Field.FieldAxiom.toSentence</a> <span class=\"fn\">ax</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toProp\">FirstOrder.Field.FieldAxiom.toProp</a> <span class=\"fn\">K</span> <span class=\"fn\">ax</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L78-L79","name":"FirstOrder.Language.Theory.field","line":78,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field","doc":"The first order theory of fields, as a theory over the language of rings "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">field</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">FirstOrder.Language.Theory</a> <a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">FirstOrder.Language.ring</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L65-L75","name":"FirstOrder.Field.FieldAxiom.toProp","line":65,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toProp","doc":"The Proposition corresponding to each field axiom "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toProp\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">toProp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(K : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L52-L61","name":"FirstOrder.Field.FieldAxiom.toSentence","line":52,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toSentence","doc":"The first order sentence corresponding to each field axiom "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.toSentence\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">toSentence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a> → <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">FirstOrder.Language.Sentence</a> <a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">FirstOrder.Language.ring</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L48-L48","name":"FirstOrder.Field.FieldAxiom.existsPairNE","line":48,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.existsPairNE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.existsPairNE\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">existsPairNE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L47-L47","name":"FirstOrder.Field.FieldAxiom.leftDistrib","line":47,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.leftDistrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.leftDistrib\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">leftDistrib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L46-L46","name":"FirstOrder.Field.FieldAxiom.existsInv","line":46,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.existsInv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.existsInv\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">existsInv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L45-L45","name":"FirstOrder.Field.FieldAxiom.oneMul","line":45,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.oneMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.oneMul\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">oneMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L44-L44","name":"FirstOrder.Field.FieldAxiom.mulComm","line":44,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.mulComm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.mulComm\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">mulComm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L43-L43","name":"FirstOrder.Field.FieldAxiom.mulAssoc","line":43,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.mulAssoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.mulAssoc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">mulAssoc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L42-L42","name":"FirstOrder.Field.FieldAxiom.addLeftNeg","line":42,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.addLeftNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.addLeftNeg\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">addLeftNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L41-L41","name":"FirstOrder.Field.FieldAxiom.zeroAdd","line":41,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.zeroAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.zeroAdd\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">zeroAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L40-L40","name":"FirstOrder.Field.FieldAxiom.addAssoc","line":40,"kind":"ctor","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.addAssoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom.addAssoc\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span>.<span class=\"name\">addAssoc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\">FirstOrder.Field.FieldAxiom</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/ModelTheory/Algebra/Field/Basic.lean#L39-L48","name":"FirstOrder.Field.FieldAxiom","line":39,"kind":"inductive","docLink":"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom","doc":"An indexing type to name each of the field axioms. The theory\nof fields is defined as the range of a function `FieldAxiom ->\nLanguage.ring.Sentence` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Field.FieldAxiom\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">FieldAxiom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}