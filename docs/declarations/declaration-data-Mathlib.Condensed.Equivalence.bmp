{"name":"Mathlib.Condensed.Equivalence","instances":[{"typeNames":["Stonean.toCompHaus","CategoryTheory.coherentTopology"],"name":"Condensed.StoneanCompHaus.isCoverDense","className":"CategoryTheory.Functor.IsCoverDense"},{"typeNames":["Stonean.toCompHaus","CategoryTheory.coherentTopology","CategoryTheory.coherentTopology"],"name":"Condensed.StoneanCompHaus.coverLifting","className":"CategoryTheory.Functor.IsCocontinuous"},{"typeNames":["Stonean.toCompHaus","CategoryTheory.coherentTopology","CategoryTheory.coherentTopology"],"name":"Condensed.StoneanCompHaus.instIsContinuousStoneanInstLargeCategoryStoneanCompHausCategoryToCompHausCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveCompHausCategoryInstPreregularCompHausCategory","className":"CategoryTheory.Functor.IsContinuous"},{"typeNames":["Stonean.toProfinite","CategoryTheory.coherentTopology"],"name":"Condensed.StoneanProfinite.coverDense","className":"CategoryTheory.Functor.IsCoverDense"},{"typeNames":["Stonean.toProfinite","CategoryTheory.coherentTopology","CategoryTheory.coherentTopology"],"name":"Condensed.StoneanProfinite.isCocontinuous","className":"CategoryTheory.Functor.IsCocontinuous"},{"typeNames":["Stonean.toProfinite","CategoryTheory.coherentTopology","CategoryTheory.coherentTopology"],"name":"Condensed.StoneanProfinite.instIsContinuousStoneanInstLargeCategoryStoneanProfiniteCategoryToProfiniteCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveProfiniteCategoryInstPreregularProfiniteCategory","className":"CategoryTheory.Functor.IsContinuous"}],"imports":["Init","Mathlib.Topology.Category.Profinite.EffectiveEpi","Mathlib.Topology.Category.Stonean.EffectiveEpi","Mathlib.Condensed.Basic","Mathlib.CategoryTheory.Sites.DenseSubsite","Mathlib.CategoryTheory.Sites.InducedTopology"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L231-L233","name":"Condensed.ProfiniteCompHaus.equivalence","line":231,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.ProfiniteCompHaus.equivalence","doc":"The equivalence from coherent sheaves on `Profinite` to coherent sheaves on `CompHaus`\n(i.e. condensed sets). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.ProfiniteCompHaus.equivalence\"><span class=\"name\">Condensed</span>.<span class=\"name\">ProfiniteCompHaus</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u + 1, u_1}</a>           <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/Condensed/Basic.html#Condensed\">Condensed</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L222-L224","name":"Condensed.StoneanProfinite.equivalence","line":222,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.equivalence","doc":"The equivalence from coherent sheaves on `Stonean` to coherent sheaves on `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.equivalence\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u + 1, u_1}</a>           <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L217-L218","name":"Condensed.StoneanProfinite.instIsContinuousStoneanInstLargeCategoryStoneanProfiniteCategoryToProfiniteCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveProfiniteCategoryInstPreregularProfiniteCategory","line":217,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instIsContinuousStoneanInstLargeCategoryStoneanProfiniteCategoryToProfiniteCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveProfiniteCategoryInstPreregularProfiniteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.instIsContinuousStoneanInstLargeCategoryStoneanProfiniteCategoryToProfiniteCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveProfiniteCategoryInstPreregularProfiniteCategory\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">instIsContinuousStoneanInstLargeCategoryStoneanProfiniteCategoryToProfiniteCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveProfiniteCategoryInstPreregularProfiniteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/CoverPreserving.html#CategoryTheory.Functor.IsContinuous\">CategoryTheory.Functor.IsContinuous</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L212-L215","name":"Condensed.StoneanProfinite.isCocontinuous","line":212,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.isCocontinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.isCocontinuous\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">isCocontinuous</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/CoverLifting.html#CategoryTheory.Functor.IsCocontinuous\">CategoryTheory.Functor.IsCocontinuous</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L207-L210","name":"Condensed.StoneanProfinite.coverPreserving","line":207,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coverPreserving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coverPreserving\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">coverPreserving</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/CoverPreserving.html#CategoryTheory.CoverPreserving\">CategoryTheory.CoverPreserving</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span>\n  <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L200-L205","name":"Condensed.StoneanProfinite.coherentTopology_is_induced","line":200,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coherentTopology_is_induced","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coherentTopology_is_induced\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">coherentTopology_is_induced</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/InducedTopology.html#CategoryTheory.Functor.inducedTopologyOfIsCoverDense\">CategoryTheory.Functor.inducedTopologyOfIsCoverDense</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L174-L198","name":"Condensed.StoneanProfinite.coverDense.inducedTopology_Sieve_iff_EffectiveEpiFamily","line":174,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coverDense.inducedTopology_Sieve_iff_EffectiveEpiFamily","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coverDense.inducedTopology_Sieve_iff_EffectiveEpiFamily\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">coverDense</span>.<span class=\"name\">inducedTopology_Sieve_iff_EffectiveEpiFamily</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">CategoryTheory.Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (α : <a href=\"./foundational_types.html\">Type</a>) (x : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>) (Y : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>) (π : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EffectiveEpimorphic.html#CategoryTheory.EffectiveEpiFamily\">CategoryTheory.EffectiveEpiFamily</a> <span class=\"fn\">Y</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">S</span>.arrows <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.sieves\">CategoryTheory.GrothendieckTopology.sieves</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/InducedTopology.html#CategoryTheory.Functor.inducedTopologyOfIsCoverDense\">CategoryTheory.Functor.inducedTopologyOfIsCoverDense</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span>)</span>\n      <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L162-L172","name":"Condensed.StoneanProfinite.coverDense","line":162,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coverDense","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.coverDense\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">coverDense</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/DenseSubsite.html#CategoryTheory.Functor.IsCoverDense\">CategoryTheory.Functor.IsCoverDense</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toProfinite\">Stonean.toProfinite</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L145-L159","name":"Condensed.StoneanProfinite.generate_singleton_mem_coherentTopology","line":145,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.generate_singleton_mem_coherentTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanProfinite.generate_singleton_mem_coherentTopology\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanProfinite</span>.<span class=\"name\">generate_singleton_mem_coherentTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.singleton\">CategoryTheory.Presieve.singleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Profinite.presentation.π\">Profinite.presentation.π</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.sieves\">CategoryTheory.GrothendieckTopology.sieves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L130-L132","name":"Condensed.StoneanCompHaus.equivalence","line":130,"kind":"def","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.equivalence","doc":"The equivalence from coherent sheaves on `Stonean` to coherent sheaves on `CompHaus`\n(i.e. condensed sets). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.equivalence\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">equivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u + 1, u_1}</a>           <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">CategoryTheory.Sheaf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\"><a href=\"./Mathlib/Condensed/Basic.html#Condensed\">Condensed</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L124-L125","name":"Condensed.StoneanCompHaus.instIsContinuousStoneanInstLargeCategoryStoneanCompHausCategoryToCompHausCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveCompHausCategoryInstPreregularCompHausCategory","line":124,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.instIsContinuousStoneanInstLargeCategoryStoneanCompHausCategoryToCompHausCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveCompHausCategoryInstPreregularCompHausCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.instIsContinuousStoneanInstLargeCategoryStoneanCompHausCategoryToCompHausCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveCompHausCategoryInstPreregularCompHausCategory\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">instIsContinuousStoneanInstLargeCategoryStoneanCompHausCategoryToCompHausCoherentTopologyInstPrecoherentToFinitaryPreExtensiveInstFinitaryExtensiveStoneanInstLargeCategoryStoneanInstPreregularStoneanInstLargeCategoryStoneanInstFinitaryExtensiveCompHausCategoryInstPreregularCompHausCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/CoverPreserving.html#CategoryTheory.Functor.IsContinuous\">CategoryTheory.Functor.IsContinuous</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L119-L122","name":"Condensed.StoneanCompHaus.coverLifting","line":119,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coverLifting","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coverLifting\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">coverLifting</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/CoverLifting.html#CategoryTheory.Functor.IsCocontinuous\">CategoryTheory.Functor.IsCocontinuous</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L114-L117","name":"Condensed.StoneanCompHaus.coverPreserving","line":114,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coverPreserving","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coverPreserving\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">coverPreserving</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/CoverPreserving.html#CategoryTheory.CoverPreserving\">CategoryTheory.CoverPreserving</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span>\n  <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L107-L112","name":"Condensed.StoneanCompHaus.coherentTopology_is_induced","line":107,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coherentTopology_is_induced","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coherentTopology_is_induced\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">coherentTopology_is_induced</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/InducedTopology.html#CategoryTheory.Functor.inducedTopologyOfIsCoverDense\">CategoryTheory.Functor.inducedTopologyOfIsCoverDense</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L81-L105","name":"Condensed.StoneanCompHaus.coverDense.inducedTopology_Sieve_iff_EffectiveEpiFamily","line":81,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coverDense.inducedTopology_Sieve_iff_EffectiveEpiFamily","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.coverDense.inducedTopology_Sieve_iff_EffectiveEpiFamily\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">coverDense</span>.<span class=\"name\">inducedTopology_Sieve_iff_EffectiveEpiFamily</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">CategoryTheory.Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (α : <a href=\"./foundational_types.html\">Type</a>) (x : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>) (Y : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean\">Stonean</a></span>) (π : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></span></span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EffectiveEpimorphic.html#CategoryTheory.EffectiveEpiFamily\">CategoryTheory.EffectiveEpiFamily</a> <span class=\"fn\">Y</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">S</span>.arrows <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">a</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.sieves\">CategoryTheory.GrothendieckTopology.sieves</a>\n      <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/InducedTopology.html#CategoryTheory.Functor.inducedTopologyOfIsCoverDense\">CategoryTheory.Functor.inducedTopologyOfIsCoverDense</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span>)</span>\n      <span class=\"fn\">X</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L66-L79","name":"Condensed.StoneanCompHaus.isCoverDense","line":66,"kind":"instance","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.isCoverDense","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.isCoverDense\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">isCoverDense</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/DenseSubsite.html#CategoryTheory.Functor.IsCoverDense\">CategoryTheory.Functor.IsCoverDense</a> <a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#Stonean.toCompHaus\">Stonean.toCompHaus</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Condensed/Equivalence.lean#L49-L63","name":"Condensed.StoneanCompHaus.generate_singleton_mem_coherentTopology","line":49,"kind":"theorem","docLink":"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.generate_singleton_mem_coherentTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Equivalence.html#Condensed.StoneanCompHaus.generate_singleton_mem_coherentTopology\"><span class=\"name\">Condensed</span>.<span class=\"name\">StoneanCompHaus</span>.<span class=\"name\">generate_singleton_mem_coherentTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.singleton\">CategoryTheory.Presieve.singleton</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Stonean/Basic.html#CompHaus.presentation.π\">CompHaus.presentation.π</a> <span class=\"fn\">B</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.sieves\">CategoryTheory.GrothendieckTopology.sieves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent.html#CategoryTheory.coherentTopology\">CategoryTheory.coherentTopology</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span> <span class=\"fn\">B</span></span></span></div></div>"}]}