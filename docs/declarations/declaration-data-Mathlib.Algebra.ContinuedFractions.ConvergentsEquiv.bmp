{"name":"Mathlib.Algebra.ContinuedFractions.ConvergentsEquiv","instances":[],"imports":["Init","Mathlib.Algebra.ContinuedFractions.ContinuantsRecurrence","Mathlib.Algebra.ContinuedFractions.TerminatedStable","Mathlib.Algebra.Order.Field.Basic","Mathlib.Tactic.FieldSimp","Mathlib.Tactic.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L402-L409","name":"ContinuedFraction.convergents_eq_convergents'","line":402,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#ContinuedFraction.convergents_eq_convergents'","doc":"Shows that the recurrence relation (`convergents`) and direct evaluation (`convergents'`) of a\n(regular) continued fraction coincide. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#ContinuedFraction.convergents_eq_convergents'\"><span class=\"name\">ContinuedFraction</span>.<span class=\"name\">convergents_eq_convergents'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#ContinuedFraction\">ContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents\">GeneralizedContinuedFraction.convergents</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">c</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents'\">GeneralizedContinuedFraction.convergents'</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">c</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L342-L391","name":"GeneralizedContinuedFraction.convergents_eq_convergents'","line":342,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.convergents_eq_convergents'","doc":"Shows that the recurrence relation (`convergents`) and direct evaluation (`convergents'`) of the\ngcf coincide at position `n` if the sequence of fractions contains strictly positive values only.\nRequiring positivity of all values is just one possible condition to obtain this result.\nFor example, the dual - sequences with strictly negative values only - would also work.\n\nIn practice, one most commonly deals with (regular) continued fractions, which satisfy the\npositivity criterion required here. The analogous result for them\n(see `ContinuedFractions.convergents_eq_convergents`) hence follows directly from this theorem.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.convergents_eq_convergents'\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">convergents_eq_convergents'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Field/Defs.html#LinearOrderedField\">LinearOrderedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s_pos : <span class=\"fn\">∀ {<span class=\"fn\">gp</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>} {<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\"><span class=\"fn\">g</span>.s</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">gp</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">gp</span>.a</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">gp</span>.b</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents\">GeneralizedContinuedFraction.convergents</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents'\">GeneralizedContinuedFraction.convergents'</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L264-L328","name":"GeneralizedContinuedFraction.succ_nth_convergent_eq_squashGCF_nth_convergent","line":264,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.succ_nth_convergent_eq_squashGCF_nth_convergent","doc":"The convergents coincide in the expected way at the squashed position if the partial denominator\nat the squashed position is not zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.succ_nth_convergent_eq_squashGCF_nth_convergent\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">succ_nth_convergent_eq_squashGCF_nth_convergent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nth_part_denom_ne_zero : <span class=\"fn\">∀ {<span class=\"fn\">b</span> : <span class=\"fn\">K</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.partialDenominators\">GeneralizedContinuedFraction.partialDenominators</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span></span> → <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents\">GeneralizedContinuedFraction.convergents</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents\">GeneralizedContinuedFraction.convergents</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF\">GeneralizedContinuedFraction.squashGCF</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L237-L257","name":"GeneralizedContinuedFraction.continuantsAux_eq_continuantsAux_squashGCF_of_le","line":237,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.continuantsAux_eq_continuantsAux_squashGCF_of_le","doc":"The auxiliary continuants before the squashed position stay the same. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.continuantsAux_eq_continuantsAux_squashGCF_of_le\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">continuantsAux_eq_continuantsAux_squashGCF_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.continuantsAux\">GeneralizedContinuedFraction.continuantsAux</a> <span class=\"fn\">g</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.continuantsAux\">GeneralizedContinuedFraction.continuantsAux</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF\">GeneralizedContinuedFraction.squashGCF</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L225-L233","name":"GeneralizedContinuedFraction.succ_nth_convergent'_eq_squashGCF_nth_convergent'","line":225,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.succ_nth_convergent'_eq_squashGCF_nth_convergent'","doc":"`convergents'` returns the same value for a gcf and the corresponding squashed gcf at the\nsquashed position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.succ_nth_convergent'_eq_squashGCF_nth_convergent'\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">succ_nth_convergent'_eq_squashGCF_nth_convergent'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents'\">GeneralizedContinuedFraction.convergents'</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents'\">GeneralizedContinuedFraction.convergents'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF\">GeneralizedContinuedFraction.squashGCF</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L218-L220","name":"GeneralizedContinuedFraction.squashGCF_nth_of_lt","line":218,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF_nth_of_lt","doc":"The values before the squashed position stay the same. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF_nth_of_lt\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashGCF_nth_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m_lt_n : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF\">GeneralizedContinuedFraction.squashGCF</a> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span>.s</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\"><span class=\"fn\">g</span>.s</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L205-L214","name":"GeneralizedContinuedFraction.squashGCF_eq_self_of_terminated","line":205,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF_eq_self_of_terminated","doc":"If the gcf already terminated at position `n`, nothing gets squashed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF_eq_self_of_terminated\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashGCF_eq_self_of_terminated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(terminated_at_n : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.TerminatedAt\">GeneralizedContinuedFraction.TerminatedAt</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF\">GeneralizedContinuedFraction.squashGCF</a> <span class=\"fn\">g</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L192-L197","name":"GeneralizedContinuedFraction.squashGCF","line":192,"kind":"def","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF","doc":"Given a gcf `g = [h; (a₀, bₒ), (a₁, b₁), ...]`, we have\n- `squashGCF g 0 = [h + a₀ / b₀); (a₀, bₒ), ...]`,\n- `squashGCF g (n + 1) = ⟨g.h, squashSeq g.s n⟩`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashGCF\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashGCF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction\">GeneralizedContinuedFraction</a> <span class=\"fn\">K</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L156-L182","name":"GeneralizedContinuedFraction.succ_succ_nth_convergent'_aux_eq_succ_nth_convergent'_aux_squashSeq","line":156,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.succ_succ_nth_convergent'_aux_eq_succ_nth_convergent'_aux_squashSeq","doc":"The auxiliary function `convergents'Aux` returns the same value for a sequence and the\ncorresponding squashed sequence at the squashed position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.succ_succ_nth_convergent'_aux_eq_succ_nth_convergent'_aux_squashSeq\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">succ_succ_nth_convergent'_aux_eq_succ_nth_convergent'_aux_squashSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents'Aux\">GeneralizedContinuedFraction.convergents'Aux</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.convergents'Aux\">GeneralizedContinuedFraction.convergents'Aux</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\">GeneralizedContinuedFraction.squashSeq</a> <span class=\"fn\">s</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L135-L151","name":"GeneralizedContinuedFraction.squashSeq_succ_n_tail_eq_squashSeq_tail_n","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_succ_n_tail_eq_squashSeq_tail_n","doc":"Squashing at position `n + 1` and taking the tail is the same as squashing the tail of the\nsequence at position `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_succ_n_tail_eq_squashSeq_tail_n\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashSeq_succ_n_tail_eq_squashSeq_tail_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.tail\">Stream'.Seq.tail</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\">GeneralizedContinuedFraction.squashSeq</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\">GeneralizedContinuedFraction.squashSeq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.tail\">Stream'.Seq.tail</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L122-L130","name":"GeneralizedContinuedFraction.squashSeq_nth_of_lt","line":122,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_nth_of_lt","doc":"The values before the squashed position stay the same. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_nth_of_lt\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashSeq_nth_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m_lt_n : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\">GeneralizedContinuedFraction.squashSeq</a> <span class=\"fn\">s</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\">s</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L115-L118","name":"GeneralizedContinuedFraction.squashSeq_nth_of_not_terminated","line":115,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_nth_of_not_terminated","doc":"If the sequence has not terminated before position `n + 1`, the value at `n + 1` gets\nsquashed into position `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_nth_of_not_terminated\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashSeq_nth_of_not_terminated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{gp_n : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{gp_succ_n : <span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s_nth_eq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\">s</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">gp_n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s_succ_nth_eq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">gp_succ_n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">Stream'.Seq.get?</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\">GeneralizedContinuedFraction.squashSeq</a> <span class=\"fn\">s</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">{ <span class=\"fn\">a</span> := <span class=\"fn\"><span class=\"fn\">gp_n</span>.a</span>, <span class=\"fn\">b</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">gp_n</span>.b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">gp_succ_n</span>.a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">gp_succ_n</span>.b</span></span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L107-L110","name":"GeneralizedContinuedFraction.squashSeq_eq_self_of_terminated","line":107,"kind":"theorem","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_eq_self_of_terminated","doc":"If the sequence already terminated at position `n + 1`, nothing gets squashed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq_eq_self_of_terminated\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashSeq_eq_self_of_terminated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(terminated_at_succ_n : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.TerminatedAt\">Stream'.Seq.TerminatedAt</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\">GeneralizedContinuedFraction.squashSeq</a> <span class=\"fn\">s</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.lean#L94-L100","name":"GeneralizedContinuedFraction.squashSeq","line":94,"kind":"def","docLink":"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq","doc":"Given a sequence of `GCF.Pair`s `s = [(a₀, bₒ), (a₁, b₁), ...]`, `squashSeq s n`\ncombines `⟨aₙ, bₙ⟩` and `⟨aₙ₊₁, bₙ₊₁⟩` at position `n` to `⟨aₙ, bₙ + aₙ₊₁ / bₙ₊₁⟩`. For example,\n`squashSeq s 0 = [(a₀, bₒ + a₁ / b₁), (a₁, b₁),...]`.\nIf `s.TerminatedAt (n + 1)`, then `squashSeq s n = s`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/ContinuedFractions/ConvergentsEquiv.html#GeneralizedContinuedFraction.squashSeq\"><span class=\"name\">GeneralizedContinuedFraction</span>.<span class=\"name\">squashSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Stream'.Seq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/ContinuedFractions/Basic.html#GeneralizedContinuedFraction.Pair\">GeneralizedContinuedFraction.Pair</a> <span class=\"fn\">K</span></span>)</span></span></div></div>"}]}