{"name":"Mathlib.Topology.Category.LightProfinite.Basic","instances":[{"typeNames":["LightProfinite"],"name":"LightProfinite.instCategoryLightProfinite","className":"CategoryTheory.Category"},{"typeNames":["LightProfinite"],"name":"LightProfinite.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["LightProfinite.lightToProfinite"],"name":"LightProfinite.instFaithfulLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","className":"CategoryTheory.Faithful"},{"typeNames":["LightProfinite.lightToProfinite"],"name":"LightProfinite.instFullLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","className":"CategoryTheory.Full"},{"typeNames":["LightProfinite.lightToProfinite"],"name":"LightProfinite.instReflectsEpimorphismsLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","className":"CategoryTheory.Functor.ReflectsEpimorphisms"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","className":"TopologicalSpace"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instTotallyDisconnectedSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","className":"TotallyDisconnectedSpace"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instCompactSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","className":"CompactSpace"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instT2SpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","className":"T2Space"},{"typeNames":["LightProfinite'"],"name":"instCategoryLightProfinite'","className":"CategoryTheory.Category"},{"typeNames":["LightProfinite'.toLightFunctor"],"name":"instFaithfulLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","className":"CategoryTheory.Faithful"},{"typeNames":["LightProfinite'.toLightFunctor"],"name":"instFullLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","className":"CategoryTheory.Full"},{"typeNames":["LightProfinite'.toLightFunctor"],"name":"instEssSurjLightProfinite'LightProfiniteInstCategoryLightProfinite'InstCategoryLightProfiniteToLightFunctor","className":"CategoryTheory.EssSurj"},{"typeNames":["LightProfinite'.toLightFunctor"],"name":"instIsEquivalenceLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","className":"CategoryTheory.IsEquivalence"},{"typeNames":["LightProfinite"],"name":"instEssentiallySmallLightProfiniteInstCategoryLightProfinite","className":"CategoryTheory.EssentiallySmall"}],"imports":["Init","Mathlib.Topology.Category.Profinite.Basic","Mathlib.CategoryTheory.Limits.ConcreteCategory"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L140-L141","name":"instEssentiallySmallLightProfiniteInstCategoryLightProfinite","line":140,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightProfiniteInstCategoryLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightProfiniteInstCategoryLightProfinite\"><span class=\"name\">instEssentiallySmallLightProfiniteInstCategoryLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u, u, u + 1}</a>           <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L137-L138","name":"LightProfinite.equivSmall","line":137,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.equivSmall","doc":"The equivalence beween `LightProfinite` and a small category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.equivSmall\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">equivSmall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">â‰Œ</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\">LightProfinite'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L134-L134","name":"instIsEquivalenceLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","line":134,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor\"><span class=\"name\">instIsEquivalenceLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.IsEquivalence\">CategoryTheory.IsEquivalence</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toLightFunctor\">LightProfinite'.toLightFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L125-L131","name":"instEssSurjLightProfinite'LightProfiniteInstCategoryLightProfinite'InstCategoryLightProfiniteToLightFunctor","line":125,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssSurjLightProfinite'LightProfiniteInstCategoryLightProfinite'InstCategoryLightProfiniteToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssSurjLightProfinite'LightProfiniteInstCategoryLightProfinite'InstCategoryLightProfiniteToLightFunctor\"><span class=\"name\">instEssSurjLightProfinite'LightProfiniteInstCategoryLightProfinite'InstCategoryLightProfiniteToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentialImage.html#CategoryTheory.EssSurj\">CategoryTheory.EssSurj</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toLightFunctor\">LightProfinite'.toLightFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L123-L123","name":"instFullLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","line":123,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor\"><span class=\"name\">instFullLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toLightFunctor\">LightProfinite'.toLightFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L121-L121","name":"instFaithfulLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","line":121,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor\"><span class=\"name\">instFaithfulLightProfinite'InstCategoryLightProfinite'LightProfiniteInstCategoryLightProfiniteToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toLightFunctor\">LightProfinite'.toLightFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L117-L119","name":"LightProfinite'.toLightFunctor","line":117,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toLightFunctor","doc":"The functor part of the equivalence of categories `LightProfinite' â‰Œ LightProfinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toLightFunctor\"><span class=\"name\">LightProfinite'</span>.<span class=\"name\">toLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\">LightProfinite'</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L114-L114","name":"instCategoryLightProfinite'","line":114,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCategoryLightProfinite'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCategoryLightProfinite'\"><span class=\"name\">instCategoryLightProfinite'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1}</a>      <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\">LightProfinite'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L111-L112","name":"LightProfinite'.toProfinite","line":111,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toProfinite","doc":"A `LightProfinite'` yields a `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.toProfinite\"><span class=\"name\">LightProfinite'</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\">LightProfinite'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L108-L108","name":"LightProfinite'.diagram","line":108,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.diagram","doc":"The diagram takes values in a small category equivalent to `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.diagram\"><span class=\"name\">LightProfinite'</span>.<span class=\"name\">diagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\">LightProfinite'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">â„•</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">áµ’áµ–</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L106-L106","name":"LightProfinite'.mk","line":106,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'.mk\"><span class=\"name\">LightProfinite'</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(diagram : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">â„•</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">áµ’áµ–</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\">LightProfinite'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L106-L108","name":"LightProfinite'","line":106,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'","doc":"This is an auxiliary definition used to show that `LightProfinite` is essentially small. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite'\"><span class=\"name\">LightProfinite'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L97-L99","name":"LightProfinite.fintypeCatToLightProfinite","line":97,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.fintypeCatToLightProfinite","doc":"The explicit functor `FintypeCat â¥¤ LightProfinite`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.fintypeCatToLightProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">fintypeCatToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L93-L94","name":"LightProfinite.instT2SpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","line":93,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instT2SpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instT2SpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instT2SpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L90-L91","name":"LightProfinite.instCompactSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","line":90,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCompactSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCompactSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCompactSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/Compact.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L87-L88","name":"LightProfinite.instTotallyDisconnectedSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","line":87,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategoryInstTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L84-L85","name":"LightProfinite.instTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","line":84,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTopologicalSpaceObjLightProfiniteToQuiverToCategoryStructInstCategoryLightProfiniteTypeTypesToPrefunctorForgetConcreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L82-L82","name":"LightProfinite.instReflectsEpimorphismsLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","line":82,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instReflectsEpimorphismsLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instReflectsEpimorphismsLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instReflectsEpimorphismsLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/EpiMono.html#CategoryTheory.Functor.ReflectsEpimorphisms\">CategoryTheory.Functor.ReflectsEpimorphisms</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite\">LightProfinite.lightToProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L80-L80","name":"LightProfinite.instFullLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","line":80,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instFullLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instFullLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instFullLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite\">LightProfinite.lightToProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L78-L78","name":"LightProfinite.instFaithfulLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","line":78,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instFaithfulLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instFaithfulLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instFaithfulLightProfiniteInstCategoryLightProfiniteProfiniteCategoryLightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite\">LightProfinite.lightToProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L76-L76","name":"LightProfinite.lightToProfinite","line":76,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite","doc":"The fully faithful embedding `LightProfinite â¥¤ Profinite` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">lightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L75-L75","name":"LightProfinite.lightToProfinite_obj","line":75,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite_obj\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">lightToProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite\">LightProfinite.lightToProfinite</a>.obj <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L75-L75","name":"LightProfinite.lightToProfinite_map","line":75,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite_map\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">lightToProfinite_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">âˆ€ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.lightToProfinite\">LightProfinite.lightToProfinite</a>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L72-L72","name":"LightProfinite.concreteCategory","line":72,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L71-L71","name":"LightProfinite.concreteCategory_forget_map","line":71,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory_forget_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory_forget_map\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">concreteCategory_forget_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">âˆ€ {<span class=\"fn\">X </span>Y : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">Y</span></span>)\n  (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.inducedFunctor\">CategoryTheory.inducedFunctor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a></span>)</span>.obj <span class=\"fn\">X</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ConcreteCategory.forget</span>.map <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span>.map <span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L71-L71","name":"LightProfinite.concreteCategory_forget_obj","line":71,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory_forget_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory_forget_obj\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">concreteCategory_forget_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.ConcreteCategory.forget</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span>.obj <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L69-L69","name":"LightProfinite.instCategoryLightProfinite","line":69,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCategoryLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCategoryLightProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCategoryLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a>          <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L68-L68","name":"LightProfinite.instCategoryLightProfinite_id_apply","line":68,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCategoryLightProfinite_id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCategoryLightProfinite_id_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCategoryLightProfinite_id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">â†‘<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a> <span class=\"fn\">X</span></span>)</span>.toCompHaus</span>.toTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L68-L68","name":"LightProfinite.instCategoryLightProfinite_comp_apply","line":68,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCategoryLightProfinite_comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCategoryLightProfinite_comp_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCategoryLightProfinite_comp_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">âˆ€ {<span class=\"fn\">X </span>Y Z : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">Z</span></span>)\n  (<span class=\"fn\">a</span> : <span class=\"fn\">â†‘<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\">LightProfinite.toProfinite</a> <span class=\"fn\">X</span></span>)</span>.toCompHaus</span>.toTop</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L66-L66","name":"LightProfinite.toProfinite","line":66,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite","doc":"The underlying `Profinite`Â of a `LightProfinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L61-L63","name":"LightProfinite.of","line":61,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of","doc":"Given a functor from `â„•áµ’áµ–` to finite sets we can take its limit in `Profinite`Â and obtain a light\nprofinite set.Â \n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">â„•</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">áµ’áµ–</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L52-L55","name":"LightProfinite.ext","line":52,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.ext\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">â†‘<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.cone</span>.pt</span>.toCompHaus</span>.toTop</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">â†‘<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.cone</span>.pt</span>.toCompHaus</span>.toTop</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">âˆ€ (<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">â„•</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">áµ’áµ–</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.cone</span>.Ï€</span>.app <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.cone</span>.Ï€</span>.app <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L39-L47","name":"FintypeCat.toLightProfinite","line":39,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite","doc":"A finite set can be regarded as a light profinite set as the limit of the constant diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L36-L36","name":"LightProfinite.isLimit","line":36,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isLimit","doc":"The limit cone is limiting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isLimit\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">self</span>.cone</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L34-L34","name":"LightProfinite.cone","line":34,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.cone","doc":"The limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.cone\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">cone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.diagram</span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L32-L32","name":"LightProfinite.diagram","line":32,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.diagram","doc":"The indexing diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.diagram\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">diagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">â„•</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">áµ’áµ–</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L30-L30","name":"LightProfinite.mk","line":30,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.mk\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(diagram : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">â„•</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">áµ’áµ–</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cone : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">diagram</span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isLimit : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">cone</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Category/LightProfinite/Basic.lean#L30-L36","name":"LightProfinite","line":30,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite","doc":"A light profinite set is one which can be written as a sequential limit of finite sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\"><span class=\"name\">LightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}