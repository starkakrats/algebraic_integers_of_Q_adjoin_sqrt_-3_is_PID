{"name":"Mathlib.Topology.Perfect","instances":[],"imports":["Init","Mathlib.Topology.MetricSpace.Polish","Mathlib.Topology.MetricSpace.CantorScheme"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L318-L324","name":"IsClosed.exists_nat_bool_injection_of_not_countable","line":318,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#IsClosed.exists_nat_bool_injection_of_not_countable","doc":"Any closed uncountable subset of a Polish space admits a continuous injection\nfrom the Cantor space `ℕ → Bool`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#IsClosed.exists_nat_bool_injection_of_not_countable\"><span class=\"name\">IsClosed</span>.<span class=\"name\">exists_nat_bool_injection_of_not_countable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Polish.html#PolishSpace\">PolishSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hunc : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L262-L311","name":"Perfect.exists_nat_bool_injection","line":262,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#Perfect.exists_nat_bool_injection","doc":"Any nonempty perfect set in a complete metric space admits a continuous injection\nfrom the Cantor space, `ℕ → Bool`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.exists_nat_bool_injection\"><span class=\"name\">Perfect</span>.<span class=\"name\">exists_nat_bool_injection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnonempty : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (f : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L244-L255","name":"Perfect.small_diam_splitting","line":244,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#Perfect.small_diam_splitting","doc":"A refinement of `Perfect.splitting` for metric spaces, where we also control\nthe diameter of the new perfect sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.small_diam_splitting\"><span class=\"name\">Perfect</span>.<span class=\"name\">small_diam_splitting</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Basic.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hnonempty : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ε_pos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (C₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (C₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C₀</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C₀</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C₀</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Basic.html#EMetric.diam\">EMetric.diam</a> <span class=\"fn\">C₀</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Basic.html#EMetric.diam\">EMetric.diam</a> <span class=\"fn\">C₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C₀</span> <span class=\"fn\">C₁</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L200-L211","name":"exists_perfect_nonempty_of_isClosed_of_not_countable","line":200,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#exists_perfect_nonempty_of_isClosed_of_not_countable","doc":"Any uncountable closed set in a second countable space contains a nonempty perfect subset."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#exists_perfect_nonempty_of_isClosed_of_not_countable\"><span class=\"name\">exists_perfect_nonempty_of_isClosed_of_not_countable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hclosed : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hunc : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">D</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L164-L196","name":"exists_countable_union_perfect_of_isClosed","line":164,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#exists_countable_union_perfect_of_isClosed","doc":"The **Cantor-Bendixson Theorem**: Any closed subset of a second countable space\ncan be written as the union of a countable set and a perfect set."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#exists_countable_union_perfect_of_isClosed\"><span class=\"name\">exists_countable_union_perfect_of_isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hclosed : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (D : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">D</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">D</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L138-L157","name":"Perfect.splitting","line":138,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#Perfect.splitting","doc":"Given a perfect nonempty set in a T2.5 space, we can find two disjoint perfect subsets.\nThis is the main inductive step in the proof of the Cantor-Bendixson Theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.splitting\"><span class=\"name\">Perfect</span>.<span class=\"name\">splitting</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T25Space\">T25Space</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnonempty : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (C₀ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (C₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C₀</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C₀</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">C₀</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">C₁</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">C₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">C₀</span> <span class=\"fn\">C₁</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L127-L133","name":"Perfect.closure_nhds_inter","line":127,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#Perfect.closure_nhds_inter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.closure_nhds_inter\"><span class=\"name\">Perfect</span>.<span class=\"name\">closure_nhds_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xC : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xU : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Uop : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L112-L124","name":"preperfect_iff_perfect_closure","line":112,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#preperfect_iff_perfect_closure","doc":"In a T1 space, being preperfect is equivalent to having perfect closure."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#preperfect_iff_perfect_closure\"><span class=\"name\">preperfect_iff_perfect_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T1Space\">T1Space</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">C</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L100-L108","name":"Preperfect.perfect_closure","line":100,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#Preperfect.perfect_closure","doc":"The closure of a preperfect set is perfect.\nFor a converse, see `preperfect_iff_perfect_closure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Preperfect.perfect_closure\"><span class=\"name\">Preperfect</span>.<span class=\"name\">perfect_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#closure\">closure</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L91-L95","name":"Preperfect.open_inter","line":91,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#Preperfect.open_inter","doc":"The intersection of a preperfect set and an open set is preperfect. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Preperfect.open_inter\"><span class=\"name\">Preperfect</span>.<span class=\"name\">open_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hC : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L86-L87","name":"preperfect_iff_nhds","line":86,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#preperfect_iff_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#preperfect_iff_nhds\"><span class=\"name\">preperfect_iff_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">C</span>, <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">∃ y ∈ <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">C</span></span>, <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L83-L83","name":"Perfect.acc","line":83,"kind":"def","docLink":"./Mathlib/Topology/Perfect.html#Perfect.acc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.acc\"><span class=\"name\">Perfect</span>.<span class=\"name\">acc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L82-L82","name":"Perfect.closed","line":82,"kind":"def","docLink":"./Mathlib/Topology/Perfect.html#Perfect.closed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.closed\"><span class=\"name\">Perfect</span>.<span class=\"name\">closed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L81-L81","name":"Perfect.mk","line":81,"kind":"ctor","docLink":"./Mathlib/Topology/Perfect.html#Perfect.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect.mk\"><span class=\"name\">Perfect</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(closed : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(acc : <span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Preperfect\">Preperfect</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Perfect.html#Perfect\">Perfect</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L81-L83","name":"Perfect","line":81,"kind":"structure","docLink":"./Mathlib/Topology/Perfect.html#Perfect","doc":"A set `C` is called perfect if it is closed and all of its\npoints are accumulation points of itself.\nNote that we do not require `C` to be nonempty."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Perfect\"><span class=\"name\">Perfect</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L74-L75","name":"Preperfect","line":74,"kind":"def","docLink":"./Mathlib/Topology/Perfect.html#Preperfect","doc":"A set `C` is preperfect if all of its points are accumulation points of itself.\nIf `C` is nonempty and `α` is a T1 space, this is equivalent to the closure of `C` being perfect.\nSee `preperfect_iff_perfect_closure`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#Preperfect\"><span class=\"name\">Preperfect</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Topology/Perfect.lean#L62-L68","name":"AccPt.nhds_inter","line":62,"kind":"theorem","docLink":"./Mathlib/Topology/Perfect.html#AccPt.nhds_inter","doc":"If `x` is an accumulation point of a set `C` and `U` is a neighborhood of `x`,\nthen `x` is an accumulation point of `U ∩ C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Perfect.html#AccPt.nhds_inter\"><span class=\"name\">AccPt</span>.<span class=\"name\">nhds_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_acc : <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#AccPt\">AccPt</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#AccPt\">AccPt</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">C</span></span>)</span></span>)</span></span></div></div>"}]}