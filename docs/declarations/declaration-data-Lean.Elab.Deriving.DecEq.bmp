{"name":"Lean.Elab.Deriving.DecEq","instances":[],"imports":["Init","Lean.Meta.Transform","Lean.Meta.Inductive","Lean.Elab.Deriving.Basic","Lean.Elab.Deriving.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L189-L194","name":"Lean.Elab.Deriving.DecEq.mkDecEqInstanceHandler","line":189,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqInstanceHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqInstanceHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkDecEqInstanceHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L172-L187","name":"Lean.Elab.Deriving.DecEq.mkDecEqEnum","line":172,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqEnum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqEnum\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkDecEqEnum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L149-L170","name":"Lean.Elab.Deriving.DecEq.mkEnumOfNatThm","line":149,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNatThm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNatThm\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkEnumOfNatThm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L129-L138","name":"Lean.Elab.Deriving.DecEq.mkEnumOfNat.mkDecTree","line":129,"kind":"opaque","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNat.mkDecTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNat.mkDecTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkEnumOfNat</span>.<span class=\"name\">mkDecTree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(enumType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctors : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cond : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(low : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(high : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L123-L147","name":"Lean.Elab.Deriving.DecEq.mkEnumOfNat","line":123,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkEnumOfNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkEnumOfNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L110-L121","name":"Lean.Elab.Deriving.DecEq.mkDecEq","line":110,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkDecEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L102-L106","name":"Lean.Elab.Deriving.DecEq.mkDecEqCmds","line":102,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqCmds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqCmds\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkDecEqCmds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L94-L100","name":"Lean.Elab.Deriving.DecEq.mkAuxFunctions","line":94,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkAuxFunctions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkAuxFunctions\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkAuxFunctions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`command</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L87-L92","name":"Lean.Elab.Deriving.DecEq.mkAuxFunction","line":87,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkAuxFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkAuxFunction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkAuxFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(auxFunName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`command</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L39-L85","name":"Lean.Elab.Deriving.DecEq.mkMatch.mkAlts","line":39,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch.mkAlts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch.mkAlts\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkMatch</span>.<span class=\"name\">mkAlts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Term.matchAlt</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L23-L37","name":"Lean.Elab.Deriving.DecEq.mkMatch.mkSameCtorRhs","line":23,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch.mkSameCtorRhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch.mkSameCtorRhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkMatch</span>.<span class=\"name\">mkSameCtorRhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Ident\">Lean.Ident</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L18-L85","name":"Lean.Elab.Deriving.DecEq.mkMatch","line":18,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkMatch\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkMatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Context\">Lean.Elab.Deriving.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(header : <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Lean.Elab.Deriving.Header</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/b614ff1d12bc38f39077f9ce9f2d48b42c003ad0/src/Lean/Elab/Deriving/DecEq.lean#L15-L16","name":"Lean.Elab.Deriving.DecEq.mkDecEqHeader","line":15,"kind":"def","docLink":"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Deriving/DecEq.html#Lean.Elab.Deriving.DecEq.mkDecEqHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Deriving</span>.<span class=\"name\">DecEq</span>.<span class=\"name\">mkDecEqHeader</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indVal : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/Deriving/Util.html#Lean.Elab.Deriving.Header\">Lean.Elab.Deriving.Header</a></span></div></div>"}]}