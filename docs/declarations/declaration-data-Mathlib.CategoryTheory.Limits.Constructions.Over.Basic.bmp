{"name":"Mathlib.CategoryTheory.Limits.Constructions.Over.Basic","instances":[{"typeNames":["CategoryTheory.Over"],"name":"CategoryTheory.Over.instHasPullbacksOverInstCategoryOver","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["CategoryTheory.Over"],"name":"CategoryTheory.Over.instHasEqualizersOverInstCategoryOver","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["CategoryTheory.Over"],"name":"CategoryTheory.Over.hasFiniteLimits","className":"CategoryTheory.Limits.HasFiniteLimits"},{"typeNames":["CategoryTheory.Over"],"name":"CategoryTheory.Over.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Connected","Mathlib.CategoryTheory.Limits.Constructions.Over.Products","Mathlib.CategoryTheory.Limits.Constructions.Over.Connected","Mathlib.CategoryTheory.Limits.Constructions.LimitsOfProductsAndEqualizers","Mathlib.CategoryTheory.Limits.Constructions.Equalizers"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.lean#L55-L60","name":"CategoryTheory.Over.hasLimits","line":55,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.hasLimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Over</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/WidePullbacks.html#CategoryTheory.Limits.HasWidePullbacks\">CategoryTheory.Limits.HasWidePullbacks</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfSize\">CategoryTheory.Limits.HasLimitsOfSize.{w, w, v, max u v}</a>                <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.lean#L47-L52","name":"CategoryTheory.Over.hasFiniteLimits","line":47,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.hasFiniteLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.hasFiniteLimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Over</span>.<span class=\"name\">hasFiniteLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteWidePullbacks\">CategoryTheory.Limits.HasFiniteWidePullbacks</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteLimits\">CategoryTheory.Limits.HasFiniteLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.lean#L41-L45","name":"CategoryTheory.Over.instHasEqualizersOverInstCategoryOver","line":41,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.instHasEqualizersOverInstCategoryOver","doc":"Make sure we can derive equalizers in `Over B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.instHasEqualizersOverInstCategoryOver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Over</span>.<span class=\"name\">instHasEqualizersOverInstCategoryOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasEqualizers\">CategoryTheory.Limits.HasEqualizers</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.HasEqualizers\">CategoryTheory.Limits.HasEqualizers</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.lean#L34-L38","name":"CategoryTheory.Over.instHasPullbacksOverInstCategoryOver","line":34,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.instHasPullbacksOverInstCategoryOver","doc":"Make sure we can derive pullbacks in `Over B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Constructions/Over/Basic.html#CategoryTheory.Over.instHasPullbacksOverInstCategoryOver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Over</span>.<span class=\"name\">instHasPullbacksOverInstCategoryOver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullbacks.html#CategoryTheory.Limits.HasPullbacks\">CategoryTheory.Limits.HasPullbacks</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullbacks.html#CategoryTheory.Limits.HasPullbacks\">CategoryTheory.Limits.HasPullbacks</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">B</span></span>)</span></span></div></div>"}]}