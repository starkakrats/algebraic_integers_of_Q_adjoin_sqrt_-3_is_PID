{"name":"Mathlib.Order.Category.BoolAlg","instances":[{"typeNames":["BoolAlg","_builtin_typeu"],"name":"BoolAlg.instCoeSortBoolAlgType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"BoolAlg.instBooleanAlgebra","className":"BooleanAlgebra"},{"typeNames":["BoolAlg"],"name":"BoolAlg.instInhabitedBoolAlg","className":"Inhabited"},{"typeNames":["BoolAlg"],"name":"BoolAlg.instLargeCategoryBoolAlg","className":"CategoryTheory.Category"},{"typeNames":["BoolAlg"],"name":"BoolAlg.instConcreteCategoryBoolAlgInstLargeCategoryBoolAlg","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["BoolAlg","BddDistLat"],"name":"BoolAlg.hasForgetToBddDistLat","className":"CategoryTheory.HasForget₂"},{"typeNames":["BoolAlg","HeytAlg"],"name":"BoolAlg.hasForgetToHeytAlg","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.Order.Category.HeytAlg"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L113-L116","name":"boolAlg_dual_comp_forget_to_bddDistLat","line":113,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#boolAlg_dual_comp_forget_to_bddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#boolAlg_dual_comp_forget_to_bddDistLat\"><span class=\"name\">boolAlg_dual_comp_forget_to_bddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></span>)</span> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat.dual\">BddDistLat.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L104-L108","name":"BoolAlg.dualEquiv","line":104,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv","doc":"The equivalence between `BoolAlg` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L103-L103","name":"BoolAlg.dualEquiv_functor","line":103,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_functor\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv\">BoolAlg.dualEquiv</a>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L103-L103","name":"BoolAlg.dualEquiv_inverse","line":103,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv_inverse\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dualEquiv\">BoolAlg.dualEquiv</a>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L97-L99","name":"BoolAlg.dual","line":97,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L96-L96","name":"BoolAlg.dual_map","line":96,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_map\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat.toBddLat\">BddDistLat.toBddLat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\">BoolAlg.toBddDistLat</a> <span class=\"fn\">X</span></span>)</span></span>)</span>.toLat</span></span>\n  <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat.toBddLat\">BddDistLat.toBddLat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\">BoolAlg.toBddDistLat</a> <span class=\"fn\">Y</span></span>)</span></span>)</span>.toLat</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">BoundedLatticeHom.dual</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L96-L96","name":"BoolAlg.dual_obj","line":96,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual_obj\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">dual_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.dual\">BoolAlg.dual</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\">BoolAlg.of</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L88-L92","name":"BoolAlg.Iso.mk","line":88,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk","doc":"Constructs an equivalence between Boolean algebras from an order isomorphism between them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L87-L87","name":"BoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun","line":87,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom_toLatticeHom_toSupHom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk\">BoolAlg.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.hom</span>.toSupHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L87-L87","name":"BoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun","line":87,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv_toLatticeHom_toSupHom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.Iso.mk\">BoolAlg.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.inv</span>.toSupHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L75-L81","name":"BoolAlg.hasForgetToHeytAlg","line":75,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/HeytAlg.html#HeytAlg\">HeytAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L74-L74","name":"BoolAlg.hasForgetToHeytAlg_forget₂_map_toFun","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_map_toFun\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg_forget₂_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.map <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L74-L74","name":"BoolAlg.hasForgetToHeytAlg_forget₂_obj_str","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_str\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg_forget₂_obj_str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.obj <span class=\"fn\">X</span></span>)</span>.str</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inferInstance</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L74-L74","name":"BoolAlg.hasForgetToHeytAlg_forget₂_obj_α","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_α","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToHeytAlg_forget₂_obj_α\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToHeytAlg_forget₂_obj_α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.obj <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L66-L67","name":"BoolAlg.hasForgetToBddDistLat","line":66,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.hasForgetToBddDistLat\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">hasForgetToBddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L63-L64","name":"BoolAlg.instConcreteCategoryBoolAlgInstLargeCategoryBoolAlg","line":63,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instConcreteCategoryBoolAlgInstLargeCategoryBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instConcreteCategoryBoolAlgInstLargeCategoryBoolAlg\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instConcreteCategoryBoolAlgInstLargeCategoryBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L60-L61","name":"BoolAlg.instLargeCategoryBoolAlg","line":60,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instLargeCategoryBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instLargeCategoryBoolAlg\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instLargeCategoryBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L56-L57","name":"BoolAlg.coe_toBddDistLat","line":56,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_toBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_toBddDistLat\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">coe_toBddDistLat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\">BoolAlg.toBddDistLat</a> <span class=\"fn\">X</span></span>)</span>.toDistLat</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L51-L52","name":"BoolAlg.toBddDistLat","line":51,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat","doc":"Turn a `BoolAlg` into a `BddDistLat` by forgetting its complement operation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">toBddDistLat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat\">BddDistLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L47-L48","name":"BoolAlg.instInhabitedBoolAlg","line":47,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instInhabitedBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instInhabitedBoolAlg\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instInhabitedBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L43-L44","name":"BoolAlg.coe_of","line":43,"kind":"theorem","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.coe_of\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\">BoolAlg.of</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L38-L39","name":"BoolAlg.of","line":38,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of","doc":"Construct a bundled `BoolAlg` from a `BooleanAlgebra`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.of\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L34-L35","name":"BoolAlg.instBooleanAlgebra","line":34,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instBooleanAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instBooleanAlgebra\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instBooleanAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L31-L32","name":"BoolAlg.instCoeSortBoolAlgType","line":31,"kind":"instance","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instCoeSortBoolAlgType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.instCoeSortBoolAlgType\"><span class=\"name\">BoolAlg</span>.<span class=\"name\">instCoeSortBoolAlgType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/BoolAlg.lean#L25-L26","name":"BoolAlg","line":25,"kind":"def","docLink":"./Mathlib/Order/Category/BoolAlg.html#BoolAlg","doc":"The category of boolean algebras. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\"><span class=\"name\">BoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}