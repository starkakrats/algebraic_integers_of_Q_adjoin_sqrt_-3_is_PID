{"name":"Mathlib.Combinatorics.Quiver.Arborescence","instances":[{"typeNames":["Quiver.Path"],"name":"Quiver.instUniquePathRoot","className":"Unique"},{"typeNames":["WideSubquiver.toType"],"name":"Quiver.geodesicArborescence","className":"Quiver.Arborescence"}],"imports":["Init","Mathlib.Combinatorics.Quiver.Path","Mathlib.Combinatorics.Quiver.Subquiver","Mathlib.Data.Nat.Defs","Mathlib.Order.WellFounded"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L119-L133","name":"Quiver.geodesicArborescence","line":119,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicArborescence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicArborescence\"><span class=\"name\">Quiver</span>.<span class=\"name\">geodesicArborescence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">Quiver.RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.toType\">WideSubquiver.toType</a> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree\">Quiver.geodesicSubtree</a> <span class=\"fn\">r</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L115-L116","name":"Quiver.geodesicSubtree","line":115,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree","doc":"A subquiver which by construction is an arborescence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree\"><span class=\"name\">Quiver</span>.<span class=\"name\">geodesicSubtree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">Quiver.RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L110-L111","name":"Quiver.shortest_path_spec","line":110,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortest_path_spec","doc":"The length of a path is at least the length of the shortest path "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortest_path_spec\"><span class=\"name\">Quiver</span>.<span class=\"name\">shortest_path_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">Quiver.RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length\">Quiver.Path.length</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath\">Quiver.shortestPath</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">â‰¤</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length\">Quiver.Path.length</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L105-L106","name":"Quiver.shortestPath","line":105,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath","doc":"A path from `r` of minimal length. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath\"><span class=\"name\">Quiver</span>.<span class=\"name\">shortestPath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">Quiver.RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L95-L95","name":"Quiver.RootedConnected.nonempty_path","line":95,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.nonempty_path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.nonempty_path\"><span class=\"name\">Quiver</span>.<span class=\"name\">RootedConnected</span>.<span class=\"name\">nonempty_path</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">Quiver.RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L94-L94","name":"Quiver.RootedConnected.mk","line":94,"kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.mk\"><span class=\"name\">Quiver</span>.<span class=\"name\">RootedConnected</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(nonempty_path : <span class=\"fn\">âˆ€ (<span class=\"fn\">b</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">Quiver.RootedConnected</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L94-L95","name":"Quiver.RootedConnected","line":94,"kind":"class","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected","doc":"`RootedConnected r` means that there is a path from `r` to any other vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\"><span class=\"name\">Quiver</span>.<span class=\"name\">RootedConnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L61-L90","name":"Quiver.arborescenceMk","line":61,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.arborescenceMk","doc":"To show that `[Quiver V]` is an arborescence with root `r : V`, it suffices to\n- provide a height function `V â†’ â„•` such that every arrow goes from a\n  lower vertex to a higher vertex,\n- show that every vertex has at most one arrow to it, and\n- show that every vertex other than `r` has an arrow to it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.arborescenceMk\"><span class=\"name\">Quiver</span>.<span class=\"name\">arborescenceMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(height : <span class=\"fn\"><span class=\"fn\">V</span> â†’ <a href=\"./Init/Prelude.html#Nat\">â„•</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(height_lt : <span class=\"fn\">âˆ€ â¦ƒ<span class=\"fn\">a </span>b : <span class=\"fn\">V</span>â¦„, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">b</span></span>)</span> â†’ <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">height</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">height</span> <span class=\"fn\">b</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(unique_arrow : <span class=\"fn\">âˆ€ â¦ƒ<span class=\"fn\">a </span>b c : <span class=\"fn\">V</span>â¦„ (<span class=\"fn\">e</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">c</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">c</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#And\">âˆ§</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">e</span> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(root_or_arrow : <span class=\"fn\">âˆ€ (<span class=\"fn\">b</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Or\">âˆ¨</a> <span class=\"fn\">âˆƒ (a : <span class=\"fn\">V</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">âŸ¶</a> <span class=\"fn\">b</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L53-L54","name":"Quiver.instUniquePathRoot","line":53,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.instUniquePathRoot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.instUniquePathRoot\"><span class=\"name\">Quiver</span>.<span class=\"name\">instUniquePathRoot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root\">Quiver.root</a> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L49-L50","name":"Quiver.root","line":49,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root","doc":"The root of an arborescence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root\"><span class=\"name\">Quiver</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L45-L45","name":"Quiver.Arborescence.uniquePath","line":45,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.uniquePath","doc":"There is a unique path from the root to any other vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.uniquePath\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span>.<span class=\"name\">uniquePath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">Quiver.Arborescence.root</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L43-L43","name":"Quiver.Arborescence.root","line":43,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.root","doc":"The root of the arborescence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.root\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span>.<span class=\"name\">root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L41-L41","name":"Quiver.Arborescence.mk","line":41,"kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.mk\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(root : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(uniquePath : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">V</span>) â†’ <span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Quiver.Path</a> <span class=\"fn\">root</span> <span class=\"fn\">b</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Quiver.Arborescence</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Combinatorics/Quiver/Arborescence.lean#L41-L45","name":"Quiver.Arborescence","line":41,"kind":"class","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence","doc":"A quiver is an arborescence when there is a unique path from the default vertex\nto every other vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(V : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"}]}