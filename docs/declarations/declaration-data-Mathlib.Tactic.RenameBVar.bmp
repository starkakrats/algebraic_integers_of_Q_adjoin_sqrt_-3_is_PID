{"name":"Mathlib.Tactic.RenameBVar","instances":[],"imports":["Init","Lean","Mathlib.Util.Tactic","Mathlib.Lean.Expr.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/RenameBVar.lean#L25-L47","name":"Mathlib.Tactic.«tacticRename_bvar_→__»","line":25,"kind":"def","docLink":"./Mathlib/Tactic/RenameBVar.html#Mathlib.Tactic.«tacticRename_bvar_→__»","doc":"* `rename_bvar old new` renames all bound variables named `old` to `new` in the target.\n* `rename_bvar old new at h` does the same in hypothesis `h`.\n\n```lean\nexample (P : ℕ → ℕ → Prop) (h : ∀ n, ∃ m, P n m) : ∀ l, ∃ m, P l m :=\nbegin\n  rename_bvar n q at h, -- h is now ∀ (q : ℕ), ∃ (m : ℕ), P q m,\n  rename_bvar m n, -- target is now ∀ (l : ℕ), ∃ (n : ℕ), P k n,\n  exact h -- Lean does not care about those bound variable names\nend\n```\nNote: name clashes are resolved automatically.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/RenameBVar.html#Mathlib.Tactic.«tacticRename_bvar_→__»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«tacticRename_bvar_→__»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/RenameBVar.lean#L22-L23","name":"Mathlib.Tactic.renameBVarTarget","line":22,"kind":"def","docLink":"./Mathlib/Tactic/RenameBVar.html#Mathlib.Tactic.renameBVarTarget","doc":"Renames a bound variable in the target. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/RenameBVar.html#Mathlib.Tactic.renameBVarTarget\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">renameBVarTarget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(old : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(new : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Tactic/RenameBVar.lean#L16-L19","name":"Mathlib.Tactic.renameBVarHyp","line":16,"kind":"def","docLink":"./Mathlib/Tactic/RenameBVar.html#Mathlib.Tactic.renameBVarHyp","doc":"Renames a bound variable in a hypothesis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/RenameBVar.html#Mathlib.Tactic.renameBVarHyp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">renameBVarHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(old : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(new : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}