{"name":"Mathlib.CategoryTheory.Category.Cat","instances":[{"typeNames":["CategoryTheory.Cat"],"name":"CategoryTheory.Cat.instInhabitedCat","className":"Inhabited"},{"typeNames":["CategoryTheory.Cat","_builtin_typeu"],"name":"CategoryTheory.Cat.instCoeSortCatType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"CategoryTheory.Cat.str","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.Cat"],"name":"CategoryTheory.Cat.bicategory","className":"CategoryTheory.Bicategory"},{"typeNames":["CategoryTheory.Cat"],"name":"CategoryTheory.Cat.bicategory.strict","className":"CategoryTheory.Bicategory.Strict"},{"typeNames":["CategoryTheory.Cat"],"name":"CategoryTheory.Cat.category","className":"CategoryTheory.Category"},{"typeNames":["Prefunctor.obj"],"name":"CategoryTheory.Cat.instCategoryObjCatToQuiverToCategoryStructCategoryTypeToQuiverToCategoryStructTypesToPrefunctorObjects","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.typeToCat"],"name":"CategoryTheory.instFaithfulTypeTypesCatCategoryTypeToCat","className":"CategoryTheory.Faithful"},{"typeNames":["CategoryTheory.typeToCat"],"name":"CategoryTheory.instFullTypeTypesCatCategoryTypeToCat","className":"CategoryTheory.Full"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.Bundled","Mathlib.CategoryTheory.DiscreteCategory","Mathlib.CategoryTheory.Types","Mathlib.CategoryTheory.Bicategory.Strict"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L164-L175","name":"CategoryTheory.instFullTypeTypesCatCategoryTypeToCat","line":164,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.instFullTypeTypesCatCategoryTypeToCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.instFullTypeTypesCatCategoryTypeToCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFullTypeTypesCatCategoryTypeToCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat\">CategoryTheory.typeToCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L160-L162","name":"CategoryTheory.instFaithfulTypeTypesCatCategoryTypeToCat","line":160,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.instFaithfulTypeTypesCatCategoryTypeToCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.instFaithfulTypeTypesCatCategoryTypeToCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instFaithfulTypeTypesCatCategoryTypeToCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat\">CategoryTheory.typeToCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L143-L156","name":"CategoryTheory.typeToCat","line":143,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat","doc":"Embedding `Type` into `Cat` as discrete categories.\n\nThis ought to be modelled as a 2-functor!\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">typeToCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L142-L142","name":"CategoryTheory.typeToCat_obj","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">typeToCat_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat\">CategoryTheory.typeToCat</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete\">CategoryTheory.Discrete</a> <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L142-L142","name":"CategoryTheory.typeToCat_map","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">typeToCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.typeToCat\">CategoryTheory.typeToCat</a>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/DiscreteCategory.html#CategoryTheory.Discrete.functor\">CategoryTheory.Discrete.functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CategoryTheory.Discrete.mk</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L125-L130","name":"CategoryTheory.Cat.equivOfIso","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.equivOfIso","doc":"Any isomorphism in `Cat` induces an equivalence of the underlying categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.equivOfIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">equivOfIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">↑<span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L118-L118","name":"CategoryTheory.Cat.instCategoryObjCatToQuiverToCategoryStructCategoryTypeToQuiverToCategoryStructTypesToPrefunctorObjects","line":118,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.instCategoryObjCatToQuiverToCategoryStructCategoryTypeToQuiverToCategoryStructTypesToPrefunctorObjects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.instCategoryObjCatToQuiverToCategoryStructCategoryTypeToQuiverToCategoryStructTypesToPrefunctorObjects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">instCategoryObjCatToQuiverToCategoryStructCategoryTypeToQuiverToCategoryStructTypesToPrefunctorObjects</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.objects\">CategoryTheory.Cat.objects</a>.obj <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L111-L113","name":"CategoryTheory.Cat.objects","line":111,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.objects","doc":"Functor that gets the set of objects of a category. It is not\ncalled `forget`, because it is not a faithful functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.objects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">objects</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L103-L105","name":"CategoryTheory.Cat.comp_map","line":103,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.comp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.comp_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">comp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><span class=\"fn\">D</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">↑<span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">↑<span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.map <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.map <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L97-L98","name":"CategoryTheory.Cat.comp_obj","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.comp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.comp_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">comp_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{D : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><span class=\"fn\">D</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\">↑<span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">G</span>.obj <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj <span class=\"fn\">X</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L91-L92","name":"CategoryTheory.Cat.id_map","line":91,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.id_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.id_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">id_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <span class=\"fn\">↑<span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\">↑<span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">C</span></span>)</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L85-L86","name":"CategoryTheory.Cat.category","line":85,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.category","doc":"Category structure on `Cat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L77-L80","name":"CategoryTheory.Cat.bicategory.strict","line":77,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.bicategory.strict","doc":"`Cat` is a strict bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.bicategory.strict\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">bicategory</span>.<span class=\"name\">strict</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Strict.html#CategoryTheory.Bicategory.Strict\">CategoryTheory.Bicategory.Strict</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L60-L72","name":"CategoryTheory.Cat.bicategory","line":60,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.bicategory","doc":"Bicategory structure on `Cat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.bicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">bicategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L54-L55","name":"CategoryTheory.Cat.of","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of","doc":"Construct a bundled `Cat` from the underlying type and the typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L48-L49","name":"CategoryTheory.Cat.str","line":48,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.str\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">↑<span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L45-L46","name":"CategoryTheory.Cat.instCoeSortCatType","line":45,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.instCoeSortCatType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.instCoeSortCatType\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">instCoeSortCatType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L41-L42","name":"CategoryTheory.Cat.instInhabitedCat","line":41,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.instInhabitedCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.instInhabitedCat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span>.<span class=\"name\">instInhabitedCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/CategoryTheory/Category/Cat.lean#L34-L35","name":"CategoryTheory.Cat","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat","doc":"Category of categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Cat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (u + 1) u (v + 1))</div></div>"}]}