{"name":"Mathlib.NumberTheory.Padics.PadicNorm","instances":[{"typeNames":["padicNorm"],"name":"padicNorm.instIsAbsoluteValueRatInstOrderedSemiringRatSemiringPadicNorm","className":"IsAbsoluteValue"}],"imports":["Init","Mathlib.Algebra.Order.Field.Power","Mathlib.NumberTheory.Padics.PadicVal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L352-L356","name":"padicNorm.sum_le'","line":352,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_le'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_le'\"><span class=\"name\">padicNorm</span>.<span class=\"name\">sum_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L345-L349","name":"padicNorm.sum_lt'","line":345,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_lt'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_lt'\"><span class=\"name\">padicNorm</span>.<span class=\"name\">sum_lt'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">t</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L331-L342","name":"padicNorm.sum_le","line":331,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_le\"><span class=\"name\">padicNorm</span>.<span class=\"name\">sum_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.Nonempty</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L317-L328","name":"padicNorm.sum_lt","line":317,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sum_lt\"><span class=\"name\">padicNorm</span>.<span class=\"name\">sum_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.Nonempty</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">t</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">s</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L309-L313","name":"padicNorm.not_int_of_not_padic_int","line":309,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.not_int_of_not_padic_int","doc":"If a rational is not a p-adic integer, it is not an integer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.not_int_of_not_padic_int\"><span class=\"name\">padicNorm</span>.<span class=\"name\">not_int_of_not_padic_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Rat/Basic.html#Rat.isInt\">Rat.isInt</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L304-L305","name":"padicNorm.nat_lt_one_iff","line":304,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nat_lt_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nat_lt_one_iff\"><span class=\"name\">padicNorm</span>.<span class=\"name\">nat_lt_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L300-L301","name":"padicNorm.nat_eq_one_iff","line":300,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nat_eq_one_iff","doc":"The `p`-adic norm of a natural `m` is one iff `p` doesn't divide `m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nat_eq_one_iff\"><span class=\"name\">padicNorm</span>.<span class=\"name\">nat_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L295-L296","name":"padicNorm.of_nat","line":295,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.of_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.of_nat\"><span class=\"name\">padicNorm</span>.<span class=\"name\">of_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L290-L292","name":"padicNorm.int_lt_one_iff","line":290,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.int_lt_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.int_lt_one_iff\"><span class=\"name\">padicNorm</span>.<span class=\"name\">int_lt_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L269-L287","name":"padicNorm.int_eq_one_iff","line":269,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.int_eq_one_iff","doc":"The `p`-adic norm of an integer `m` is one iff `p` doesn't divide `m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.int_eq_one_iff\"><span class=\"name\">padicNorm</span>.<span class=\"name\">int_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L255-L265","name":"padicNorm.dvd_iff_norm_le","line":255,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.dvd_iff_norm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.dvd_iff_norm_le\"><span class=\"name\">padicNorm</span>.<span class=\"name\">dvd_iff_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L248-L253","name":"padicNorm.instIsAbsoluteValueRatInstOrderedSemiringRatSemiringPadicNorm","line":248,"kind":"instance","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.instIsAbsoluteValueRatInstOrderedSemiringRatSemiringPadicNorm","doc":"The `p`-adic norm is an absolute value: positive-definite and multiplicative, satisfying the\ntriangle inequality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.instIsAbsoluteValueRatInstOrderedSemiringRatSemiringPadicNorm\"><span class=\"name\">padicNorm</span>.<span class=\"name\">instIsAbsoluteValueRatInstOrderedSemiringRatSemiringPadicNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue.html#IsAbsoluteValue\">IsAbsoluteValue</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L225-L243","name":"padicNorm.add_eq_max_of_ne","line":225,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.add_eq_max_of_ne","doc":"If the `p`-adic norms of `q` and `r` are different, then the norm of `q + r` is equal to the max\nof the norms of `q` and `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.add_eq_max_of_ne\"><span class=\"name\">padicNorm</span>.<span class=\"name\">add_eq_max_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L218-L220","name":"padicNorm.sub","line":218,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sub","doc":"The `p`-adic norm of a difference is at most the max of each component. Restates the archimedean\nproperty of the `p`-adic norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.sub\"><span class=\"name\">padicNorm</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L209-L213","name":"padicNorm.triangle_ineq","line":209,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.triangle_ineq","doc":"The `p`-adic norm respects the triangle inequality: the norm of `p + q` is at most the norm of\n`p` plus the norm of `q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.triangle_ineq\"><span class=\"name\">padicNorm</span>.<span class=\"name\">triangle_ineq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L199-L204","name":"padicNorm.nonarchimedean","line":199,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nonarchimedean","doc":"The `p`-adic norm is nonarchimedean: the norm of `p + q` is at most the max of the norm of `p`\nand the norm of `q`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nonarchimedean\"><span class=\"name\">padicNorm</span>.<span class=\"name\">nonarchimedean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L164-L174","name":"padicNorm.of_int","line":164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.of_int","doc":"The `p`-adic norm of an integer is at most `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.of_int\"><span class=\"name\">padicNorm</span>.<span class=\"name\">of_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L158-L160","name":"padicNorm.div","line":158,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.div","doc":"The `p`-adic norm respects division. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.div\"><span class=\"name\">padicNorm</span>.<span class=\"name\">div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L147-L153","name":"padicNorm.mul","line":147,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.mul","doc":"The `p`-adic norm is multiplicative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.mul\"><span class=\"name\">padicNorm</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L137-L142","name":"padicNorm.zero_of_padicNorm_eq_zero","line":137,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.zero_of_padicNorm_eq_zero","doc":"If the `p`-adic norm of `q` is 0, then `q` is `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.zero_of_padicNorm_eq_zero\"><span class=\"name\">padicNorm</span>.<span class=\"name\">zero_of_padicNorm_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L130-L133","name":"padicNorm.nonzero","line":130,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nonzero","doc":"If `q ≠ 0`, then `padicNorm p q ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nonzero\"><span class=\"name\">padicNorm</span>.<span class=\"name\">nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L123-L124","name":"padicNorm.neg","line":123,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.neg","doc":"`padicNorm p` is symmetric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.neg\"><span class=\"name\">padicNorm</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L117-L118","name":"padicNorm.values_discrete","line":117,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.values_discrete","doc":"`padicNorm p q` takes discrete values `p ^ -z` for `z : ℤ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.values_discrete\"><span class=\"name\">padicNorm</span>.<span class=\"name\">values_discrete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L112-L113","name":"padicNorm.padicNorm_p_lt_one_of_prime","line":112,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p_lt_one_of_prime","doc":"The `p`-adic norm of `p` is less than `1` if `p` is prime.\n\nSee also `padicNorm.padicNorm_p_lt_one` for a version assuming `1 < p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p_lt_one_of_prime\"><span class=\"name\">padicNorm</span>.<span class=\"name\">padicNorm_p_lt_one_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L104-L106","name":"padicNorm.padicNorm_p_lt_one","line":104,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p_lt_one","doc":"The `p`-adic norm of `p` is less than `1` if `1 < p`.\n\nSee also `padicNorm.padicNorm_p_lt_one_of_prime` for a version assuming `p` is prime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p_lt_one\"><span class=\"name\">padicNorm</span>.<span class=\"name\">padicNorm_p_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L94-L98","name":"padicNorm.padicNorm_of_prime_of_ne","line":94,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_of_prime_of_ne","doc":"The `p`-adic norm of `q` is `1` if `q` is prime and not equal to `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_of_prime_of_ne\"><span class=\"name\">padicNorm</span>.<span class=\"name\">padicNorm_of_prime_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[p_prime : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[q_prime : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">q</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(neq : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L89-L90","name":"padicNorm.padicNorm_p_of_prime","line":89,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p_of_prime","doc":"The `p`-adic norm of `p` is `p⁻¹` if `p` is prime.\n\nSee also `padicNorm.padicNorm_p` for a version assuming `1 < p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p_of_prime\"><span class=\"name\">padicNorm</span>.<span class=\"name\">padicNorm_p_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">p</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L81-L82","name":"padicNorm.padicNorm_p","line":81,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p","doc":"The `p`-adic norm of `p` is `p⁻¹` if `p > 1`.\n\nSee also `padicNorm.padicNorm_p_of_prime` for a version assuming `p` is prime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.padicNorm_p\"><span class=\"name\">padicNorm</span>.<span class=\"name\">padicNorm_p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">p</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L75-L75","name":"padicNorm.one","line":75,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.one","doc":"The `p`-adic norm of `1` is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.one\"><span class=\"name\">padicNorm</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L70-L70","name":"padicNorm.zero","line":70,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.zero","doc":"The `p`-adic norm of `0` is `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.zero\"><span class=\"name\">padicNorm</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L59-L65","name":"padicNorm.nonneg","line":59,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nonneg","doc":"The `p`-adic norm is nonnegative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.nonneg\"><span class=\"name\">padicNorm</span>.<span class=\"name\">nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L54-L55","name":"padicNorm.eq_zpow_of_nonzero","line":54,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.eq_zpow_of_nonzero","doc":"Unfolds the definition of the `p`-adic norm of `q` when `q ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm.eq_zpow_of_nonzero\"><span class=\"name\">padicNorm</span>.<span class=\"name\">eq_zpow_of_nonzero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\">padicNorm</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Padics/PadicVal.html#padicValRat\">padicValRat</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/Padics/PadicNorm.lean#L42-L43","name":"padicNorm","line":42,"kind":"def","docLink":"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm","doc":"If `q ≠ 0`, the `p`-adic norm of a rational `q` is `p ^ (-padicValRat p q)`.\nIf `q = 0`, the `p`-adic norm of `q` is `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Padics/PadicNorm.html#padicNorm\"><span class=\"name\">padicNorm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></div></div>"}]}