{"name":"Mathlib.Data.Nat.Factorial.DoubleFactorial","instances":[],"imports":["Init","Mathlib.Data.Nat.Factorial.Basic","Mathlib.Algebra.BigOperators.Basic","Mathlib.Tactic.Ring","Mathlib.Tactic.Positivity.Core"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L97-L104","name":"Mathlib.Meta.Positivity.evalDoubleFactorial","line":97,"kind":"def","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Mathlib.Meta.Positivity.evalDoubleFactorial","doc":"Extension for `Nat.doubleFactorial`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Mathlib.Meta.Positivity.evalDoubleFactorial\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalDoubleFactorial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">Mathlib.Meta.Positivity.PositivityExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L81-L87","name":"Nat.doubleFactorial_eq_prod_odd","line":81,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_eq_prod_odd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_eq_prod_odd\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_eq_prod_odd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L73-L78","name":"Nat.doubleFactorial_eq_prod_even","line":73,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_eq_prod_even","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_eq_prod_even\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_eq_prod_even</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L63-L68","name":"Nat.doubleFactorial_two_mul","line":63,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_two_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_two_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_two_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">Nat.factorial</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L58-L61","name":"Nat.doubleFactorial_le_factorial","line":58,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_le_factorial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_le_factorial\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_le_factorial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">Nat.factorial</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L51-L55","name":"Nat.factorial_eq_mul_doubleFactorial","line":51,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.factorial_eq_mul_doubleFactorial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.factorial_eq_mul_doubleFactorial\"><span class=\"name\">Nat</span>.<span class=\"name\">factorial_eq_mul_doubleFactorial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">Nat.factorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L48-L48","name":"Nat.doubleFactorial_add_one","line":48,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_add_one\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L44-L45","name":"Nat.doubleFactorial_add_two","line":44,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_add_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_add_two\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_add_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L40-L42","name":"Nat.doubleFactorial_pos","line":40,"kind":"theorem","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial_pos\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\">Nat.doubleFactorial</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L38-L38","name":"Nat.«term_‼»","line":38,"kind":"def","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.«term_‼»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.«term_‼»\"><span class=\"name\">Nat</span>.<span class=\"name\">«term_‼»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Data/Nat/Factorial/DoubleFactorial.lean#L31-L34","name":"Nat.doubleFactorial","line":31,"kind":"def","docLink":"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial","doc":"`Nat.doubleFactorial n` is the double factorial of `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/Factorial/DoubleFactorial.html#Nat.doubleFactorial\"><span class=\"name\">Nat</span>.<span class=\"name\">doubleFactorial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}