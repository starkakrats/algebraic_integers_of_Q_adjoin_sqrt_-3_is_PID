{"name":"Mathlib.NumberTheory.EulerProduct.Basic","instances":[],"imports":["Init","Mathlib.Analysis.Normed.Field.InfiniteSum","Mathlib.Analysis.SpecificLimits.Normed","Mathlib.NumberTheory.ArithmeticFunction","Mathlib.NumberTheory.SmoothNumbers"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L184-L191","name":"EulerProduct.eulerProduct_completely_multiplicative","line":184,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.eulerProduct_completely_multiplicative","doc":"The *Euler Product* for completely multiplicative functions.\nIf `f : ℕ →*₀ F`, where `F` is a complete normed field\nand `‖f ·‖` is summable, then `∏' p : {p : ℕ | p.Prime}, (1 - f p)⁻¹ = ∑' n, f n`.\nSince there are no infinite products yet in Mathlib, we state it in the form of\nconvergence of finite partial products. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.eulerProduct_completely_multiplicative\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">eulerProduct_completely_multiplicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidWithZeroHom\">→*₀</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L172-L175","name":"EulerProduct.prod_primesBelow_geometric_eq_tsum_smoothNumbers","line":172,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.prod_primesBelow_geometric_eq_tsum_smoothNumbers","doc":"A version of `EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_geometric`\nin terms of the value of the series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.prod_primesBelow_geometric_eq_tsum_smoothNumbers\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">prod_primesBelow_geometric_eq_tsum_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L158-L168","name":"EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_geometric","line":158,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_geometric","doc":"Given a (completely) multiplicative function `f : ℕ → F`, where `F` is a normed field,\nsuch that `‖f p‖ < 1` for all primes `p`, we can express the sum of `f n` over all `N`-smooth\npositive integers `n` as a product of `(1 - f p)⁻¹` over the primes `p < N`. At the same time,\nwe show that the sum involved converges absolutely. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_geometric\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">summable_and_hasSum_smoothNumbers_prod_primesBelow_geometric</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#HasSum\">HasSum</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L135-L138","name":"Nat.ArithmeticFunction.IsMultiplicative.eulerProduct","line":135,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#Nat.ArithmeticFunction.IsMultiplicative.eulerProduct","doc":"The *Euler Product* for a multiplicative arithmetic function `f` with values in a\ncomplete normed commutative ring `R`: if `‖f ·‖` is summable, then\n`∏' p : {p : ℕ | p.Prime}, ∑' e, f (p ^ e) = ∑' n, f n`.\nSince there are no infinite products yet in Mathlib, we state it in the form of\nconvergence of finite partial products. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#Nat.ArithmeticFunction.IsMultiplicative.eulerProduct\"><span class=\"name\">Nat</span>.<span class=\"name\">ArithmeticFunction</span>.<span class=\"name\">IsMultiplicative</span>.<span class=\"name\">eulerProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction\">Nat.ArithmeticFunction</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#Nat.ArithmeticFunction.IsMultiplicative\">Nat.ArithmeticFunction.IsMultiplicative</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">∑' (e : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span></span>)</span></span></span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L119-L127","name":"EulerProduct.eulerProduct","line":119,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.eulerProduct","doc":"The *Euler Product* for multiplicative (on coprime arguments) functions.\nIf `f : ℕ → R`, where `R` is a complete normed commutative ring, `f 0 = 0`,\n`f 1 = 1`, `f` is multiplicative on coprime arguments,\nand `‖f ·‖` is summable, then `∏' p : {p : ℕ | p.Prime}, ∑' e, f (p ^ e) = ∑' n, f n`.\nSince there are no infinite products yet in Mathlib, we state it in the form of\nconvergence of finite partial products. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.eulerProduct\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">eulerProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmul : <span class=\"fn\">∀ {<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">∑' (e : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">e</span></span>)</span></span></span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L99-L108","name":"EulerProduct.norm_tsum_smoothNumbers_sub_tsum_lt","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.norm_tsum_smoothNumbers_sub_tsum_lt","doc":"The following statement says that summing over `N`-smooth numbers\nfor large enough `N` gets us arbitrarily close to the sum over all natural numbers\n(assuming `f` is norm-summable and `f 0 = 0`; the latter since `0` is not smooth). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.norm_tsum_smoothNumbers_sub_tsum_lt\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">norm_tsum_smoothNumbers_sub_tsum_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(εpos : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (N₀ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ <span class=\"fn\">N</span> ≥ <span class=\"fn\">N₀</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">∑' (m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑' (m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L91-L94","name":"EulerProduct.prod_primesBelow_tsum_eq_tsum_smoothNumbers","line":91,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.prod_primesBelow_tsum_eq_tsum_smoothNumbers","doc":"A version of `EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_tsum`\nin terms of the value of the series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.prod_primesBelow_tsum_eq_tsum_smoothNumbers\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">prod_primesBelow_tsum_eq_tsum_smoothNumbers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmul : <span class=\"fn\">∀ {<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (m : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L64-L87","name":"EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_tsum","line":64,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_tsum","doc":"We relate a finite product over primes to an infinite sum over smooth numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#EulerProduct.summable_and_hasSum_smoothNumbers_prod_primesBelow_tsum\"><span class=\"name\">EulerProduct</span>.<span class=\"name\">summable_and_hasSum_smoothNumbers_prod_primesBelow_tsum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmul : <span class=\"fn\">∀ {<span class=\"fn\">m </span>n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\">∀ {<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#HasSum\">HasSum</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.smoothNumbers\">Nat.smoothNumbers</a> <span class=\"fn\">N</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.prod\">Finset.prod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/SmoothNumbers.html#Nat.primesBelow\">Nat.primesBelow</a> <span class=\"fn\">N</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/NumberTheory/EulerProduct/Basic.lean#L38-L43","name":"Summable.norm_lt_one","line":38,"kind":"theorem","docLink":"./Mathlib/NumberTheory/EulerProduct/Basic.html#Summable.norm_lt_one","doc":"If `f` is multiplicative and summable, then its values at natural numbers `> 1`\nhave norm strictly less than `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/EulerProduct/Basic.html#Summable.norm_lt_one\"><span class=\"name\">Summable</span>.<span class=\"name\">norm_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hsum : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Basic.html#Summable\">Summable</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"}]}