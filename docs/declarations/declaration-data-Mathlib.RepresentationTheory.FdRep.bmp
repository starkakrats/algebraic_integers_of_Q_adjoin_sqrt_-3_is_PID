{"name":"Mathlib.RepresentationTheory.FdRep","instances":[{"typeNames":["FdRep"],"name":"FdRep.instLargeCategoryFdRep","className":"CategoryTheory.Category"},{"typeNames":["FdRep"],"name":"FdRep.instConcreteCategoryFdRepInstLargeCategoryFdRep","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["FdRep"],"name":"FdRep.instPreadditiveFdRepInstLargeCategoryFdRep","className":"CategoryTheory.Preadditive"},{"typeNames":["FdRep"],"name":"FdRep.instHasFiniteLimitsFdRepInstLargeCategoryFdRep","className":"CategoryTheory.Limits.HasFiniteLimits"},{"typeNames":["FdRep"],"name":"FdRep.instLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep","className":"CategoryTheory.Linear"},{"typeNames":["FdRep","_builtin_typeu"],"name":"FdRep.instCoeSortFdRepType","className":"CoeSort"},{"typeNames":["CoeSort.coe"],"name":"FdRep.instAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","className":"AddCommGroup"},{"typeNames":["CoeSort.coe"],"name":"FdRep.instModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","className":"Module"},{"typeNames":["CoeSort.coe"],"name":"FdRep.instFiniteDimensionalCoeFdRepTypeInstCoeSortFdRepTypeToDivisionRingInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepTypeInstModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","className":"Module.Finite"},{"typeNames":["Quiver.Hom"],"name":"FdRep.instFiniteDimensionalHomFdRepToQuiverToCategoryStructInstLargeCategoryFdRepToDivisionRingHomGroupInstPreadditiveFdRepInstLargeCategoryFdRepHomModuleToSemiringToDivisionSemiringInstLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep","className":"Module.Finite"},{"typeNames":["FdRep","Rep"],"name":"FdRep.instHasForget₂FdRepRepToRingToDivisionRingInstLargeCategoryFdRepInstConcreteCategoryFdRepInstLargeCategoryFdRepInstCategoryActionModuleCatModuleCategoryOfInstConcreteCategoryActionInstCategoryActionModuleConcreteCategory","className":"CategoryTheory.HasForget₂"},{"typeNames":["FdRep"],"name":"FdRep.instHasKernelsFdRepInstLargeCategoryFdRepInstHasZeroMorphismsActionInstCategoryActionFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfPreadditiveHasZeroMorphismsInstPreadditiveFGModuleCatInstLargeCategoryFGModuleCat","className":"CategoryTheory.Limits.HasKernels"},{"typeNames":["FdRep"],"name":"FdRep.instRightRigidCategoryFdRepToMonoidToDivInvMonoidInstLargeCategoryFdRepInstMonoidalCategoryFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfInstMonoidalCategoryFGModuleCatToRingInstLargeCategoryFGModuleCatToCommRingToEuclideanDomain","className":"CategoryTheory.RightRigidCategory"}],"imports":["Init","Mathlib.RepresentationTheory.Rep","Mathlib.Algebra.Category.FGModuleCat.Limits","Mathlib.CategoryTheory.Preadditive.Schur","Mathlib.RepresentationTheory.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L190-L191","name":"FdRep.dualTensorIsoLinHom_hom_hom","line":190,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHom_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHom_hom_hom\"><span class=\"name\">FdRep</span>.<span class=\"name\">dualTensorIsoLinHom_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρV : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHom\">FdRep.dualTensorIsoLinHom</a> <span class=\"fn\">ρV</span> <span class=\"fn\">W</span></span>)</span>.hom</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Contraction.html#dualTensorHom\">dualTensorHom</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">W</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L182-L186","name":"FdRep.dualTensorIsoLinHom","line":182,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHom","doc":"When `V` and `W` are finite dimensional representations of a group `G`, the isomorphism\n`dualTensorHomEquiv k V W` of vector spaces induces an isomorphism of representations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHom\"><span class=\"name\">FdRep</span>.<span class=\"name\">dualTensorIsoLinHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρV : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of\">FdRep.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation.dual\">Representation.dual</a> <span class=\"fn\">ρV</span></span>)</span></span>)</span> <span class=\"fn\">W</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of\">FdRep.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation.linHom\">Representation.linHom</a> <span class=\"fn\">ρV</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ\">FdRep.ρ</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L174-L179","name":"FdRep.dualTensorIsoLinHomAux","line":174,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHomAux","doc":"Auxiliary definition for `FdRep.dualTensorIsoLinHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.dualTensorIsoLinHomAux\"><span class=\"name\">FdRep</span>.<span class=\"name\">dualTensorIsoLinHomAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρV : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategory.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of\">FdRep.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation.dual\">Representation.dual</a> <span class=\"fn\">ρV</span></span>)</span></span>)</span> <span class=\"fn\">W</span></span>)</span>.V</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of\">FdRep.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation.linHom\">Representation.linHom</a> <span class=\"fn\">ρV</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ\">FdRep.ρ</a> <span class=\"fn\">W</span></span>)</span></span>)</span></span>)</span>.V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L153-L154","name":"FdRep.instRightRigidCategoryFdRepToMonoidToDivInvMonoidInstLargeCategoryFdRepInstMonoidalCategoryFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfInstMonoidalCategoryFGModuleCatToRingInstLargeCategoryFGModuleCatToCommRingToEuclideanDomain","line":153,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instRightRigidCategoryFdRepToMonoidToDivInvMonoidInstLargeCategoryFdRepInstMonoidalCategoryFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfInstMonoidalCategoryFGModuleCatToRingInstLargeCategoryFGModuleCatToCommRingToEuclideanDomain","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instRightRigidCategoryFdRepToMonoidToDivInvMonoidInstLargeCategoryFdRepInstMonoidalCategoryFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfInstMonoidalCategoryFGModuleCatToRingInstLargeCategoryFGModuleCatToCommRingToEuclideanDomain\"><span class=\"name\">FdRep</span>.<span class=\"name\">instRightRigidCategoryFdRepToMonoidToDivInvMonoidInstLargeCategoryFdRepInstMonoidalCategoryFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfInstMonoidalCategoryFGModuleCatToRingInstLargeCategoryFGModuleCatToCommRingToEuclideanDomain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L134-L143","name":"FdRep.forget₂HomLinearEquiv","line":134,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.forget₂HomLinearEquiv","doc":"The forgetful functor to `Rep k G` preserves hom-sets and their vector space structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.forget₂HomLinearEquiv\"><span class=\"name\">FdRep</span>.<span class=\"name\">forget₂HomLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">Y</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">]</a>   <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L129-L131","name":"FdRep.finrank_hom_simple_simple","line":129,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.finrank_hom_simple_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.finrank_hom_simple_simple\"><span class=\"name\">FdRep</span>.<span class=\"name\">finrank_hom_simple_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Simple.html#CategoryTheory.Simple\">CategoryTheory.Simple</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Simple.html#CategoryTheory.Simple\">CategoryTheory.Simple</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#FiniteDimensional.finrank\">FiniteDimensional.finrank</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">W</span></span>)</span></span> then <span class=\"fn\">1</span> else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L126-L126","name":"FdRep.instHasKernelsFdRepInstLargeCategoryFdRepInstHasZeroMorphismsActionInstCategoryActionFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfPreadditiveHasZeroMorphismsInstPreadditiveFGModuleCatInstLargeCategoryFGModuleCat","line":126,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instHasKernelsFdRepInstLargeCategoryFdRepInstHasZeroMorphismsActionInstCategoryActionFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfPreadditiveHasZeroMorphismsInstPreadditiveFGModuleCatInstLargeCategoryFGModuleCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instHasKernelsFdRepInstLargeCategoryFdRepInstHasZeroMorphismsActionInstCategoryActionFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfPreadditiveHasZeroMorphismsInstPreadditiveFGModuleCatInstLargeCategoryFGModuleCat\"><span class=\"name\">FdRep</span>.<span class=\"name\">instHasKernelsFdRepInstLargeCategoryFdRepInstHasZeroMorphismsActionInstCategoryActionFGModuleCatToRingToDivisionRingInstLargeCategoryFGModuleCatOfPreadditiveHasZeroMorphismsInstPreadditiveFGModuleCatInstLargeCategoryFGModuleCat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasKernels\">CategoryTheory.Limits.HasKernels</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L109-L110","name":"FdRep.forget₂_ρ","line":109,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.forget₂_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.forget₂_ρ\"><span class=\"name\">FdRep</span>.<span class=\"name\">forget₂_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">Rep.ρ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>)</span>.obj <span class=\"fn\">V</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ\">FdRep.ρ</a> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L106-L107","name":"FdRep.instHasForget₂FdRepRepToRingToDivisionRingInstLargeCategoryFdRepInstConcreteCategoryFdRepInstLargeCategoryFdRepInstCategoryActionModuleCatModuleCategoryOfInstConcreteCategoryActionInstCategoryActionModuleConcreteCategory","line":106,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instHasForget₂FdRepRepToRingToDivisionRingInstLargeCategoryFdRepInstConcreteCategoryFdRepInstLargeCategoryFdRepInstCategoryActionModuleCatModuleCategoryOfInstConcreteCategoryActionInstCategoryActionModuleConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instHasForget₂FdRepRepToRingToDivisionRingInstLargeCategoryFdRepInstConcreteCategoryFdRepInstLargeCategoryFdRepInstCategoryActionModuleCatModuleCategoryOfInstConcreteCategoryActionInstCategoryActionModuleConcreteCategory\"><span class=\"name\">FdRep</span>.<span class=\"name\">instHasForget₂FdRepRepToRingToDivisionRingInstLargeCategoryFdRepInstConcreteCategoryFdRepInstLargeCategoryFdRepInstCategoryActionModuleCatModuleCategoryOfInstConcreteCategoryActionInstCategoryActionModuleConcreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L100-L100","name":"FdRep.of_ρ","line":100,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of_ρ\"><span class=\"name\">FdRep</span>.<span class=\"name\">of_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of\">FdRep.of</a> <span class=\"fn\">ρ</span></span>)</span>.ρ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ρ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L99-L103","name":"FdRep.of","line":99,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of","doc":"Lift an unbundled representation to `FdRep`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.of\"><span class=\"name\">FdRep</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ρ : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Basic.html#Representation\">Representation</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L91-L96","name":"FdRep.Iso.conj_ρ","line":91,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.Iso.conj_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.Iso.conj_ρ\"><span class=\"name\">FdRep</span>.<span class=\"name\">Iso</span>.<span class=\"name\">conj_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ\">FdRep.ρ</a> <span class=\"fn\">W</span></span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Basic.html#LinearEquiv.conj\">LinearEquiv.conj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.isoToLinearEquiv\">FdRep.isoToLinearEquiv</a> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ\">FdRep.ρ</a> <span class=\"fn\">V</span></span>)</span> <span class=\"fn\">g</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L86-L88","name":"FdRep.isoToLinearEquiv","line":86,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.isoToLinearEquiv","doc":"The underlying `LinearEquiv` of an isomorphism of representations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.isoToLinearEquiv\"><span class=\"name\">FdRep</span>.<span class=\"name\">isoToLinearEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">W</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L81-L83","name":"FdRep.ρ","line":81,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ","doc":"The monoid homomorphism corresponding to the action of `G` onto `V : FdRep k G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.ρ\"><span class=\"name\">FdRep</span>.<span class=\"name\">ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">V</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L76-L79","name":"FdRep.instFiniteDimensionalHomFdRepToQuiverToCategoryStructInstLargeCategoryFdRepToDivisionRingHomGroupInstPreadditiveFdRepInstLargeCategoryFdRepHomModuleToSemiringToDivisionSemiringInstLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep","line":76,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instFiniteDimensionalHomFdRepToQuiverToCategoryStructInstLargeCategoryFdRepToDivisionRingHomGroupInstPreadditiveFdRepInstLargeCategoryFdRepHomModuleToSemiringToDivisionSemiringInstLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep","doc":"All hom spaces are finite dimensional. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instFiniteDimensionalHomFdRepToQuiverToCategoryStructInstLargeCategoryFdRepToDivisionRingHomGroupInstPreadditiveFdRepInstLargeCategoryFdRepHomModuleToSemiringToDivisionSemiringInstLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep\"><span class=\"name\">FdRep</span>.<span class=\"name\">instFiniteDimensionalHomFdRepToQuiverToCategoryStructInstLargeCategoryFdRepToDivisionRingHomGroupInstPreadditiveFdRepInstLargeCategoryFdRepHomModuleToSemiringToDivisionSemiringInstLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(W : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L73-L74","name":"FdRep.instFiniteDimensionalCoeFdRepTypeInstCoeSortFdRepTypeToDivisionRingInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepTypeInstModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","line":73,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instFiniteDimensionalCoeFdRepTypeInstCoeSortFdRepTypeToDivisionRingInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepTypeInstModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instFiniteDimensionalCoeFdRepTypeInstCoeSortFdRepTypeToDivisionRingInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepTypeInstModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType\"><span class=\"name\">FdRep</span>.<span class=\"name\">instFiniteDimensionalCoeFdRepTypeInstCoeSortFdRepTypeToDivisionRingInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepTypeInstModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L70-L71","name":"FdRep.instModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","line":70,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType\"><span class=\"name\">FdRep</span>.<span class=\"name\">instModuleCoeFdRepTypeInstCoeSortFdRepTypeToSemiringToDivisionSemiringToSemifieldToAddCommMonoidInstAddCommGroupCoeFdRepTypeInstCoeSortFdRepType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L67-L68","name":"FdRep.instAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","line":67,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instAddCommGroupCoeFdRepTypeInstCoeSortFdRepType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instAddCommGroupCoeFdRepTypeInstCoeSortFdRepType\"><span class=\"name\">FdRep</span>.<span class=\"name\">instAddCommGroupCoeFdRepTypeInstCoeSortFdRepType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort.coe\">CoeSort.coe</a> <span class=\"fn\">V</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L64-L65","name":"FdRep.instCoeSortFdRepType","line":64,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instCoeSortFdRepType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instCoeSortFdRepType\"><span class=\"name\">FdRep</span>.<span class=\"name\">instCoeSortFdRepType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L62-L62","name":"FdRep.instLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep","line":62,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep\"><span class=\"name\">FdRep</span>.<span class=\"name\">instLinearToSemiringToDivisionSemiringToSemifieldFdRepInstLargeCategoryFdRepInstPreadditiveFdRepInstLargeCategoryFdRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L60-L60","name":"FdRep.instHasFiniteLimitsFdRepInstLargeCategoryFdRep","line":60,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instHasFiniteLimitsFdRepInstLargeCategoryFdRep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instHasFiniteLimitsFdRepInstLargeCategoryFdRep\"><span class=\"name\">FdRep</span>.<span class=\"name\">instHasFiniteLimitsFdRepInstLargeCategoryFdRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteLimits.html#CategoryTheory.Limits.HasFiniteLimits\">CategoryTheory.Limits.HasFiniteLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L59-L59","name":"FdRep.instPreadditiveFdRepInstLargeCategoryFdRep","line":59,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instPreadditiveFdRepInstLargeCategoryFdRep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instPreadditiveFdRepInstLargeCategoryFdRep\"><span class=\"name\">FdRep</span>.<span class=\"name\">instPreadditiveFdRepInstLargeCategoryFdRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L58-L58","name":"FdRep.instConcreteCategoryFdRepInstLargeCategoryFdRep","line":58,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instConcreteCategoryFdRepInstLargeCategoryFdRep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instConcreteCategoryFdRepInstLargeCategoryFdRep\"><span class=\"name\">FdRep</span>.<span class=\"name\">instConcreteCategoryFdRepInstLargeCategoryFdRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L57-L57","name":"FdRep.instLargeCategoryFdRep","line":57,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instLargeCategoryFdRep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep.instLargeCategoryFdRep\"><span class=\"name\">FdRep</span>.<span class=\"name\">instLargeCategoryFdRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\">FdRep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/RepresentationTheory/FdRep.lean#L47-L49","name":"FdRep","line":47,"kind":"def","docLink":"./Mathlib/RepresentationTheory/FdRep.html#FdRep","doc":"The category of finite dimensional `k`-linear representations of a monoid `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/FdRep.html#FdRep\"><span class=\"name\">FdRep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}