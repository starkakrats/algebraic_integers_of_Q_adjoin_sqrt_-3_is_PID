{"name":"Mathlib.Order.Category.FinBoolAlg","instances":[{"typeNames":["FinBoolAlg","_builtin_typeu"],"name":"FinBoolAlg.instCoeSortFinBoolAlgType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"FinBoolAlg.instBooleanAlgebraαToBoolAlg","className":"BooleanAlgebra"},{"typeNames":["FinBoolAlg"],"name":"FinBoolAlg.instInhabitedFinBoolAlg","className":"Inhabited"},{"typeNames":["FinBoolAlg"],"name":"FinBoolAlg.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["FinBoolAlg"],"name":"FinBoolAlg.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Quiver.Hom","CategoryTheory.Bundled.α","CategoryTheory.Bundled.α"],"name":"FinBoolAlg.instBoundedLatticeHomClass","className":"BoundedLatticeHomClass"},{"typeNames":["FinBoolAlg","BoolAlg"],"name":"FinBoolAlg.hasForgetToBoolAlg","className":"CategoryTheory.HasForget₂"},{"typeNames":["FinBoolAlg","FinBddDistLat"],"name":"FinBoolAlg.hasForgetToFinBddDistLat","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"FinBoolAlg.forgetToBoolAlgFull","className":"CategoryTheory.Full"},{"typeNames":["CategoryTheory.forget₂"],"name":"FinBoolAlg.forgetToBoolAlgFaithful","className":"CategoryTheory.Faithful"},{"typeNames":["FinBoolAlg","FinPartOrd"],"name":"FinBoolAlg.hasForgetToFinPartOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"FinBoolAlg.forgetToFinPartOrdFaithful","className":"CategoryTheory.Faithful"}],"imports":["Init","Mathlib.Data.Fintype.Powerset","Mathlib.Order.Category.BoolAlg","Mathlib.Order.Category.FinBddDistLat","Mathlib.Order.Hom.CompleteLattice","Mathlib.Tactic.ApplyFun"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L164-L167","name":"fintypeToFinBoolAlgOp","line":164,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp","doc":"The powerset functor. `Set` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp\"><span class=\"name\">fintypeToFinBoolAlgOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L163-L163","name":"fintypeToFinBoolAlgOp_map","line":163,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_map\"><span class=\"name\">fintypeToFinBoolAlgOp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp\">fintypeToFinBoolAlgOp</a>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">let src :=\n      <span class=\"fn\">{\n        <span class=\"fn\">toSupHom</span> :=\n          <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n            <span class=\"fn\">map_sup'</span> :=\n              <span class=\"fn\">(_ :\n                <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n        <span class=\"fn\">map_inf'</span> :=\n          <span class=\"fn\">(_ :\n            <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n              <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                 <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>;\n    <span class=\"fn\">{\n      <span class=\"fn\">toLatticeHom</span> :=\n        <span class=\"fn\">{\n          <span class=\"fn\">toSupHom</span> :=\n            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n              <span class=\"fn\">map_sup'</span> :=\n                <span class=\"fn\">(_ :\n                  <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#SupHom.toFun\">SupHom.toFun</a>\n                        <span class=\"fn\"><span class=\"fn\">{\n                            <span class=\"fn\">toSupHom</span> :=\n                              <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n                                <span class=\"fn\">map_sup'</span> :=\n                                  <span class=\"fn\">(_ :\n                                    <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                         <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n                            <span class=\"fn\">map_inf'</span> :=\n                              <span class=\"fn\">(_ :\n                                <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>                                       <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>.toSupHom</span>\n                        <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                       <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#SupHom.toFun\">SupHom.toFun</a>\n                          <span class=\"fn\"><span class=\"fn\">{\n                              <span class=\"fn\">toSupHom</span> :=\n                                <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n                                  <span class=\"fn\">map_sup'</span> :=\n                                    <span class=\"fn\">(_ :\n                                      <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                           <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a>                                             <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n                              <span class=\"fn\">map_inf'</span> :=\n                                <span class=\"fn\">(_ :\n                                  <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>                                         <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>.toSupHom</span>\n                          <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a>                         <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#SupHom.toFun\">SupHom.toFun</a>\n                          <span class=\"fn\"><span class=\"fn\">{\n                              <span class=\"fn\">toSupHom</span> :=\n                                <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n                                  <span class=\"fn\">map_sup'</span> :=\n                                    <span class=\"fn\">(_ :\n                                      <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                           <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a>                                             <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n                              <span class=\"fn\">map_inf'</span> :=\n                                <span class=\"fn\">(_ :\n                                  <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>                                         <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>.toSupHom</span>\n                          <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n          <span class=\"fn\">map_inf'</span> :=\n            <span class=\"fn\">(_ :\n              <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#SupHom.toFun\">SupHom.toFun</a>\n                    <span class=\"fn\"><span class=\"fn\">{\n                        <span class=\"fn\">toSupHom</span> :=\n                          <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n                            <span class=\"fn\">map_sup'</span> :=\n                              <span class=\"fn\">(_ :\n                                <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n                        <span class=\"fn\">map_inf'</span> :=\n                          <span class=\"fn\">(_ :\n                            <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                              <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                 <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>.toSupHom</span>\n                    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                   <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#SupHom.toFun\">SupHom.toFun</a>\n                      <span class=\"fn\"><span class=\"fn\">{\n                          <span class=\"fn\">toSupHom</span> :=\n                            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n                              <span class=\"fn\">map_sup'</span> :=\n                                <span class=\"fn\">(_ :\n                                  <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n                          <span class=\"fn\">map_inf'</span> :=\n                            <span class=\"fn\">(_ :\n                              <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>                                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>.toSupHom</span>\n                      <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>                     <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#SupHom.toFun\">SupHom.toFun</a>\n                      <span class=\"fn\"><span class=\"fn\">{\n                          <span class=\"fn\">toSupHom</span> :=\n                            <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span></span>,\n                              <span class=\"fn\">map_sup'</span> :=\n                                <span class=\"fn\">(_ :\n                                  <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                       <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n                          <span class=\"fn\">map_inf'</span> :=\n                            <span class=\"fn\">(_ :\n                              <span class=\"fn\">∀ (<span class=\"fn\">a </span>b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>),\n                                <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>                                   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a>                                     <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>.toSupHom</span>\n                      <span class=\"fn\">b</span></span></span></span></span>)</span> }</span>,\n      <span class=\"fn\">map_top'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span>,\n      <span class=\"fn\">map_bot'</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.setPreimage\">CompleteLatticeHom.setPreimage</a> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span> }</span></span>)</span>.op</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L163-L163","name":"fintypeToFinBoolAlgOp_obj","line":163,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp_obj\"><span class=\"name\">fintypeToFinBoolAlgOp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#fintypeToFinBoolAlgOp\">fintypeToFinBoolAlgOp</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\">FinBoolAlg.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L156-L159","name":"finBoolAlg_dual_comp_forget_to_finBddDistLat","line":156,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#finBoolAlg_dual_comp_forget_to_finBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#finBoolAlg_dual_comp_forget_to_finBddDistLat\"><span class=\"name\">finBoolAlg_dual_comp_forget_to_finBddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">FinBoolAlg.dual</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat\">FinBddDistLat</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat\">FinBddDistLat</a></span>)</span> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat.dual\">FinBddDistLat.dual</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L147-L151","name":"FinBoolAlg.dualEquiv","line":147,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv","doc":"The equivalence between `FinBoolAlg` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L146-L146","name":"FinBoolAlg.dualEquiv_functor","line":146,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_functor\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv\">FinBoolAlg.dualEquiv</a>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">FinBoolAlg.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L146-L146","name":"FinBoolAlg.dualEquiv_inverse","line":146,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv_inverse\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dualEquiv\">FinBoolAlg.dualEquiv</a>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">FinBoolAlg.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L140-L142","name":"FinBoolAlg.dual","line":140,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L139-L139","name":"FinBoolAlg.dual_map","line":139,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual_map\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat.toBddLat\">BddDistLat.toBddLat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\">BoolAlg.toBddDistLat</a> <span class=\"fn\"><span class=\"fn\">X</span>.toBoolAlg</span></span>)</span></span>)</span>.toLat</span></span>\n  <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddDistLat.html#BddDistLat.toBddLat\">BddDistLat.toBddLat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg.toBddDistLat\">BoolAlg.toBddDistLat</a> <span class=\"fn\"><span class=\"fn\">Y</span>.toBoolAlg</span></span>)</span></span>)</span>.toLat</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">FinBoolAlg.dual</a>.map <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">BoundedLatticeHom.dual</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L139-L139","name":"FinBoolAlg.dual_obj","line":139,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual_obj\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">dual_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.dual\">FinBoolAlg.dual</a>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\">FinBoolAlg.of</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBoolAlg</span></span>)</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L131-L135","name":"FinBoolAlg.Iso.mk","line":131,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk","doc":"Constructs an equivalence between finite Boolean algebras from an order isomorphism between\nthem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toBoolAlg</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toBoolAlg</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L130-L130","name":"FinBoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun","line":130,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_hom_toLatticeHom_toSupHom_toFun\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom_toLatticeHom_toSupHom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toBoolAlg</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toBoolAlg</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toBoolAlg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk\">FinBoolAlg.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.hom</span>.toSupHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L130-L130","name":"FinBoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun","line":130,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk_inv_toLatticeHom_toSupHom_toFun\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv_toLatticeHom_toSupHom_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.toBoolAlg</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toBoolAlg</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.toBoolAlg</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.Iso.mk\">FinBoolAlg.Iso.mk</a> <span class=\"fn\">e</span></span>)</span>.inv</span>.toSupHom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">e</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L112-L125","name":"FinBoolAlg.forgetToFinPartOrdFaithful","line":112,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToFinPartOrdFaithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToFinPartOrdFaithful\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">forgetToFinPartOrdFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L107-L109","name":"FinBoolAlg.hasForgetToFinPartOrd","line":107,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd\">FinPartOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L106-L106","name":"FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj","line":106,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_obj\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd_forget₂_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.obj <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinPartOrd.html#FinPartOrd.of\">FinPartOrd.of</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBoolAlg</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L106-L106","name":"FinBoolAlg.hasForgetToFinPartOrd_forget₂_map","line":106,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinPartOrd_forget₂_map\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinPartOrd_forget₂_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.HasForget₂.forget₂</span>.map <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let_fun this :=\n    <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">let_fun this := <span class=\"fn\">f</span>;\n      <span class=\"fn\">this</span></span>)</span></span>;\n  <span class=\"fn\">this</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L102-L103","name":"FinBoolAlg.forgetToBoolAlgFaithful","line":102,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlgFaithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlgFaithful\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">forgetToBoolAlgFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Faithful\">CategoryTheory.Faithful</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L98-L99","name":"FinBoolAlg.forgetToBoolAlgFull","line":98,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlgFull","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.forgetToBoolAlgFull\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">forgetToBoolAlgFull</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Full\">CategoryTheory.Full</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L92-L95","name":"FinBoolAlg.hasForgetToFinBddDistLat","line":92,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinBddDistLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToFinBddDistLat\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToFinBddDistLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/FinBddDistLat.html#FinBddDistLat\">FinBddDistLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L88-L89","name":"FinBoolAlg.hasForgetToBoolAlg","line":88,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.hasForgetToBoolAlg\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">hasForgetToBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L85-L86","name":"FinBoolAlg.instBoundedLatticeHomClass","line":85,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instBoundedLatticeHomClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instBoundedLatticeHomClass\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">instBoundedLatticeHomClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#BoundedLatticeHomClass\">BoundedLatticeHomClass</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBoolAlg</span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toBoolAlg</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L77-L78","name":"FinBoolAlg.concreteCategory","line":77,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.concreteCategory\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L73-L74","name":"FinBoolAlg.largeCategory","line":73,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.largeCategory\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L70-L71","name":"FinBoolAlg.instInhabitedFinBoolAlg","line":70,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instInhabitedFinBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instInhabitedFinBoolAlg\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">instInhabitedFinBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L66-L67","name":"FinBoolAlg.coe_of","line":66,"kind":"theorem","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.coe_of\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\">FinBoolAlg.of</a> <span class=\"fn\">α</span></span>)</span>.toBoolAlg</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L61-L62","name":"FinBoolAlg.of","line":61,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of","doc":"Construct a bundled `FinBoolAlg` from `BooleanAlgebra` + `Fintype`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.of\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L48-L49","name":"FinBoolAlg.instBooleanAlgebraαToBoolAlg","line":48,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instBooleanAlgebraαToBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instBooleanAlgebraαToBoolAlg\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">instBooleanAlgebraαToBoolAlg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toBoolAlg</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L45-L46","name":"FinBoolAlg.instCoeSortFinBoolAlgType","line":45,"kind":"instance","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instCoeSortFinBoolAlgType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.instCoeSortFinBoolAlgType\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">instCoeSortFinBoolAlgType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L40-L40","name":"FinBoolAlg.isFintype","line":40,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.isFintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.isFintype\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">isFintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toBoolAlg</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L39-L39","name":"FinBoolAlg.toBoolAlg","line":39,"kind":"def","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.toBoolAlg\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">toBoolAlg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L38-L38","name":"FinBoolAlg.mk","line":38,"kind":"ctor","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg.mk\"><span class=\"name\">FinBoolAlg</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toBoolAlg : <a href=\"./Mathlib/Order/Category/BoolAlg.html#BoolAlg\">BoolAlg</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[isFintype : <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">toBoolAlg</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\">FinBoolAlg</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/8c661e5492d1852ac9a417cfc675b6545d77c4b7/Mathlib/Order/Category/FinBoolAlg.lean#L38-L40","name":"FinBoolAlg","line":38,"kind":"structure","docLink":"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg","doc":"The category of finite boolean algebras with bounded lattice morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/FinBoolAlg.html#FinBoolAlg\"><span class=\"name\">FinBoolAlg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}